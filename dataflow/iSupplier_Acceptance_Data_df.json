{
	"name": "iSupplier_Acceptance_Data_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "AllPoDistributions"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "SupplierAccountTypeSnapshot"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "EBSPRODR"
				},
				{
					"dataset": {
						"referenceName": "ds_Excel_input",
						"type": "DatasetReference"
					},
					"name": "BuyerCleanUp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv_output",
						"type": "DatasetReference"
					},
					"name": "iSupplierAcceptanceData"
				},
				{
					"dataset": {
						"referenceName": "ds_AzSql",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_AzSql",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "filter1csv1"
				},
				{
					"name": "select1csv1"
				},
				{
					"name": "derClum1csv1"
				},
				{
					"name": "derClum2csv1"
				},
				{
					"name": "derClum3csv1"
				},
				{
					"name": "select2csv1"
				},
				{
					"name": "agg1csv1"
				},
				{
					"name": "select4csv1"
				},
				{
					"name": "derclum4csv1"
				},
				{
					"name": "derclum5csv1"
				},
				{
					"name": "join1csv1"
				},
				{
					"name": "select3csv1"
				},
				{
					"name": "select5csv1"
				},
				{
					"name": "sel1csv3"
				},
				{
					"name": "derclumn1csv3"
				},
				{
					"name": "flt1csv3"
				},
				{
					"name": "sel2csv3"
				},
				{
					"name": "derclmn2csv3"
				},
				{
					"name": "derclmn3csv3"
				},
				{
					"name": "agg2csv2"
				},
				{
					"name": "aggr1csv3"
				},
				{
					"name": "sel3csv3"
				},
				{
					"name": "aggr2csv3"
				},
				{
					"name": "join1csv3"
				},
				{
					"name": "sel4csv3"
				},
				{
					"name": "aggr3csv1"
				},
				{
					"name": "select6csv1"
				},
				{
					"name": "join2csv1"
				},
				{
					"name": "select7csv1"
				},
				{
					"name": "derclum6csv1"
				},
				{
					"name": "derclum7csv1"
				},
				{
					"name": "select8csv1"
				},
				{
					"name": "aggr4csv1"
				},
				{
					"name": "derClum8csv1"
				},
				{
					"name": "aggr5csv1"
				},
				{
					"name": "join3csv1"
				},
				{
					"name": "derclum10csv1"
				},
				{
					"name": "select9csv1"
				},
				{
					"name": "join4csv1"
				},
				{
					"name": "select10csv1"
				},
				{
					"name": "select11csv1"
				},
				{
					"name": "select1csv4"
				},
				{
					"name": "join5csv1"
				},
				{
					"name": "select12csv1"
				},
				{
					"name": "select13csv1"
				},
				{
					"name": "aggr6csv1"
				},
				{
					"name": "derclum9csv1"
				},
				{
					"name": "join6csv1"
				},
				{
					"name": "select14csv1"
				},
				{
					"name": "join7csv1"
				},
				{
					"name": "select15csv1"
				},
				{
					"name": "select16csv1"
				},
				{
					"name": "join8csv1"
				},
				{
					"name": "select17csv1"
				},
				{
					"name": "dercsv1Clum11"
				},
				{
					"name": "derClum12csv1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllPoDistributions",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SupplierAccountTypeSnapshot",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EBSPRODR",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BuyerCleanUp",
				"AllPoDistributions filter({Authorization Status}=='APPROVED') ~> filter1csv1",
				"filter1csv1 select(mapColumn(",
				"          {Account Type},",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team} = {Buyer Type},",
				"          {Closure Status},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {PO Line #},",
				"          {PO Line Type},",
				"          {Project Number},",
				"          {Qty Ordered},",
				"          {Shipment #},",
				"          Supplier,",
				"          {Unit Price},",
				"          {Vendor Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1csv1",
				"select1csv1 derive(Month = toString(month(toDate({PO Creation Date}))),",
				"          Year = toString(year(toDate({PO Creation Date})))) ~> derClum1csv1",
				"derClum1csv1 derive({Snapshot Quarter} = toDate(iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-01-01',iif(Month=='3', Year+'-01-01',iif(Month=='4', Year+'-04-01',\r",
				"iif(Month=='5', Year+'-04-01',iif(Month=='6', Year+'-04-01',iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-07-01',\r",
				"iif(Month=='9', Year+'-07-01',Year+'-10-01'))))))))))) ~> derClum2csv1",
				"derClum2csv1 derive({Snapshot Quarter} = toDate(iif({Snapshot Quarter}<=toDate('2018-06-30'),'2018-07-01',toString({Snapshot Quarter})))) ~> derClum3csv1",
				"derClum3csv1 select(mapColumn(",
				"          {Account Type},",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Closure Status},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {PO Line #},",
				"          {PO Line Type},",
				"          {Project Number},",
				"          {Shipment #},",
				"          Supplier,",
				"          {Vendor Number},",
				"          {Snapshot Quarter}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2csv1",
				"select2csv1 aggregate(groupBy({PO #},",
				"          {Account Type},",
				"          {Authorization Status},",
				"          {Destination Org},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Vendor Number},",
				"          {Snapshot Quarter},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Closure Status},",
				"          {Project Number}),",
				"     {Extended Price} = sum(toDouble({Extended Price}))) ~> agg1csv1",
				"select3csv1 select(mapColumn(",
				"          {PO #},",
				"          {Authorization Status},",
				"          {Destination Org},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number} = {Vendor Number},",
				"          {Snapshot Quarter},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Project Number},",
				"          {Extended Price},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {Closure Status}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4csv1",
				"select4csv1 derive(Month = toString(month(toDate({PO Creation Date}))),",
				"          Year = toString(year(toDate({PO Creation Date})))) ~> derclum4csv1",
				"derclum4csv1 derive({Snapshot Quarter} = toDate(iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-01-01',iif(Month=='3', Year+'-01-01',\r",
				"iif(Month=='4', Year+'-04-01',iif(Month=='5', Year+'-04-01',iif(Month=='6', Year+'-04-01',\r",
				"iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-07-01',iif(Month=='9', Year+'-07-01',Year+'-10-01')))))))))),",
				"          {View Account Type} = iifNull({Vendor Account Type},'None',{Vendor Account Type}),",
				"          {Snapshot Month} = iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-02-01',\r",
				"iif(Month=='3', Year+'-03-01',iif(Month=='4', Year+'-04-01',\r",
				"iif(Month=='5', Year+'-05-01',iif(Month=='6', Year+'-06-01',\r",
				"iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-08-01',\r",
				"iif(Month=='9', Year+'-09-01',iif(Month=='10', Year+'-10-01',\r",
				"iif(Month=='11', Year+'-11-01',Year+'-12-01')))))))))))) ~> derclum5csv1",
				"agg2csv2, SupplierAccountTypeSnapshot join(agg2csv2@{Vendor Number} == SupplierAccountTypeSnapshot@{Vendor Number}",
				"     && {Snapshot Quarter} == {Snapshot Date},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1csv1",
				"join1csv1 select(mapColumn(",
				"          {PO #},",
				"          {Account Type},",
				"          {Authorization Status},",
				"          {Destination Org},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Snapshot Quarter},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Project Number},",
				"          {Extended Price},",
				"          {Right_Vendor Number} = {Vendor Name},",
				"          {Vendor Account Type},",
				"          {Snapshot Date},",
				"          {Vendor Type Code},",
				"          {Closure Status},",
				"          {Vendor Number} = {SupplierAccountTypeSnapshot@Vendor Number},",
				"          {Vendor Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3csv1",
				"derclum5csv1 select(mapColumn(",
				"          {PO #},",
				"          {Authorization Status},",
				"          {Destination Org},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Snapshot Quarter},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Extended Price},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5csv1",
				"EBSPRODR select(mapColumn(",
				"          VENDOR_NUM,",
				"          VENDOR_NAME,",
				"          VENDOR_TYPE,",
				"          SEGMENT1,",
				"          REVISION_NUM,",
				"          AUTHORIZATION_STATUS,",
				"          ACCEPTANCE_STATUS,",
				"          ACCEPTANCE_REQUIRED_FLAG,",
				"          CREATION_DATE,",
				"          APPROVED_DATE,",
				"          ACCEPTANCE_DUE_DATE,",
				"          ACTION_DATE,",
				"          ACCEPTED_FLAG,",
				"          ACCEPTING_PARTY,",
				"          CLOSED_DATE,",
				"          CLOSED_TIMEFRAME,",
				"          ACCEPTED,",
				"          ACCEPTANCE_TIME,",
				"          ACCEPTED_TIMEFRAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sel1csv3",
				"sel1csv3 derive({Data Published} = toString(currentTimestamp()-hours(8))) ~> derclumn1csv3",
				"derclumn1csv3 filter(!(isNull(APPROVED_DATE))) ~> flt1csv3",
				"flt1csv3 select(mapColumn(",
				"          {Supplier Number} = VENDOR_NUM,",
				"          {Supplier Name} = VENDOR_NAME,",
				"          {Purchase Order} = SEGMENT1,",
				"          Revision = REVISION_NUM,",
				"          {Acceptance Status} = ACCEPTANCE_STATUS,",
				"          {Acceptance Required Flag} = ACCEPTANCE_REQUIRED_FLAG,",
				"          {Approved Date} = APPROVED_DATE,",
				"          {Acknowledged Date} = ACTION_DATE,",
				"          CLOSED_TIMEFRAME,",
				"          Accepted = ACCEPTED,",
				"          {Time to Accept} = ACCEPTANCE_TIME,",
				"          {Acceptance Timeframe} = ACCEPTED_TIMEFRAME,",
				"          {Data Published}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sel2csv3",
				"sel2csv3 derive(Month = toString(month({Approved Date})),",
				"          Year = toString(year({Approved Date}))) ~> derclmn2csv3",
				"derclmn2csv3 derive({Snapshot Quarter} = toDate(iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-01-01',iif(Month=='3', Year+'-01-01',iif(Month=='4', Year+'-04-01',\r",
				"iif(Month=='5', Year+'-04-01',iif(Month=='6', Year+'-04-01',iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-07-01',\r",
				"iif(Month=='9', Year+'-07-01',Year+'-10-01')))))))))),",
				"          {Time to Accept} = toInteger(iif({Time to Accept}==0,0.0001,toFloat(iifNull({Time to Accept},0,{Time to Accept})))),",
				"          {Business Days to Accept} = ({Time to Accept}/7)*5) ~> derclmn3csv3",
				"agg1csv1 aggregate(groupBy({PO #},",
				"          {Account Type},",
				"          {Authorization Status},",
				"          {Destination Org},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Vendor Number},",
				"          {Snapshot Quarter},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Project Number}),",
				"     {Extended Price} = sum({Extended Price}),",
				"          {Closure Status} = replace(replace(replace(toString(collect({Closure Status})), \"[\",\"\"),\"]\",\"\"),'\"','')) ~> agg2csv2",
				"derclmn3csv3 aggregate(groupBy({Purchase Order},",
				"          {Supplier Number},",
				"          {Data Published}),",
				"     Max_Revision = max(Revision),",
				"          {Max_Approved Date} = max({Approved Date}),",
				"          {Last_Acknowledged Date} = last({Acknowledged Date}),",
				"          Last_Accepted = last(Accepted),",
				"          {Last_Time to Accept} = last({Time to Accept}),",
				"          {Last_Acceptance Timeframe} = last({Acceptance Timeframe}),",
				"          {Last_Business Days to Accept} = last({Business Days to Accept})) ~> aggr1csv3",
				"derclmn3csv3 select(mapColumn(",
				"          {Supplier Number},",
				"          {Supplier Name},",
				"          {Purchase Order},",
				"          Revision,",
				"          {Acceptance Required Flag},",
				"          {PO Approved Date} = {Approved Date},",
				"          {Accepted by Supplier Date} = {Acknowledged Date},",
				"          {Accepted Flag} = Accepted,",
				"          {Time to Accept},",
				"          {Accepted Status} = {Acceptance Timeframe},",
				"          {Snapshot Quarter},",
				"          {Business Days to Accept}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sel3csv3",
				"sel3csv3 aggregate(groupBy({Accepted Status},",
				"          {Accepted Flag},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          {Business Days to Accept},",
				"          {Purchase Order},",
				"          Revision,",
				"          {Snapshot Quarter},",
				"          {Supplier Name},",
				"          {Supplier Number},",
				"          {Time to Accept}),",
				"     each(match(name!='Accepted Status'&&name!='Accepted Flag'&&name!='Accepted by Supplier Date'&&name!='PO Approved Date'&&name!='Business Days to Accept'&&name!='Purchase Order'&&name!='Revision'&&name!='Snapshot Quarter'&&name!='Supplier Name'&&name!='Supplier Number'&&name!='Time to Accept'), $$ = first($$))) ~> aggr2csv3",
				"aggr1csv3, aggr2csv3 join(aggr1csv3@{Purchase Order} == aggr2csv3@{Purchase Order}",
				"     && aggr1csv3@{Supplier Number} == aggr2csv3@{Supplier Number}",
				"     && Max_Revision == Revision,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1csv3",
				"join1csv3 select(mapColumn(",
				"          {Purchase Order} = aggr1csv3@{Purchase Order},",
				"          {Supplier Number} = aggr1csv3@{Supplier Number},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted Flag},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          {Business Days to Accept},",
				"          Revision,",
				"          {Snapshot Quarter},",
				"          {Supplier Name},",
				"          {Time to Accept},",
				"          {Acceptance Required Flag}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sel4csv3",
				"derclum5csv1 aggregate(groupBy({Snapshot Quarter},",
				"          {Supplier Number},",
				"          {PO Creation Date},",
				"          {PO #}),",
				"     Supplier = count()) ~> aggr3csv1",
				"aggr3csv1 select(mapColumn(",
				"          {Snapshot Quarter},",
				"          {Supplier Number},",
				"          {PO Creation Date},",
				"          {PO #}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6csv1",
				"select6csv1, sel4csv3 join(select6csv1@{Supplier Number} == sel4csv3@{Supplier Number}",
				"     && {PO #} == {Purchase Order},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2csv1",
				"join2csv1 select(mapColumn(",
				"          {Snapshot Quarter} = select6csv1@{Snapshot Quarter},",
				"          {Supplier Number} = select6csv1@{Supplier Number},",
				"          {PO Creation Date},",
				"          {PO #},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted Flag},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          {Business Days to Accept},",
				"          Revision,",
				"          {Supplier Name},",
				"          {Time to Accept},",
				"          {Acceptance Required Flag}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7csv1",
				"select7csv1 derive(Accept = toDouble(iif({Accepted Flag}==\"Y\",1,0)),",
				"          {Accept On Time} = toDouble(iif(contains(array({Accepted Status}, ' '), #item == \"time\"),1,0)),",
				"          {Not Accepted} = toDouble(iif({Accepted Flag}==\"N\",1,0)),",
				"          Month = toString(month(toDate({PO Creation Date}))),",
				"          Year = toString(year(toDate({PO Creation Date})))) ~> derclum6csv1",
				"derclum6csv1 derive({PO Creation Quarter} = toString(iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-01-01',iif(Month=='3', Year+'-01-01',iif(Month=='4', Year+'-04-01',\r",
				"iif(Month=='5', Year+'-04-01',iif(Month=='6', Year+'-04-01',iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-07-01',\r",
				"iif(Month=='9', Year+'-07-01',Year+'-10-01')))))))))),",
				"          {Accepted Status} = iifNull({Accepted Status},'Not Accepted',{Accepted Status}),",
				"          {PO Creation Month} = toString(iif(Month=='1', Year+'-01-01',iif(Month=='2', Year+'-02-01',iif(Month=='3', Year+'-03-01',iif(Month=='4', Year+'-04-01',\r",
				"iif(Month=='5', Year+'-05-01',iif(Month=='6', Year+'-06-01',iif(Month=='7', Year+'-07-01',iif(Month=='8', Year+'-08-01',\r",
				"iif(Month=='9', Year+'-09-01',iif(Month=='10', Year+'-10-01',iif(Month=='11', Year+'-11-01',Year+'-12-01'))))))))))))) ~> derclum7csv1",
				"derclum7csv1 select(mapColumn(",
				"          {Snapshot Quarter},",
				"          {Supplier Number},",
				"          {PO Creation Date},",
				"          {PO #},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted Flag},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          {Business Days to Accept},",
				"          Revision,",
				"          {Supplier Name},",
				"          {Days to Accept} = {Time to Accept},",
				"          {Acceptance Required Flag},",
				"          Accept,",
				"          {Accept On Time},",
				"          {Not Accepted},",
				"          Month,",
				"          Year,",
				"          {PO Creation Quarter},",
				"          {PO Creation Month}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8csv1",
				"select8csv1 aggregate(groupBy({PO Creation Quarter},",
				"          {Supplier Number}),",
				"     Sum_Accept = sum(Accept),",
				"          {Sum_Accept On Time} = sum({Accept On Time}),",
				"          {Sum_Not Accepted} = sum({Not Accepted}),",
				"          Count = countDistinct({PO #}),",
				"          {Avg Days to Accept} = avg({Days to Accept}),",
				"          {Avg Business Days to Accept} = avg({Business Days to Accept})) ~> aggr4csv1",
				"aggr4csv1 derive({% Accepted} = toDouble(Sum_Accept / Count),",
				"          {% Accepted On Time} = toDouble({Sum_Accept On Time} / Count),",
				"          {% Not Accepted} = toDouble({Sum_Not Accepted} / Count)) ~> derClum8csv1",
				"derclum10csv1 aggregate(groupBy({Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {Snapshot Quarter},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type}),",
				"     each(match(name!='Authorization Status'&&name!='Buyer'&&name!='Buyer Org'&&name!='Buying Team'&&name!='Destination Org'&&name!='Extended Price'&&name!='PO #'&&name!='PO Creation Date'&&name!='Snapshot Quarter'&&name!='Supplier'&&name!='Supplier Number'&&name!='Vendor Account Type'&&name!='Vendor Type Code'&&name!='View Account Type'), $$ = first($$))) ~> aggr5csv1",
				"aggr5csv1, derClum8csv1 join({Snapshot Quarter} == {PO Creation Quarter}",
				"     && aggr5csv1@{Supplier Number} == aggr4csv1@{Supplier Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3csv1",
				"select5csv1 derive({Snapshot Quarter} = toString({Snapshot Quarter})) ~> derclum10csv1",
				"join3csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {Snapshot Quarter},",
				"          Supplier,",
				"          {Supplier Number} = aggr5csv1@{Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Quarter},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9csv1",
				"select9csv1, join1csv3 join({PO #} == aggr1csv3@{Purchase Order},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4csv1",
				"join4csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {Snapshot Quarter} = select9csv1@{Snapshot Quarter},",
				"          Supplier,",
				"          {Supplier Number} = select9csv1@{Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Quarter},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision,",
				"          {Supplier Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10csv1",
				"select10csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Quarter},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11csv1",
				"BuyerCleanUp select(mapColumn(",
				"          Name,",
				"          Manager",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1csv4",
				"select11csv1, select1csv4 join(Buyer == Name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5csv1",
				"join5csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Quarter},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision,",
				"          Name,",
				"          Manager",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12csv1",
				"select12csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Quarter},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision,",
				"          Manager",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13csv1",
				"select8csv1 aggregate(groupBy({PO Creation Month},",
				"          {Supplier Number}),",
				"     Sum_Accept = sum(Accept),",
				"          {Sum_Accept On Time} = sum({Accept On Time}),",
				"          {Sum_Not Accepted} = sum({Not Accepted}),",
				"          Count = countDistinct({PO #}),",
				"          {Avg Days to Accept} = avg({Days to Accept}),",
				"          {Avg Business Days to Accept} = avg({Business Days to Accept})) ~> aggr6csv1",
				"aggr6csv1 derive({% Accepted} = {Sum_Accept} / {Count},",
				"          {% Accepted On Time} = {Sum_Accept On Time} / {Count},",
				"          {% Not Accepted} = {Sum_Not Accepted} / {Count}) ~> derclum9csv1",
				"aggr5csv1, derclum9csv1 join({Snapshot Month} == {PO Creation Month}",
				"     && aggr5csv1@{Supplier Number} == aggr6csv1@{Supplier Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6csv1",
				"join6csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {Snapshot Quarter},",
				"          Supplier,",
				"          {Supplier Number} = aggr5csv1@{Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Month},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14csv1",
				"select14csv1, join1csv3 join({PO #} == aggr2csv3@{Purchase Order},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7csv1",
				"join7csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          {Snapshot Quarter} = select14csv1@{Snapshot Quarter},",
				"          Supplier,",
				"          {Supplier Number} = select14csv1@{Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Month},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision,",
				"          {Supplier Name},",
				"          {Supplier Number} = aggr2csv3@{Supplier Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15csv1",
				"select15csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Month},",
				"          Sum_Accept,",
				"          {Sum_Accept On Time},",
				"          {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {% Accepted},",
				"          {% Accepted On Time},",
				"          {% Not Accepted},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select16csv1",
				"derClum12csv1, select1csv4 join(Buyer == Name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8csv1",
				"join8csv1 select(mapColumn(",
				"          {Authorization Status},",
				"          Buyer,",
				"          {Buyer Org},",
				"          {Buying Team},",
				"          {Destination Org},",
				"          {Extended Price},",
				"          {PO #},",
				"          {PO Creation Date},",
				"          Supplier,",
				"          {Supplier Number},",
				"          {Vendor Account Type},",
				"          {Vendor Type Code},",
				"          {View Account Type},",
				"          {Closure Status},",
				"          {Project Number},",
				"          {Snapshot Month},",
				"          {PO Creation Month},",
				"          Accepted = Sum_Accept,",
				"          {Accepted on time} = {Sum_Accept On Time},",
				"          {Not Accepted} = {Sum_Not Accepted},",
				"          Count,",
				"          {Avg Days to Accept},",
				"          {Avg Business Days to Accept},",
				"          {Data Published},",
				"          {Accepted Status},",
				"          {Accepted by Supplier Date},",
				"          {PO Approved Date},",
				"          Revision,",
				"          Manager,",
				"          {Workflow Generating Data}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select17csv1",
				"select11csv1 derive({Workflow Generating Data} = \"iSupplier Acceptance Data.yxmd\") ~> dercsv1Clum11",
				"select16csv1 derive({Workflow Generating Data} = \"iSupplier Acceptance Data\") ~> derClum12csv1",
				"dercsv1Clum11 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['iSupplier_Acceptance_Data_csv1'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> iSupplierAcceptanceData",
				"select13csv1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink2",
				"select17csv1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink3"
			]
		}
	}
}