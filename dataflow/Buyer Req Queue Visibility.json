{
	"name": "Buyer Req Queue Visibility",
	"properties": {
		"folder": {
			"name": "timpildataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Buyer1inputoraclePOs",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "buyerinput2",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "PAG0_Project_Parameters_Vsat",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "invg0_buyer5input",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "commoditycode",
						"type": "DatasetReference"
					},
					"name": "source6"
				},
				{
					"dataset": {
						"referenceName": "invg0_manufacturer_item",
						"type": "DatasetReference"
					},
					"name": "source7"
				},
				{
					"dataset": {
						"referenceName": "POG0_All_Distribution_Vsat",
						"type": "DatasetReference"
					},
					"name": "source8"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText9",
						"type": "DatasetReference"
					},
					"name": "tableueBuyerReqQueue"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					},
					"name": "yxdbBuyerReqQueuewithOracleMPN"
				},
				{
					"dataset": {
						"referenceName": "yxdbbuyer2",
						"type": "DatasetReference"
					},
					"name": "yxdbBuyerReqQueue"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText25",
						"type": "DatasetReference"
					},
					"name": "tablueBuyerReqQueuewithOracleMPN"
				}
			],
			"transformations": [
				{
					"name": "ASSY"
				},
				{
					"name": "UnderCore"
				},
				{
					"name": "titlecase"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select3"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select4"
				},
				{
					"name": "join1"
				},
				{
					"name": "select5"
				},
				{
					"name": "join2"
				},
				{
					"name": "select6"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select8"
				},
				{
					"name": "select9"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "join3"
				},
				{
					"name": "select10"
				},
				{
					"name": "select11"
				},
				{
					"name": "select12"
				},
				{
					"name": "select13"
				},
				{
					"name": "select14"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "select15"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select16"
				},
				{
					"name": "join4"
				},
				{
					"name": "select17"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "select18"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "select19"
				},
				{
					"name": "join5"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "derivedColumn9"
				},
				{
					"name": "derivedColumn10"
				},
				{
					"name": "filter2"
				},
				{
					"name": "select20"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "join6"
				},
				{
					"name": "select21"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "derivedColumn11"
				},
				{
					"name": "select22"
				},
				{
					"name": "aggregate5"
				},
				{
					"name": "select23"
				},
				{
					"name": "filter3"
				},
				{
					"name": "select24"
				},
				{
					"name": "aggregate6"
				},
				{
					"name": "filter4"
				},
				{
					"name": "derivedColumn12"
				},
				{
					"name": "select25"
				},
				{
					"name": "join7"
				},
				{
					"name": "select26"
				},
				{
					"name": "derivedColumn13"
				},
				{
					"name": "join8"
				},
				{
					"name": "select27"
				},
				{
					"name": "derivedColumn14"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AUTHORIZATION_STATUS as string,",
				"          AWARD_CLASS_CURRENT_CONTRACT as string,",
				"          AWARD_CLASS_REQ as string,",
				"          BASE_CURRENCY_CODE as string,",
				"          BUYER_NAME as string,",
				"          CANCEL_REASON as string,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CLOSED_CODE as string,",
				"          CREATION_DATE as string,",
				"          CURRENCY_CODE as string,",
				"          DESCRIPTION as string,",
				"          DISTRIBUTION_AMOUNT as boolean,",
				"          DISTRIBUTION_LINE_NUMBER as boolean,",
				"          DISTRIBUTION_QUANTITY as double,",
				"          DOCUMENT_TYPE as string,",
				"          EXPENDITURE_ITEM_DATE as string,",
				"          EXPENDITURE_ORGANIZATION as string,",
				"          EXPENDITURE_TYPE as string,",
				"          FIXED_LEAD_TIME as short,",
				"          GL_DATE as string,",
				"          GL_CLOSED_DATE as string,",
				"          {ITEM$SV$PART_NUMBER} as string,",
				"          ITEM_DESCRIPTION as string,",
				"          ITEM_REVISION as short,",
				"          LAST_UPDATE_DATE_RQDLIN as string,",
				"          LAST_UPDATE_DATE_RQDST as string,",
				"          LEDGER_NAME as string,",
				"          LAST_UPDATE_DATE_RQHDR as string,",
				"          LINE_NUMBER as short,",
				"          LINE_TYPE as string,",
				"          MODIFIED_BY_AGENT_FLAG as boolean,",
				"          NEED_BY_DATE as string,",
				"          OPEN_FLAG as boolean,",
				"          PO_NUMBER as string,",
				"          POSTPROCESSING_LEAD_TIME as short,",
				"          PREPARER_NAME as string,",
				"          PREPARER_NUMBER as short,",
				"          PREPROCESSING_LEAD_TIME as short,",
				"          PROCESSING_LEAD_TIME as short,",
				"          PROJECT_NAME as string,",
				"          PROJECT_NUMBER as string,",
				"          REQ_ITEMCATPUR_KFF as string,",
				"          RATE as double,",
				"          RATE_DATE as string,",
				"          RATE_TYPE as string,",
				"          REQ_DELIVER_TO_LOCATION as string,",
				"          REQ_DESTINATION_ORG_CODE as string,",
				"          REQ_LINE_CANCEL_DATE as string,",
				"          REQ_LINE_CANCEL_FLAG as string,",
				"          REQ_LINE_CANCELLED_QUANTITY as double,",
				"          REQ_LINE_CLOSED_DATE as string,",
				"          REQ_LINE_ID as integer,",
				"          REQ_LINE_QTY_DELIVERED as short,",
				"          REQ_LINE_QUANTITY as double,",
				"          REQUESTOR_NAME as string,",
				"          REQUESTOR_NUMBER as integer,",
				"          REQUISITION_APPROVAL_DATE as string,",
				"          REQUISITION_CREATION_DATE as string,",
				"          SUGGESTED_BUYER_NAME as string,",
				"          REQUISITION_NUMBER as string,",
				"          SUGGESTED_VENDOR_NAME as string,",
				"          SUPPLIER_ITEM_PO as string,",
				"          SUPPLIER_ITEM_REQ as string,",
				"          TASK_NAME as string,",
				"          TASK_NUMBER as string,",
				"          UNIT_PRICE as double,",
				"          UNIT_OF_MEASURE as string,",
				"          UNIT_PRICE_BASE as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          {Buyer Name} as string,",
				"          Name as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          {First Name || ' ' || Last Name} as string,",
				"          FLast as string,",
				"          {Inactive Flag} as string,",
				"          {Buyer Type} as string,",
				"          {Buyer Org} as string,",
				"          Manager as string,",
				"          State as string,",
				"          {_c11} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          {A$COST_GROUP} as string,",
				"          {A$ZZ__________________________} as string,",
				"          COST_GROUP as string,",
				"          DEFAULT_TASK_MATERIAL as string,",
				"          DEFAULT_TASK_RESOURCE as string,",
				"          DEFAULT_TASK_WIPMAT as string,",
				"          EFFECTIVE_DATE_FROM as string,",
				"          EFFECTIVE_DATE_TO as string,",
				"          EMAIL_ADDRESS as string,",
				"          EXPENDITURE_TYPE_ERV as string,",
				"          EXPENDITURE_TYPE_FREIGHT as string,",
				"          EXPENDITURE_TYPE_IPV as string,",
				"          EXPENDITURE_TYPE_MISC as string,",
				"          EXPENDITURE_TYPE_TAX as string,",
				"          ORGANIZATION_CODE as string,",
				"          PLANNING_GROUP as string,",
				"          PROD_LINE_CLASS_CODE as short,",
				"          PROD_LINE_CLASS_CODE_BUS_UNIT as string,",
				"          PROD_LINE_CLASS_CODE_DESC as string,",
				"          PROD_LINE_FIN_ANALYST as string,",
				"          PROJECT_CREATION_DATE as string,",
				"          PROJECT_DESCRIPTION as string,",
				"          PROJECT_ID as short,",
				"          PROJECT_MANAGER as string,",
				"          PROJECT_NAME as string,",
				"          PROJECT_NUMBER as string,",
				"          PROJECT_STATUS as string,",
				"          SEGMENT as string,",
				"          WIP_CLASS as string,",
				"          WIP_CLASS_MAINTENANCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          Org as string,",
				"          {Planning Group} as string,",
				"          BA as string,",
				"          {Proj Name} as string,",
				"          {Proj Description} as string,",
				"          {Proj Mgr} as string,",
				"          {Supply Planning} as string,",
				"          {Proj Type} as string,",
				"          {Proj Status} as string,",
				"          JN as string,",
				"          {Proj Start Date} as date,",
				"          {Project Creation Date} as date,",
				"          {Project Closed Date} as date,",
				"          {Project Completion Date} as date,",
				"          {Cost Group} as string,",
				"          Duplicate as string,",
				"          {Demand Planning} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source4",
				"source(output(",
				"          ORGANIZATION_CODE as string,",
				"          ITEM_NUMBER as string,",
				"          ITEM_DESCRIPTION as string,",
				"          PLANNING_MAKE_BUY_CODE as string,",
				"          BUYER_NAME as string,",
				"          PLANNER_CODE as string,",
				"          PURCHASE_COMMOD as string,",
				"          UNIT_OF_MEASURE as string,",
				"          RECEIPT_ROUTING as string,",
				"          CUM_MANUFACTURING_LEAD_TIME as double,",
				"          CUMULATIVE_TOTAL_LEAD_TIME as double,",
				"          FIXED_LEAD_TIME as double,",
				"          POSTPROCESSING_LEAD_TIME as double,",
				"          PREPROCESSING_LEAD_TIME as double,",
				"          PROCESSING_LEAD_TIME as double,",
				"          {ITEMS$TARGET_COST} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source5",
				"source(output(",
				"          {Commodity Code} as string,",
				"          GEMS as string,",
				"          {Description Level 1} as string,",
				"          {Long Description} as string,",
				"          Description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source6",
				"source(output(",
				"          {A$CHART_OF_ACCOUNTS_NAME} as string,",
				"          {A$ITEM_DESCRIPTION} as string,",
				"          {A$MASTER_ORGANIZATION_NAME} as string,",
				"          {A$ORGANIZATION_NAME} as string,",
				"          {A$ZZ__________________________} as string,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CONVERSION_TYPE as string,",
				"          {ITEM$AGILE_ACCESS_RESTRICTION} as string,",
				"          {ITEM$AGILE_ITEM__PART__CATEGOR} as string,",
				"          {ITEM$ASSET_NAME} as string,",
				"          {ITEM$ASSET_NOMENCLATURE} as string,",
				"          {ITEM$ASSET_VARIANT} as string,",
				"          {ITEM$BIN_QTY} as string,",
				"          {ITEM$BUILD_IN_SOLUMINA_DATE} as string,",
				"          {ITEM$COMSEC} as integer,",
				"          {ITEM$CUI} as string,",
				"          {ITEM$COUNTRY_OF_ORIGIN} as string,",
				"          {ITEM$ESD_HANDLING} as string,",
				"          {ITEM$EXCLUDE_FROM_LEAD_TIME_UP} as string,",
				"          {ITEM$EXTERNAL_SYSTEMS} as string,",
				"          {ITEM$INVOICE_UOM} as string,",
				"          {ITEM$ITEM_NET_WEIGHT__LBS} as string,",
				"          {ITEM$ITEM_SETUP_VERIFIED} as string,",
				"          {ITEM$LEAD_TIME_UPDATED} as string,",
				"          {ITEM$LEGACY_SYSTEM_ITEM_NUMBER} as string,",
				"          {ITEM$MATERIAL_EXPIRATION_VALUE} as string,",
				"          {ITEM$MOISTURE_SENSITIVITY_LEVE} as string,",
				"          {ITEM$NON_MRP_ACTIONABLE} as string,",
				"          {ITEM$REPLENISHMENT_TYPE} as string,",
				"          {ITEM$RESERVED_PN} as boolean,",
				"          {ITEM$ST_APPLIES} as string,",
				"          {ITEM$SPACE_FLIGHT_DELIVERABLE} as string,",
				"          {ITEM$STORAGE_CONDITION} as string,",
				"          {ITEM$TARGET_COST} as string,",
				"          {ITEM$USE_AS_REQUIRED} as string,",
				"          {ITEM$VMI_ITEM} as string,",
				"          {ITEM$WARRANTY_PERIOD} as string,",
				"          {ITEM$INVENTORY_ITEM_ID} as integer,",
				"          {ITEM$ORGANIZATION_ID} as short,",
				"          {ITEM$SV$PART_NUMBER} as string,",
				"          ITEM_DESCRIPTION as string,",
				"          ITEM_STATUS as string,",
				"          ITEM_STATUS_CODE as string,",
				"          ITEM_TYPE as string,",
				"          {MFG$SUPPLIER_NAME} as short,",
				"          {MFGPT$LAST_TIME_BUY} as string,",
				"          {MFGPT$MFR_PART_DESCRIPTION} as string,",
				"          {MFGPT$STATUS} as string,",
				"          {MFGPT$SUPPLEMENTAL_DATA} as string,",
				"          MANUFACTURER_DESCRIPTION as string,",
				"          MANUFACTURER_NAME as string,",
				"          MANUFACTURER_PART_DESCR as string,",
				"          MANUFACTURER_PART_NUMBER as string,",
				"          MASTER_ORGANIZATION_NAME as string,",
				"          ORGANIZATION as string,",
				"          ORGANIZATION_CODE as string,",
				"          ORGANIZATION_NAME as string,",
				"          UNIT_OF_MEASURE as string,",
				"          {Z$$_________________________} as string,",
				"          {Z$INVG0_ITEMS} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source7",
				"source(output(",
				"          {Vendor Name} as string,",
				"          {Vendor Number} as string,",
				"          {Item$SV$Part Number} as string,",
				"          {Po Header Creation Date} as string,",
				"          {Po Line Creation Date} as string,",
				"          {Po Line Number} as string,",
				"          {Po Number} as string,",
				"          {_c7} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source8",
				"source1 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,\"ASSY\",'') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ASSY",
				"ASSY select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'_',\" \") = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UnderCore",
				"UnderCore select(mapColumn(",
				"          each(match(true()),",
				"               initCap($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> titlecase",
				"titlecase select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Line Closed Code} = {Closed Code},",
				"          {Creation Date},",
				"          {Currency Code},",
				"          Description,",
				"          {Distribution Amount},",
				"          {Dist #} = {Distribution Line Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT} = {Fixed Lead Time},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number} = {Item$sv$part Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Line #} = {Line Number},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Need By Date},",
				"          {Open Flag},",
				"          {PO Number} = {Po Number},",
				"          {ITEM Postproc LT} = {Postprocessing Lead Time},",
				"          {Preparer } = {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT} = {Preprocessing Lead Time},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project #} = {Project Number},",
				"          {Purch Comm Code} = {Req Itemcatpur Kff},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc} = {Req Deliver To Location},",
				"          {Dest Org Code} = {Req Destination Org Code},",
				"          {Line Cancel Date} = {Req Line Cancel Date},",
				"          {Line Cancel Flag} = {Req Line Cancel Flag},",
				"          {Line Qty Canc} = {Req Line Cancelled Quantity},",
				"          {Line Closed Date} = {Req Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv} = {Req Line Qty Delivered},",
				"          {Line Qty} = {Req Line Quantity},",
				"          Requestor = {Requestor Name},",
				"          {Requestor Number},",
				"          {Approval Date} = {Requisition Approval Date},",
				"          {Requisition Creation Date},",
				"          {Suggested Buyer} = {Suggested Buyer Name},",
				"          {Req #} = {Requisition Number},",
				"          {Suggested Supplier} = {Suggested Vendor Name},",
				"          {Supplier Item PO} = {Supplier Item Po},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task #} = {Task Number},",
				"          {Unit Price},",
				"          UOM = {Unit Of Measure},",
				"          {Unit Price Base}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive({Line Amt} = toString({Unit Price} * ({Line Qty} - {Line Qty Canc})),",
				"          {Unit Price} = toInteger(round({Unit Price}))) ~> derivedColumn1",
				"derivedColumn4 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code} = {Line Closed Code},",
				"          {Req Create Date} = {Creation Date},",
				"          {Currency Code},",
				"          {REQ Description} = Description,",
				"          {Distribution Amount},",
				"          {Distribution Number} = {Dist #},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Line Number} = {Line #},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Need By Date},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name} = {Preparer },",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number} = {Project #},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code} = {Dest Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag} = {Line Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          Requestor,",
				"          {Requestor Number},",
				"          {Approval Date},",
				"          {Requisition Creation Date},",
				"          {Suggested Buyer},",
				"          {REQ Number} = {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number} = {Task #},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select8 derive({Report Date} = toString(currentTimestamp()),",
				"          {PO Buyer Name} = \"[Null]\",",
				"          Approved = toDate({Approval Date}),",
				"          {Req Create} = toDate({Req Create Date}),",
				"          Need = toDate({Need By Date})) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date} = {Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Suggested Buyer Name},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {PO Buyer Name},",
				"          {Approved Date} = Approved,",
				"          {Req Create Date} = {Req Create},",
				"          {Need By Date} = Need",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"source2 filter(not(isNull({Buyer Name}))) ~> filter1",
				"filter1 select(mapColumn(",
				"          {Buyer Name},",
				"          Buyer = Name,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select3, select4 join({Suggested Buyer Name} == select4@{Buyer Name},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Suggested Buyer Name} = select3@{Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {Approved Date},",
				"          {Req Create Date},",
				"          {Need By Date},",
				"          Name = Buyer,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select5, select6 join({Project Number} == PROJECT_NUMBER",
				"     && {Org Code} == {Organization Code},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"source3 select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          PLANNING_GROUP,",
				"          {Project Business Area} = PROD_LINE_CLASS_CODE_BUS_UNIT,",
				"          {Organization Code} = ORGANIZATION_CODE,",
				"          {Product Segment} = SEGMENT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"derivedColumn1 derive({Line Amt} = toString(round(toDouble({Line Amt}))),",
				"          {Line Qty} = round({Line Qty}),",
				"          {Line Qty Delv} = round({Line Qty Delv}),",
				"          {Line Qty Canc} = round({Line Qty Canc})) ~> derivedColumn4",
				"select2 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Req Create Date},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line} = {Line Number},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Need By Date},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Closed Date} = {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name} = Requestor,",
				"          {Requestor Number},",
				"          {Approval Date},",
				"          {Requisition Creation Date},",
				"          {Suggested Buyer Name} = {Suggested Buyer},",
				"          {Req #} = {REQ Number},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"join2 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Suggested Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {Approved Date},",
				"          {Req Create Date},",
				"          {Need By Date},",
				"          Name,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          {Planning Group} = PLANNING_GROUP,",
				"          {Project Business Area},",
				"          {Organization Code},",
				"          {Product Segment}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select9 derive({Business Days in Queue} = ((toDate({Report Date}) - {Approved Date})/7)*5) ~> derivedColumn5",
				"derivedColumn5, select10 join({Org Code} == Org",
				"     && {Project Number} == JN,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"source4 select(mapColumn(",
				"          Org,",
				"          {Supply Planning},",
				"          JN",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"source5 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'ASSY','') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select11 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'_',' ') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12",
				"select12 select(mapColumn(",
				"          each(match(true()),",
				"               initCap($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"select13 select(mapColumn(",
				"          Org = {Organization Code},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Make/Buy} = {Planning Make Buy Code},",
				"          {Buyer Name},",
				"          {Planner Code},",
				"          {Purchase Commod},",
				"          UOM = {Unit Of Measure},",
				"          {Rcpt Routing} = {Receipt Routing},",
				"          {Cum Mfg LT} = {Cum Manufacturing Lead Time},",
				"          {Cum Total LT} = {Cumulative Total Lead Time},",
				"          {Fixed LT} = {Fixed Lead Time},",
				"          {Postprocessing LT} = {Postprocessing Lead Time},",
				"          {Preprocessing LT} = {Preprocessing Lead Time},",
				"          {Processing LT} = {Processing Lead Time},",
				"          {Items$target Cost}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"select14 derive({Preprocessing LT} = toInteger(round({Preprocessing LT})),",
				"          {Processing LT} = toInteger(round({Processing LT})),",
				"          {Postprocessing LT} = toInteger(round({Postprocessing LT})),",
				"          {Fixed LT} = toInteger(round({Fixed LT})),",
				"          {Cum Mfg LT} = toInteger(round({Cum Mfg LT})),",
				"          {Cum Total LT} = toInteger(round({Cum Total LT}))) ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          Org,",
				"          {Item #} = {Item Number},",
				"          {Item Desc} = {Item Description},",
				"          {Make/Buy},",
				"          {Buyer Name},",
				"          {Planner Code},",
				"          {Purchase Commod},",
				"          UOM,",
				"          {Rcpt Routing},",
				"          {Cum Mfg LT},",
				"          {Cum Total LT},",
				"          {Fixed LT},",
				"          {Postprocessing LT},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Items$target Cost}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"select15 aggregate(groupBy(Org,",
				"          {Item #},",
				"          {Item Desc},",
				"          {Make/Buy},",
				"          {Buyer Name},",
				"          {Planner Code},",
				"          {Purchase Commod},",
				"          UOM,",
				"          {Rcpt Routing},",
				"          {Items$target Cost}),",
				"     {Preprocessing LT} = min({Preprocessing LT}),",
				"          {Processing LT} = min({Processing LT}),",
				"          {Postprocessing LT} = min({Postprocessing LT}),",
				"          {Cum Mfg LT} = min({Cum Mfg LT}),",
				"          {Cum Total LT} = min({Cum Total LT}),",
				"          {Fixed LT} = min({Fixed LT})) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          Org,",
				"          {Item #},",
				"          {Item Desc},",
				"          {Purchase Commod},",
				"          {Items$target Cost},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Postprocessing LT},",
				"          {Cum Mfg LT},",
				"          {Cum Total LT},",
				"          {Fixed LT}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select16",
				"join3, select16 join({Org Code} == select16@Org",
				"     && {Item Number} == {Item #},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Suggested Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {Approved Date},",
				"          {Req Create Date},",
				"          {Need By Date},",
				"          Name,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          {Planning Group},",
				"          {Project Business Area},",
				"          {Organization Code},",
				"          {Product Segment},",
				"          {Business Days in Queue},",
				"          {Supply Planning},",
				"          JN,",
				"          {Purchase Commod},",
				"          {Items$target Cost},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Postprocessing LT}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select17",
				"select17 derive({Total LT} = iif({Purch Comm Code} == \"10.100000\" ||{Purch Comm Code} == \"10.101100\" || {Purch Comm Code} == \"10.101300\" || {Purch Comm Code} == \"10.101400\" || {Purch Comm Code} == \"10.101700\" || {Purch Comm Code} == \"10.101800\" || {Purch Comm Code} == \"10.201700\",\r",
				"{Preprocessing LT} + {Processing LT} + {Postprocessing LT} +7,\r",
				"iif({Purch Comm Code} == \"10.101000\" || {Purch Comm Code} == \"10.102100\" || {Purch Comm Code} == \"10.201100\" || {Purch Comm Code} == \"10.201400\" || {Purch Comm Code} == \"10.201500\" || {Purch Comm Code} == \"10.201600\" || {Purch Comm Code} == \"10.202100\",\r",
				"{Preprocessing LT} + {Processing LT} + {Postprocessing LT} +14,\r",
				"iif({Purch Comm Code} == \"10.101600\" || {Purch Comm Code} == \"10.201200\" || {Purch Comm Code} == \"10.201300\" || {Purch Comm Code} == \"10.202300\",\r",
				"{Preprocessing LT} + {Processing LT} + {Postprocessing LT} +30, \r",
				"{Preprocessing LT} + {Processing LT} + {Postprocessing LT} +14)))) ~> derivedColumn7",
				"derivedColumn9 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name} = {Suggested Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {Approved Date},",
				"          {Req Create Date},",
				"          {Need By Date},",
				"          Name,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          {Planning Group},",
				"          {Project Business Area},",
				"          {Organization Code},",
				"          {Product Segment},",
				"          {Business Days in Queue},",
				"          {Supply Planning},",
				"          JN,",
				"          {Purchase Commod},",
				"          {Items$target Cost},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Postprocessing LT},",
				"          {Total LT},",
				"          {Req Urgency}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select18",
				"source6 aggregate(groupBy({Commodity Code},",
				"          {Description Level 1}),",
				"     count = count({Commodity Code})) ~> aggregate2",
				"aggregate2 select(mapColumn(",
				"          {Commodity Code},",
				"          {Commodity Type} = {Description Level 1}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select19",
				"select18, select19 join({Purchase Commod} == {Commodity Code},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"derivedColumn7 derive({Today Less Place Date} = toDate({Report Date}) - (iif(isNull({Total LT}), {Need By Date}, addDays({Need By Date}, -{Total LT})))) ~> derivedColumn8",
				"derivedColumn8 derive({Req Urgency} = iif({Today Less Place Date} < -7, 'Future', \r",
				"iif({Today Less Place Date} < 0,'This Week', \r",
				"iif({Today Less Place Date} == 0,'Today', 'Past Due')))) ~> derivedColumn9",
				"join5 derive({Commodity Type} = iif(isNull({Commodity Type}),'COTS', {Commodity Type})) ~> derivedColumn10",
				"select27 filter({Authorization Status} == \"APPROVED\" && {Cancel Flag} == \"N\" && {Document Type} == \"PURCHASE\" && !regexMatch({Req #}, '#') && {Closed Code} ==\"OPEN\") ~> filter2",
				"source7 select(mapColumn(",
				"          VPN = {ITEM$SV$PART_NUMBER},",
				"          {Item Description} = ITEM_DESCRIPTION,",
				"          {Item Status} = ITEM_STATUS,",
				"          {VPN Status} = ITEM_STATUS_CODE,",
				"          {Supplier Name} = {MFG$SUPPLIER_NAME},",
				"          {MPN Last Time Buy} = {MFGPT$LAST_TIME_BUY},",
				"          {MPN Description} = {MFGPT$MFR_PART_DESCRIPTION},",
				"          {MPN Status} = {MFGPT$STATUS},",
				"          {Manufacturer Description} = MANUFACTURER_DESCRIPTION,",
				"          {Manufacturer Name} = MANUFACTURER_NAME,",
				"          MPN = MANUFACTURER_PART_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select20",
				"select20 aggregate(groupBy(VPN,",
				"          {Manufacturer Name},",
				"          MPN),",
				"     each(match(name!='VPN'&&name!='Manufacturer Name'&&name!='MPN'), $$ = first($$))) ~> aggregate3",
				"aggregate3, derivedColumn11 join(aggregate3@VPN == aggregate4@VPN,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"aggregate3 select(mapColumn(",
				"          VPN,",
				"          {Manufacturer Name},",
				"          MPN,",
				"          {Item Description},",
				"          {Item Status},",
				"          {VPN Status},",
				"          {Supplier Name},",
				"          {MPN Last Time Buy},",
				"          {MPN Description},",
				"          {MPN Status},",
				"          {Manufacturer Description}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select21",
				"select21 aggregate(groupBy(VPN),",
				"     {First_Manufacturer Name} = first({Manufacturer Name}),",
				"          first_MPN = first(MPN),",
				"          {CountDistinct_Manufacturer Name} = countDistinct({Manufacturer Name}),",
				"          CountDistinct_MPN = countDistinct(MPN)) ~> aggregate4",
				"aggregate4 derive({Manufacturer (Name/Desc)} = iif({CountDistinct_Manufacturer Name} > 1,\"Multiple\",{First_Manufacturer Name}),",
				"          {MPN (Name/Desc)} = iif(CountDistinct_MPN > 1,\"Multiple\",first_MPN)) ~> derivedColumn11",
				"join6 select(mapColumn(",
				"          VPN = aggregate3@VPN,",
				"          {Manufacturer Name},",
				"          MPN,",
				"          {Item Description},",
				"          {Item Status},",
				"          {VPN Status},",
				"          {Supplier Name},",
				"          {MPN Last Time Buy},",
				"          {MPN Description},",
				"          {MPN Status},",
				"          {Manufacturer Description},",
				"          VPN = aggregate4@VPN,",
				"          {First_Manufacturer Name},",
				"          first_MPN,",
				"          {CountDistinct_Manufacturer Name},",
				"          CountDistinct_MPN,",
				"          {Manufacturer (Name/Desc)},",
				"          {MPN (Name/Desc)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select22",
				"select22 aggregate(groupBy(VPN,",
				"          {Manufacturer (Name/Desc)},",
				"          {MPN (Name/Desc)}),",
				"     {Item Status} = first({Item Status}),",
				"          {VPN Status} = first({VPN Status}),",
				"          {MPN Status} = first({MPN Status}),",
				"          {Manufacturer Description} = first({Manufacturer Description})) ~> aggregate5",
				"aggregate5 select(mapColumn(",
				"          each(match(true()),",
				"               trim($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select23",
				"select24 filter(not(isNull({Item Number}))) ~> filter3",
				"source8 select(mapColumn(",
				"          {Vendor Name},",
				"          {Vendor Number},",
				"          {Item Number} = {Item$SV$Part Number},",
				"          {Po Header Creation Date},",
				"          {Po Line Creation Date},",
				"          {Po Line Number},",
				"          {Po Number},",
				"          {_c7}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select24",
				"filter3 aggregate(groupBy({Item Number}),",
				"     {Last Po Number} = last({Po Number}),",
				"          {Last Po Line Number} = last({Po Line Number}),",
				"          {Last Po Line Creation Date} = last({Po Line Creation Date}),",
				"          {Last Vendor Name} = last({Vendor Name})) ~> aggregate6",
				"filter2 filter({Approved Date} >= toDate(\"2015-01-01\") && isNull({PO Number})) ~> filter4",
				"filter4 derive({Date Published} = currentTimestamp() - hours(8),",
				"          {Workflow Generating Data} = \"Buyer Req Que Visibility\") ~> derivedColumn12",
				"filter4 select(mapColumn(",
				"          {Approved Date},",
				"          {Authorization Status},",
				"          {Award Class Req},",
				"          {Buyer Name},",
				"          {Buyer Org},",
				"          {Buyer Type},",
				"          {Cancel Flag},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Amt},",
				"          {Line Qty},",
				"          {Line Type},",
				"          Manager,",
				"          {Need By Date},",
				"          {Org Code},",
				"          {PO Number},",
				"          {Postprocessing LT},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Req #},",
				"          {Req Create Date},",
				"          {Req Line},",
				"          {Req Line Id},",
				"          {Req Urgency},",
				"          {Requisition Creation Date},",
				"          {Suggested Supplier},",
				"          {Task Number},",
				"          {Total LT},",
				"          {Unit Price},",
				"          UOM",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select25",
				"select25, select23 join({Item Number} == VPN,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"join7 select(mapColumn(",
				"          {Approved Date},",
				"          {Authorization Status},",
				"          {Award Class Req},",
				"          {Buyer Name},",
				"          {Buyer Org},",
				"          {Buyer Type},",
				"          {Cancel Flag},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Amt},",
				"          {Line Qty},",
				"          {Line Type},",
				"          Manager,",
				"          {Need By Date},",
				"          {Org Code},",
				"          {PO Number},",
				"          {Postprocessing LT},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Req #},",
				"          {Req Create Date},",
				"          {Req Line},",
				"          {Req Line Id},",
				"          {Req Urgency},",
				"          {Requisition Creation Date},",
				"          {Suggested Supplier},",
				"          {Task Number},",
				"          {Total LT},",
				"          {Unit Price},",
				"          UOM,",
				"          VPN,",
				"          {Manufacturer (Name/Desc)},",
				"          {MPN (Name/Desc)},",
				"          {Item Status},",
				"          {VPN Status},",
				"          {MPN Status},",
				"          {Manufacturer Description}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select26",
				"select26 derive({Manufacturer (Name/Desc)} = iif(isNull({Manufacturer (Name/Desc)}),\"N/A\",{Manufacturer (Name/Desc)}),",
				"          {MPN (Name/Desc)} = iif(isNull({MPN (Name/Desc)}),\"N/A\", {MPN (Name/Desc)}),",
				"          Amount = {Line Qty} * {Unit Price},",
				"          {Workflow Generating Data} = \"Buyer Req Que visibility\") ~> derivedColumn13",
				"derivedColumn13, aggregate6 join(select26@{Item Number} == aggregate6@{Item Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"derivedColumn10 select(mapColumn(",
				"          {Authorization Status},",
				"          {Award Class Current Contract},",
				"          {Award Class Req},",
				"          {Base Currency Code},",
				"          {Buyer Name},",
				"          {Cancel Reason},",
				"          {Chart Of Accounts Name},",
				"          {Closed Code},",
				"          {Currency Code},",
				"          {REQ Description},",
				"          {Distribution Amount},",
				"          {Distribution Number},",
				"          {Distribution Quantity},",
				"          {Document Type},",
				"          {Expenditure Item Date},",
				"          {Expenditure Organization},",
				"          {Expenditure Type},",
				"          {Item Fixed LT},",
				"          {Gl Date},",
				"          {Gl Closed Date},",
				"          {Item Number},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Last Update Date Rqdlin},",
				"          {Last Update Date Rqdst},",
				"          {Ledger Name},",
				"          {Last Update Date Rqhdr},",
				"          {Req Line},",
				"          {Line Type},",
				"          {Modified By Agent Flag},",
				"          {Open Flag},",
				"          {PO Number},",
				"          {ITEM Postproc LT},",
				"          {Preparer Name},",
				"          {Preparer Number},",
				"          {Item Preproc LT},",
				"          {Processing Lead Time},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Purch Comm Code},",
				"          Rate,",
				"          {Rate Date},",
				"          {Rate Type},",
				"          {Deliver To Loc},",
				"          {Org Code},",
				"          {Line Cancel Date},",
				"          {Cancel Flag},",
				"          {Line Qty Canc},",
				"          {Line Closed Date},",
				"          {Req Line Id},",
				"          {Line Qty Delv},",
				"          {Line Qty},",
				"          {Requestor Name},",
				"          {Requestor Number},",
				"          {Requisition Creation Date},",
				"          {Req #},",
				"          {Suggested Supplier},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Task Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          UOM,",
				"          {Unit Price Base},",
				"          {Line Amt},",
				"          {Report Date},",
				"          {Approved Date},",
				"          {Req Create Date},",
				"          {Need By Date},",
				"          Name,",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          {Planning Group},",
				"          {Project Business Area},",
				"          {Organization Code},",
				"          {Product Segment},",
				"          {Business Days in Queue},",
				"          {Supply Planning},",
				"          JN,",
				"          {Items$target Cost},",
				"          {Preprocessing LT},",
				"          {Processing LT},",
				"          {Postprocessing LT},",
				"          {Total LT},",
				"          {Req Urgency},",
				"          {Commodity Code},",
				"          {Commodity Type}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select27",
				"join8 derive({Workflow Publishing Data} = \"Buyer Req Queue Visibility\") ~> derivedColumn14",
				"derivedColumn12 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> tableueBuyerReqQueue",
				"join8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> yxdbBuyerReqQueuewithOracleMPN",
				"derivedColumn12 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> yxdbBuyerReqQueue",
				"derivedColumn14 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> tablueBuyerReqQueuewithOracleMPN"
			]
		}
	}
}