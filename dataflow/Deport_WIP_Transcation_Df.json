{
	"name": "Deport_WIP_Transcation_Df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "wipg0allmovetransactions"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "Wipg0routings"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "CSDG0REPAIRORDERS"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "PAG0ProjectClassCategories"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "invg0categoryamscategory"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "csdg0repairnotes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzSql",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Allcolumns"
				},
				{
					"name": "RightOuterJoin"
				},
				{
					"name": "select1"
				},
				{
					"name": "formula3"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select2"
				},
				{
					"name": "formula10"
				},
				{
					"name": "formula11"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "LeftouterJoin"
				},
				{
					"name": "select5"
				},
				{
					"name": "filter2"
				},
				{
					"name": "select6"
				},
				{
					"name": "Leftouterjoin1"
				},
				{
					"name": "select7"
				},
				{
					"name": "formula12"
				},
				{
					"name": "formula14"
				},
				{
					"name": "formula15"
				},
				{
					"name": "select8"
				},
				{
					"name": "formula16"
				},
				{
					"name": "filter3"
				},
				{
					"name": "uniquecolumns"
				},
				{
					"name": "formula17"
				},
				{
					"name": "select9"
				},
				{
					"name": "formula18"
				},
				{
					"name": "formula19"
				},
				{
					"name": "Groupby"
				},
				{
					"name": "sort1"
				},
				{
					"name": "window1"
				},
				{
					"name": "filter4"
				},
				{
					"name": "select10"
				},
				{
					"name": "Allcolumns1"
				},
				{
					"name": "sort2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select11"
				},
				{
					"name": "sort3"
				},
				{
					"name": "window2"
				},
				{
					"name": "filter5"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select12"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "leftouterjoin2"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "select14"
				},
				{
					"name": "leftouterjoin3"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select15"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "derivedColumn8"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> wipg0allmovetransactions",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Wipg0routings",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CSDG0REPAIRORDERS",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PAG0ProjectClassCategories",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> invg0categoryamscategory",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> csdg0repairnotes",
				"wipg0allmovetransactions select(mapColumn(",
				"          JOB_RELEASED_DATE,",
				"          JOB_STATUS,",
				"          JOB_TYPE,",
				"          TRANSACTION_DATE,",
				"          TRANSACTION_CREATED_BY,",
				"          TO_OPERATION_SEQUENCE_NUMBER,",
				"          TO_OPERATION_CODE,",
				"          JOB_NAME,",
				"          {ASSEMBLY$SV$PART_NUMBER}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Allcolumns",
				"Allcolumns, Wipg0routings join(JOB_NAME == {Job Name}",
				"     && {ASSEMBLY$SV$PART_NUMBER} == {Assembly$Sv$Part Number}",
				"     && TO_OPERATION_SEQUENCE_NUMBER == {Operation Sequence Number},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> RightOuterJoin",
				"RightOuterJoin select(mapColumn(",
				"          {Transaction Date} = TRANSACTION_DATE,",
				"          {Transaction Created By} = TRANSACTION_CREATED_BY,",
				"          {To Operation Sequence Number} = TO_OPERATION_SEQUENCE_NUMBER,",
				"          {To Operation Code} = TO_OPERATION_CODE,",
				"          {Assembly Description},",
				"          {Assembly Item Type},",
				"          {Assembly$Sv$Part Number},",
				"          {First Unit Completion Date},",
				"          {First Unit Start Date},",
				"          {Job Date Closed},",
				"          {Job Date Completed},",
				"          {Job Date Released},",
				"          {Job Name},",
				"          {Job Opseq Date Last Moved},",
				"          {Job Quantity Completed},",
				"          {Job Quantity Scheduled},",
				"          {Job Quantity Scrapped},",
				"          {Job Start Date},",
				"          {Job Status},",
				"          {Job Type},",
				"          {Last Unit Completion Date},",
				"          {Last Unit Start Date},",
				"          {Lot Number},",
				"          {Max Seq Num W Qty},",
				"          {Operation Description},",
				"          {Operation Quantity Completed},",
				"          {Operation Quantity In Queue},",
				"          {Operation Quantity Rejected},",
				"          {Operation Quantity Remaining},",
				"          {Operation Quantity Running},",
				"          {Operation Quantity Scrapped},",
				"          {Operation Quantity To Move},",
				"          {Operation Sequence Number},",
				"          {Organization Code},",
				"          {Production Line}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive({Job Start Date} = toTimestamp({Job Start Date}),",
				"          {Job Date Completed} = toDate({Job Date Completed}),",
				"          {Job Date Closed} = toDate({Job Date Closed}),",
				"          {Job Date Released} = toTimestamp({Job Date Released}),",
				"          {Job Opseq Date Last Moved} = toTimestamp({Job Opseq Date Last Moved}),",
				"          {Last Unit Completion Date} = toTimestamp({Last Unit Completion Date}),",
				"          {Last Unit Start Date} = toTimestamp({Last Unit Start Date}),",
				"          {First Unit Start Date} = toTimestamp({First Unit Start Date}),",
				"          {First Unit Completion Date} = toTimestamp({First Unit Completion Date})) ~> formula3",
				"formula3 filter({Assembly$Sv$Part Number} == \"1238329\" ||",
				"{Assembly$Sv$Part Number} == \"1238330\" || ",
				"{Assembly$Sv$Part Number} == \"1241461\" || ",
				"{Assembly$Sv$Part Number} == \"1246656\" ||",
				"{Assembly$Sv$Part Number} == \"1246658\" ||",
				"{Assembly$Sv$Part Number} == \"1335607\" ||",
				"{Assembly$Sv$Part Number} == \"1246655\" ||",
				"{Assembly$Sv$Part Number} == \"1278660\") ~> filter1",
				"filter1 select(mapColumn(",
				"          {Transaction Date},",
				"          {Transaction Created By},",
				"          {To Operation Sequence Number},",
				"          {To Operation Code},",
				"          {Assembly Description},",
				"          {Assembly Item Type},",
				"          {Assembly$Sv$Part Number},",
				"          {Job Date Released},",
				"          {Job Name},",
				"          {Job Opseq Date Last Moved},",
				"          {Job Start Date},",
				"          {Job Status},",
				"          {Job Type},",
				"          {Lot Number},",
				"          {Max Seq Num W Qty},",
				"          {Operation Description},",
				"          {Operation Quantity Completed},",
				"          {Operation Quantity In Queue},",
				"          {Operation Quantity Rejected},",
				"          {Operation Quantity Remaining},",
				"          {Operation Quantity Running},",
				"          {Operation Quantity Scrapped},",
				"          {Operation Quantity To Move},",
				"          {Operation Sequence Number},",
				"          {Organization Code},",
				"          {Production Line}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive({Job Name RO} = iif((startsWith({Job Name}, 'R')), left(replace({Job Name}, 'R','') , instr({Job Name},'.')-1 ), \r",
				"iif((startsWith({Job Name}, 'EMI')), left(replace({Job Name}, 'EMI','') , instr({Job Name},'.')-1 ),\r",
				"iif((startsWith({Job Name}, 'SPR')), left(replace({Job Name}, 'SPR','') , instr({Job Name},'.')-1 ),{Job Name})))) ~> formula10",
				"formula10 derive({Transaction Created By} = iif(isNull({Transaction Created By}),\"None\", {Transaction Created By}),",
				"          {Job Name RO} = replace({Job Name RO},\"(75)\",\"\")) ~> formula11",
				"CSDG0REPAIRORDERS select(mapColumn(",
				"          {Approval Required Flag} = APPROVAL_REQUIRED_FLAG,",
				"          {Automatic Rma Process Flag} = AUTOMATIC_RMA_PROCESS_FLAG,",
				"          {Avg Addl Funds} = AVG_ADDL_FUNDS,",
				"          {Contract Number} = CONTRACT_NUMBER,",
				"          {Contract Warranty End Date} = CONTRACT_WARRANTY_END_DATE,",
				"          {Customer Name} = CUSTOMER_NAME,",
				"          {Customer Product Id} = CUSTOMER_PRODUCT_ID,",
				"          {Customer Type} = CUSTOMER_TYPE,",
				"          {Estimate Approval Status} = ESTIMATE_APPROVAL_STATUS,",
				"          {Incident Type} = INCIDENT_TYPE,",
				"          {Instance Warranty End Date} = INSTANCE_WARRANTY_END_DATE,",
				"          {Internal Order Flag} = INTERNAL_ORDER_FLAG,",
				"          {Inventory Organization Name} = INVENTORY_ORGANIZATION_NAME,",
				"          {Item$Inventory Item Id} = {ITEM$INVENTORY_ITEM_ID},",
				"          {Item$Organization Id} = {ITEM$ORGANIZATION_ID},",
				"          {Item Number} = {ITEM$SV$PART_NUMBER},",
				"          {Item Description} = ITEM_DESCRIPTION,",
				"          {Item Instance Number} = ITEM_INSTANCE_NUMBER,",
				"          {Item Instance Status} = ITEM_INSTANCE_STATUS,",
				"          {Item Lot Number} = ITEM_LOT_NUMBER,",
				"          {Item Revision} = ITEM_REVISION,",
				"          Locator = LOCATOR,",
				"          {Po Number} = PO_NUMBER,",
				"          {Price List} = PRICE_LIST,",
				"          {Problem Description} = PROBLEM_DESCRIPTION,",
				"          {Quantity In Wip} = QUANTITY_IN_WIP,",
				"          {Rma Order Number} = RMA_ORDER_NUMBER,",
				"          {Received Quantity} = RECEIVED_QUANTITY,",
				"          {Receive Date} = RECEIVE_DATE,",
				"          {Repair$Actual Complete Date} = {REPAIR$ACTUAL_COMPLETE_DATE},",
				"          {Repair$Actual Repair Price} = {REPAIR$ACTUAL_REPAIR_PRICE},",
				"          {Repair$Actual Start Date} = {REPAIR$ACTUAL_START_DATE},",
				"          {Repair$Metric Completion Date} = {REPAIR$METRIC_COMPLETION_DATE},",
				"          {Repair$Program} = {REPAIR$PROGRAM},",
				"          {Repair$Returning Platform} = {REPAIR$RETURNING_PLATFORM},",
				"          {Repair$Ssl} = {REPAIR$SSL},",
				"          {Repair$Service Affiliation} = {REPAIR$SERVICE_AFFILIATION},",
				"          {Repair$Tat Adj Reason} = {REPAIR$TAT_ADJ_REASON},",
				"          {Repair$Tat Adj} = {REPAIR$TAT_ADJ},",
				"          {Repair$Tail Number} = {REPAIR$TAIL_NUMBER},",
				"          {Repair$Vendor Name} = {REPAIR$VENDOR_NAME},",
				"          {Repair$Vendor RMA} = {REPAIR$VENDOR_RMA},",
				"          {Repair Currency Code} = REPAIR_CURRENCY_CODE,",
				"          {Repair Item Serial Number} = REPAIR_ITEM_SERIAL_NUMBER,",
				"          {Repair Item Uom} = REPAIR_ITEM_UOM,",
				"          {Repair Line Id} = REPAIR_LINE_ID,",
				"          {Repair Number} = REPAIR_NUMBER,",
				"          {Repair Order Closed Date} = REPAIR_ORDER_CLOSED_DATE,",
				"          {Repair Order Creation Date} = REPAIR_ORDER_CREATION_DATE,",
				"          {Repair Order Project} = REPAIR_ORDER_PROJECT,",
				"          {Repair Order Promised Date} = REPAIR_ORDER_PROMISED_DATE,",
				"          {Repair Order Task} = REPAIR_ORDER_TASK,",
				"          {Repair Owner Name} = REPAIR_OWNER_NAME,",
				"          {Repair Reason} = REPAIR_REASON,",
				"          {Repair Priority} = REPAIR_PRIORITY,",
				"          {Repair Quantity} = REPAIR_QUANTITY,",
				"          {Repair Status} = REPAIR_STATUS,",
				"          {Repair Type} = REPAIR_TYPE,",
				"          {Repair Type Reference} = REPAIR_TYPE_REFERENCE,",
				"          {Sr Group Name} = SR_GROUP_NAME,",
				"          {Sr Item Serial Number} = SR_ITEM_SERIAL_NUMBER,",
				"          {Sr Operating Unit Name} = SR_OPERATING_UNIT_NAME,",
				"          {Sr Owner Name} = SR_OWNER_NAME,",
				"          {Sr Severity} = SR_SEVERITY,",
				"          {Sr Status} = SR_STATUS,",
				"          {Salesforce RMA} = SALESFORCE_RMA,",
				"          {Service Request Number} = SERVICE_REQUEST_NUMBER,",
				"          {Ship Date} = SHIP_DATE,",
				"          {Ship To Address1} = SHIP_TO_ADDRESS1,",
				"          {Ship To City} = SHIP_TO_CITY,",
				"          {Ship To County} = SHIP_TO_COUNTY,",
				"          {Ship To State} = SHIP_TO_STATE,",
				"          {Shipped Quantity} = SHIPPED_QUANTITY,",
				"          {Time In Hold Status} = TIME_IN_HOLD_STATUS,",
				"          Subinventory = SUBINVENTORY,",
				"          {Time In Open Status} = TIME_IN_OPEN_STATUS,",
				"          {Time In Repair} = TIME_IN_REPAIR,",
				"          {Times Returned} = TIMES_RETURNED,",
				"          {Total Actual Amount} = TOTAL_ACTUAL_AMOUNT,",
				"          {Total Estimate Amount} = TOTAL_ESTIMATE_AMOUNT,",
				"          {Unit Selling Price} = UNIT_SELLING_PRICE,",
				"          {Warranty Status} = WARRANTY_STATUS,",
				"          {Warehouse Code} = WAREHOUSE_CODE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"PAG0ProjectClassCategories select(mapColumn(",
				"          {Product Line} = PRODUCT_LINE,",
				"          {Product Line Business Area} = PRODUCT_LINE_BUSINESS_AREA,",
				"          {Project Number} = PROJECT_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select3, select4 join({Repair Order Project} == {Project Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftouterJoin",
				"invg0categoryamscategory select(mapColumn(",
				"          {Org Code} = ORGANIZATION_CODE,",
				"          {ITEMCAT$SV$AMS},",
				"          {Item Number} = {ITEM$SV$PART_NUMBER}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select5 filter({Org Code}=='MAS') ~> filter2",
				"filter2 select(mapColumn(",
				"          {ITEMCAT$SV$AMS},",
				"          {Item Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"LeftouterJoin, select6 join(select3@{Item Number} == select6@{Item Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Leftouterjoin1",
				"Leftouterjoin1 select(mapColumn(",
				"          {Avg Addl Funds},",
				"          {Contract Number},",
				"          {Contract Warranty End Date},",
				"          {Customer Name},",
				"          {Customer Product Id},",
				"          {Customer Type},",
				"          {Estimate Approval Status},",
				"          {Incident Type},",
				"          {Instance Warranty End Date},",
				"          {Internal Order Flag},",
				"          {Inventory Organization Name},",
				"          {Item$Inventory Item Id},",
				"          {Item$Organization Id},",
				"          {Item Number} = {select3@Item Number},",
				"          {Item Description},",
				"          {Item Instance Number},",
				"          {Item Instance Status},",
				"          {Item Lot Number},",
				"          {Item Revision},",
				"          Locator,",
				"          {Po Number},",
				"          {Price List},",
				"          {Quantity In Wip},",
				"          {Rma Order Number},",
				"          {Received Quantity},",
				"          {Receive Date},",
				"          {Repair$Actual Complete Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Program},",
				"          {Repair$Returning Platform},",
				"          {Repair$Ssl},",
				"          {Repair$Service Affiliation},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Tat Adj},",
				"          {Repair$Tail Number},",
				"          {Repair$Vendor Name},",
				"          {Repair$Vendor RMA},",
				"          {Repair Currency Code},",
				"          {Repair Item Serial Number},",
				"          {Repair Item Uom},",
				"          {Repair Line Id},",
				"          {Repair Number},",
				"          {Repair Order Closed Date},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Repair Owner Name},",
				"          {Repair Reason},",
				"          {Repair Priority},",
				"          {Repair Quantity},",
				"          {Repair Status},",
				"          {Repair Type},",
				"          {Repair Type Reference},",
				"          {Sr Group Name},",
				"          {Sr Item Serial Number},",
				"          {Sr Operating Unit Name},",
				"          {Sr Owner Name},",
				"          {Sr Severity},",
				"          {Sr Status},",
				"          {Salesforce RMA},",
				"          {Service Request Number},",
				"          {Ship Date},",
				"          {Ship To Address1},",
				"          {Ship To City},",
				"          {Ship To State},",
				"          {Shipped Quantity},",
				"          {Time In Hold Status},",
				"          Subinventory,",
				"          {Time In Open Status},",
				"          {Time In Repair},",
				"          {Times Returned},",
				"          {Total Actual Amount},",
				"          {Total Estimate Amount},",
				"          {Unit Selling Price},",
				"          {Warranty Status},",
				"          {Warehouse Code},",
				"          {Product Line},",
				"          {Product Line Business Area},",
				"          {Project Number},",
				"          {ITEMCAT$SV$AMS}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"select7 derive({Repair$Actual Complete Date} = toDate(toString({Repair$Actual Complete Date}),'yyyy/MM/dd hh:mm:ss','yyyy-MM-dd hh:mm:ss'),",
				"          {Repair$Actual Start Date} = toDate(toString({Repair$Actual Start Date}),'yyyy/MM/dd','yyyy-MM-dd')) ~> formula12",
				"formula12 derive({Product Line} = iif(isNull({Product Line}),\"Unknown\",{Product Line}),",
				"          {AMS Item Name} = iif(isNull({ITEMCAT$SV$AMS}),'Unknown',{ITEMCAT$SV$AMS}),",
				"          {Business Area} = iif(in (['75', '76'],{Warehouse Code}),'AS', \r",
				"iif(isNull({Product Line Business Area}),'Unknown',{Product Line Business Area})),",
				"          {Warranty Status} = iif(regexMatch({Repair Type}, 'out') || regexMatch({Repair Type},'oow')|| regexMatch({Repair Type},'non') ,'Out of Warranty',\r",
				"iif(regexMatch({Repair Type},'spare') ,'Spare',\r",
				"iif(regexMatch({Repair Type}, 'contract'),'Contract Warranty', 'In Warranty'))),",
				"          report_date = currentDate()) ~> formula14",
				"formula14 derive({Product Line} = replace({Product Line}, 'KG', 'SNS')) ~> formula15",
				"formula15 select(mapColumn(",
				"          {Avg Addl Funds},",
				"          {Customer Product Id},",
				"          {Customer Type},",
				"          {Estimate Approval Status},",
				"          {Incident Type},",
				"          {Instance Warranty End Date},",
				"          {Internal Order Flag},",
				"          {Inventory Organization Name},",
				"          {Item$Inventory Item Id},",
				"          {Item$Organization Id},",
				"          {DRO Item Number} = {Item Number},",
				"          {DRO Item Description} = {Item Description},",
				"          {Item Instance Number},",
				"          {Item Instance Status},",
				"          {Item Lot Number},",
				"          {Item Revision},",
				"          Locator,",
				"          {DRO Po Number} = {Po Number},",
				"          {Price List},",
				"          {Quantity In Wip},",
				"          {Rma Order Number},",
				"          {Received Quantity},",
				"          {Receive Date},",
				"          {Repair$Actual Complete Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Program},",
				"          {Repair$Returning Platform},",
				"          {Repair$Ssl},",
				"          {Repair$Service Affiliation},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Tat Adj},",
				"          {Repair$Tail Number},",
				"          {Repair$Vendor Name},",
				"          {Repair$Vendor RMA},",
				"          {Repair Currency Code},",
				"          {Repair Item Serial Number},",
				"          {Repair Item Uom},",
				"          {Repair Line Id},",
				"          {Repair Number},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Repair Owner Name},",
				"          {Repair Reason},",
				"          {Repair Quantity},",
				"          {Repair Status},",
				"          {Repair Type},",
				"          {Repair Type Reference},",
				"          {Sr Group Name},",
				"          {Sr Item Serial Number},",
				"          {Sr Operating Unit Name},",
				"          {Sr Owner Name},",
				"          {Sr Severity},",
				"          {Sr Status},",
				"          {Service Request Number},",
				"          {Ship Date},",
				"          {Ship To Address1},",
				"          {Ship To City},",
				"          {Ship To State},",
				"          {Shipped Quantity},",
				"          {Time In Hold Status},",
				"          Subinventory,",
				"          {Time In Open Status},",
				"          {Time In Repair},",
				"          {Times Returned},",
				"          {Total Actual Amount},",
				"          {Total Estimate Amount},",
				"          {Unit Selling Price},",
				"          {Warranty Status},",
				"          {Warehouse Code},",
				"          {Product Line},",
				"          {Project Number},",
				"          {AMS Item Name},",
				"          {Repair Order Closed Date},",
				"          {Business Area},",
				"          report_date,",
				"          {Contract Number},",
				"          {Contract Warranty End Date},",
				"          {Customer Name},",
				"          {Repair$Actual Start Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select8 derive({Ship Date} = iif({Project Number}==\"8468140\" && {Repair Status}==\"Closed\"&& isNull({Ship Date})\r",
				",{Repair$Actual Complete Date},toDate({Ship Date}))) ~> formula16",
				"formula16 filter(!(in(['2699997','2626981','2626991'],{Project Number}))) ~> filter3",
				"filter3 aggregate(groupBy({AMS Item Name},",
				"          {Avg Addl Funds},",
				"          {Business Area},",
				"          {Customer Product Id},",
				"          {Customer Type},",
				"          {Estimate Approval Status},",
				"          {Incident Type},",
				"          {Instance Warranty End Date},",
				"          {Internal Order Flag},",
				"          {Inventory Organization Name},",
				"          {DRO Item Description},",
				"          {Item Instance Number},",
				"          {Item Instance Status},",
				"          {Item Lot Number},",
				"          {DRO Item Number},",
				"          {Item Revision},",
				"          {Item$Inventory Item Id},",
				"          {Item$Organization Id},",
				"          Locator,",
				"          {Product Line},",
				"          {Project Number},",
				"          {Quantity In Wip},",
				"          {Receive Date},",
				"          {Received Quantity},",
				"          {Repair Currency Code},",
				"          {Repair Item Serial Number},",
				"          {Repair Item Uom},",
				"          {Repair Line Id},",
				"          {Repair Number},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Repair Owner Name},",
				"          {Repair Quantity},",
				"          {Repair Reason},",
				"          {Repair Status},",
				"          {Repair Type},",
				"          {Repair$Actual Complete Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Program},",
				"          {Repair$Returning Platform},",
				"          {Repair$Service Affiliation},",
				"          {Repair$Ssl},",
				"          {Repair$Tail Number},",
				"          {Repair$Tat Adj},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Vendor Name},",
				"          {Repair$Vendor RMA},",
				"          report_date,",
				"          {Rma Order Number},",
				"          {Ship Date},",
				"          {Shipped Quantity},",
				"          {Sr Group Name},",
				"          {Sr Owner Name},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {Times Returned},",
				"          {Total Actual Amount},",
				"          {Total Estimate Amount},",
				"          {Unit Selling Price},",
				"          {Warehouse Code},",
				"          {Warranty Status},",
				"          {Contract Number},",
				"          {Contract Warranty End Date},",
				"          {Customer Name},",
				"          {Repair Order Closed Date}),",
				"     each(match(name!='AMS Item Name'&&name!='Avg Addl Funds'&&name!='Business Area'&&name!='Contract Number'&&name!='Contract Warranty End Date'&&name!='Customer Name'&&name!='Customer Product Id'&&name!='Customer Type'&&name!='Estimate Approval Status'&&name!='Incident Type'&&name!='Instance Warranty End Date'&&name!='Internal Order Flag'&&name!='Inventory Organization Name'&&name!='DRO Item Description'&&name!='Item Instance Number'&&name!='Item Instance Status'&&name!='Item Lot Number'&&name!='DRO Item Number'&&name!='Item Revision'&&name!='Item$Inventory Item Id'&&name!='Item$Organization Id'&&name!='Locator'&&name!='Product Line'&&name!='Project Number'&&name!='Quantity In Wip'&&name!='Receive Date'&&name!='Received Quantity'&&name!='Repair Currency Code'&&name!='Repair Item Serial Number'&&name!='Repair Item Uom'&&name!='Repair Line Id'&&name!='Repair Number'&&name!='Repair Order Closed Date'&&name!='Repair Order Creation Date'&&name!='Repair Order Project'&&name!='Repair Order Promised Date'&&name!='Repair Order Task'&&name!='Repair Owner Name'&&name!='Repair Quantity'&&name!='Repair Reason'&&name!='Repair Status'&&name!='Repair Type'&&name!='Repair$Actual Complete Date'&&name!='Repair$Actual Repair Price'&&name!='Repair$Actual Start Date'&&name!='Repair$Metric Completion Date'&&name!='Repair$Program'&&name!='Repair$Returning Platform'&&name!='Repair$Service Affiliation'&&name!='Repair$Ssl'&&name!='Repair$Tail Number'&&name!='Repair$Tat Adj'&&name!='Repair$Tat Adj Reason'&&name!='Repair$Vendor Name'&&name!='Repair$Vendor RMA'&&name!='report_date'&&name!='Rma Order Number'&&name!='Ship Date'&&name!='Shipped Quantity'&&name!='Sr Group Name'&&name!='Sr Owner Name'&&name!='Time In Hold Status'&&name!='Time In Repair'&&name!='Times Returned'&&name!='Total Actual Amount'&&name!='Total Estimate Amount'&&name!='Unit Selling Price'&&name!='Warehouse Code'&&name!='Warranty Status'&&name!='Repair Order Closed Date'), $$ = first($$))) ~> uniquecolumns",
				"uniquecolumns derive({Repair Order Closed Date} = toDate({Repair Order Closed Date})) ~> formula17",
				"formula17 select(mapColumn(",
				"          {Customer Name},",
				"          {Receive Date},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Repair Status},",
				"          {Repair$Actual Complete Date},",
				"          {Repair$Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {Repair Order Closed Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select9 derive({Repair Order Promised Date} = toTimestamp({Repair Order Promised Date})) ~> formula18",
				"formula18 derive({Repair Number No} = toInteger({Repair Number})) ~> formula19",
				"formula19 aggregate(groupBy({Customer Name},",
				"          {Receive Date},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {Repair Status},",
				"          {Repair$Actual Complete Date},",
				"          {Repair Order Closed Date}),",
				"     {Max_Repair$Actual Start Date} = max({Repair$Actual Start Date}),",
				"          {Max_Repair Order Task} = max({Repair Order Task}),",
				"          {Max_Repair Number No} = max({Repair Number No})) ~> Groupby",
				"Groupby sort(desc({Max_Repair Number No}, true),",
				"     desc({Max_Repair Order Task}, true)) ~> sort1",
				"sort1 window(over({Repair Item Serial Number}),",
				"     asc({Repair Item Serial Number}, true),",
				"     RowNumber = rowNumber()) ~> window1",
				"window1 filter(RowNumber==1) ~> filter4",
				"filter4 select(mapColumn(",
				"          {Customer Name},",
				"          {Receive Date},",
				"          {Repair Item Serial Number},",
				"          {Right_Repair Number} = {Repair Number},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {Repair Status},",
				"          {Repair$Actual Complete Date},",
				"          {Repair Order Closed Date},",
				"          {Max_Repair$Actual Start Date},",
				"          {Repair Order Task} = {Max_Repair Order Task}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"csdg0repairnotes select(mapColumn(",
				"          {Repair Number} = REPAIR_NUMBER,",
				"          Date = NOTE_ENTERED_DATE,",
				"          Notes = NOTES,",
				"          {Note Source} = NOTE_SOURCE,",
				"          {Note Status} = NOTE_STATUS,",
				"          {Note Type} = NOTE_TYPE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Allcolumns1",
				"Allcolumns1 sort(desc(Date, true)) ~> sort2",
				"sort2 derive({Note Entered Date} = toString(toDate(toString(Date),'yyyy-MM-dd'),'MM/dd/yyyy')) ~> derivedColumn1",
				"derivedColumn1 derive({New Notes} = ({Note Entered Date}+ \":\" + Notes)) ~> derivedColumn2",
				"derivedColumn6 select(mapColumn(",
				"          {Repair Number},",
				"          Notes,",
				"          {Note Entered Date},",
				"          {New Notes}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select11 sort(asc({Repair Number}, true),",
				"     desc({Note Entered Date}, true)) ~> sort3",
				"sort3 window(over({Repair Number}),",
				"     asc({Repair Number}, true),",
				"     {Row number} = rowNumber()) ~> window2",
				"window2 filter({Row number}<=3) ~> filter5",
				"filter5 derive({New Notes} = ({Note Entered Date} + \":\" + Notes + \"\")) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          {Repair Number},",
				"          {New Notes}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12",
				"select12 aggregate(groupBy({Repair Number}),",
				"     {New Notes} = replace(replace(replace(toString(collect({New Notes})), \"[\",\"\"),\"]\",\"\"),'\"','')) ~> aggregate1",
				"select10, aggregate1 join({Right_Repair Number} == {Repair Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftouterjoin2",
				"leftouterjoin2 aggregate(groupBy({Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Max_Repair$Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {New Notes},",
				"          {Customer Name},",
				"          {Right_Repair Number}),",
				"     each(match(name!='Customer Name'&&name!='Repair Item Serial Number'&&name!='Repair Number'&&name!='Repair Order Project'&&name!='Repair Order Promised Date'&&name!='Max_Repair$Actual Start Date'&&name!='Rma Order Number'&&name!='Time In Hold Status'&&name!='Time In Repair'&&name!='New Notes'&&name!='Right_Repair Number'&&name!='Repair Order Task'), $$ = first($$))) ~> aggregate2",
				"aggregate2 select(mapColumn(",
				"          {Customer Name},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Max_Repair$Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {New Notes},",
				"          {Right_Repair Number},",
				"          {Receive Date},",
				"          {Repair Order Creation Date},",
				"          {Repair Status},",
				"          {Repair$Actual Complete Date},",
				"          {Repair Order Closed Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"derivedColumn7, select14 join({Job Name RO1} == {Repair Item Serial Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftouterjoin3",
				"leftouterjoin3 aggregate(groupBy({Assembly Description},",
				"          {Assembly Item Type},",
				"          {Assembly$Sv$Part Number},",
				"          {Job Date Released},",
				"          {Job Name},",
				"          {Job Start Date},",
				"          {Job Status},",
				"          {Job Type},",
				"          {Lot Number},",
				"          {Max Seq Num W Qty},",
				"          {Operation Description},",
				"          {Operation Quantity Completed},",
				"          {Operation Quantity In Queue},",
				"          {Operation Quantity Rejected},",
				"          {Operation Quantity Remaining},",
				"          {Operation Quantity Running},",
				"          {Operation Quantity Scrapped},",
				"          {Operation Quantity To Move},",
				"          {Operation Sequence Number},",
				"          {Organization Code},",
				"          {Production Line},",
				"          {To Operation Code},",
				"          {To Operation Sequence Number},",
				"          {Transaction Created By},",
				"          {Transaction Date},",
				"          {Job Name RO} = {Job Name RO1},",
				"          {Customer Name},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Max_Repair$Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {Right_Repair Number},",
				"          {New Notes}),",
				"     each(match(name!='Assembly Description'&&name!='Assembly Item Type'&&name!='Assembly$Sv$Part Number'&&name!='Job Date Released'&&name!='Job Name'&&name!='Job Start Date'&&name!='Job Status'&&name!='Job Type'&&name!='Lot Number'&&name!='New Notes'&&name!='Right_Repair Number'&&name!='Repair Order Task'&&name!='Max Seq Num W Qty'&&name!='Operation Description'&&name!='Operation Quantity Completed'&&name!='Operation Quantity In Queue'&&name!='Operation Quantity Rejected'&&name!='Operation Quantity Remaining'&&name!='Operation Quantity Running'&&name!='Operation Quantity Scrapped'&&name!='Operation Quantity To Move'&&name!='Operation Sequence Number'&&name!='Organization Code'&&name!='Production Line'&&name!='To Operation Code'&&name!='To Operation Sequence Number'&&name!='Repair Order Task'&&name!='Max_Repair$Actual Start Date'&&name!='Rma Order Number'&&name!='Time In Hold Status'&&name!='Time In Repair'&&name!='Right_Repair Number'&&name!='New Notes'&&name!='Transaction Created By'&&name!='Transaction Date'&&name!='Job Name RO'&&name!='Customer Name'&&name!='Repair Item Serial Number'&&name!='Repair Number'&&name!='Repair Order Project'&&name!='Repair Order Promised Date'), $$ = first($$))) ~> aggregate3",
				"derivedColumn8 derive({Report Date} = currentDate(),",
				"          Category = iif({Assembly$Sv$Part Number}== \"1238329\",'ACU', \r",
				"iif({Assembly$Sv$Part Number}== \"1238330\",'Antenna',\r",
				"iif({Assembly$Sv$Part Number}== \"1241461\",'M40',\r",
				"iif({Assembly$Sv$Part Number}== \"1246656\",'GM40',\r",
				"iif({Assembly$Sv$Part Number}==\"1246658\",'G12',\r",
				"iif({Assembly$Sv$Part Number}==\"1335607\" ,'JetBlue Trade-Ins',\r",
				"iif({Assembly$Sv$Part Number}==\"1246655\" ,'Kukarray',\r",
				"iif({Assembly$Sv$Part Number}==\"1278660\" ,'GM40','No Category')))))))),",
				"          {UTC Time} = toDate(currentTimestamp()),",
				"          {Job Count} = toDouble(iifNull({Job Name}),toString(1),toString(1))) ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          {Assembly Description},",
				"          {Assembly Item Type},",
				"          {Assembly$Sv$Part Number},",
				"          {Job Date Released},",
				"          {Job Name},",
				"          {Job Start Date},",
				"          {Job Status},",
				"          {Job Type},",
				"          {Lot Number},",
				"          {Max Seq Num W Qty},",
				"          {Operation Description},",
				"          {Operation Quantity Completed},",
				"          {Operation Quantity In Queue},",
				"          {Operation Quantity Rejected},",
				"          {Operation Quantity Remaining},",
				"          {Operation Quantity Running},",
				"          {Operation Quantity Scrapped},",
				"          {Operation Quantity To Move},",
				"          {Operation Sequence Number},",
				"          {Organization Code},",
				"          {Production Line},",
				"          {To Operation Code},",
				"          {To Operation Sequence Number},",
				"          {Transaction Created By},",
				"          {Transaction Date},",
				"          {Job Name RO},",
				"          {Customer Name},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Actual Start Date} = {Max_Repair$Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {New Notes},",
				"          {Job Opseq Date Last Moved},",
				"          {Receive Date},",
				"          {Repair Order Creation Date},",
				"          {Repair Status},",
				"          {Repair$Actual Complete Date},",
				"          {Repair Order Closed Date},",
				"          {Report Date},",
				"          Category,",
				"          {UTC Time},",
				"          {Job Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"select15 aggregate(groupBy({Assembly Description},",
				"          {Assembly Item Type},",
				"          {Assembly$Sv$Part Number},",
				"          {Job Date Released},",
				"          {Job Name},",
				"          {Job Start Date},",
				"          {Job Status},",
				"          {Job Type},",
				"          {Lot Number},",
				"          {Max Seq Num W Qty},",
				"          {Operation Description},",
				"          {Operation Quantity Completed},",
				"          {Operation Quantity In Queue},",
				"          {Operation Quantity Rejected},",
				"          {Operation Quantity Remaining},",
				"          {Operation Quantity Running},",
				"          {Operation Quantity Scrapped},",
				"          {Operation Quantity To Move},",
				"          {Operation Sequence Number},",
				"          {Organization Code},",
				"          {Production Line},",
				"          {To Operation Code},",
				"          {To Operation Sequence Number},",
				"          {Transaction Created By},",
				"          {Transaction Date},",
				"          {Job Name RO},",
				"          {Customer Name},",
				"          {Repair Item Serial Number},",
				"          {Repair Number},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Actual Start Date},",
				"          {Rma Order Number},",
				"          {Time In Hold Status},",
				"          {Time In Repair},",
				"          {New Notes},",
				"          Category,",
				"          {Job Count},",
				"          {UTC Time},",
				"          {Report Date}),",
				"     each(match(name!='Assembly Description'&&name!='Assembly Item Type'&&name!='Assembly$Sv$Part Number'&&name!='Job Date Released'&&name!='Job Name'&&name!='Job Start Date'&&name!='Job Status'&&name!='Job Type'&&name!='Lot Number'&&name!='New Notes'&&name!='Repair Order Task'&&name!='Max Seq Num W Qty'&&name!='Operation Description'&&name!='Operation Quantity Completed'&&name!='Operation Quantity In Queue'&&name!='Operation Quantity Rejected'&&name!='Operation Quantity Remaining'&&name!='Operation Quantity Running'&&name!='Operation Quantity Scrapped'&&name!='Operation Quantity To Move'&&name!='Operation Sequence Number'&&name!='Organization Code'&&name!='Production Line'&&name!='To Operation Code'&&name!='To Operation Sequence Number'&&name!='Actual Start Date'&&name!='Rma Order Number'&&name!='Time In Hold Status'&&name!='Time In Repair'&&name!='Transaction Created By'&&name!='Transaction Date'&&name!='Job Name RO'&&name!='Customer Name'&&name!='Repair Item Serial Number'&&name!='Repair Number'&&name!='Repair Order Project'&&name!='Repair Order Promised Date'&&name!='Category'&&name!='UTC Time'&&name!='Report Date'&&name!='Job Count'), $$ = first($$))) ~> aggregate4",
				"derivedColumn2 derive(each(match(type==\"string\"), $$ = trim($$))) ~> derivedColumn5",
				"derivedColumn5 derive(each(match(type==\"string\"), $$ = iif(isNull($$),\"\",$$))) ~> derivedColumn6",
				"formula11 derive({Job Name RO1} = split({Job Name RO},\".\")[1],",
				"          {Job Name RO2} = split({Job Name RO},\".\")[2]) ~> derivedColumn7",
				"aggregate3 derive({Max Seq Num W Qty1} = split({Max Seq Num W Qty},\".\")[1],",
				"          {Max Seq Num W Qty2} = split({Max Seq Num W Qty},\".\")[2]) ~> derivedColumn8",
				"aggregate4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}