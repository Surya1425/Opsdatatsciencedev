{
	"name": "Charged Labor Hours",
	"properties": {
		"folder": {
			"name": "timpildataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ChargedLaborHours",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "HRG0_Curr_Emp_Gen_Info_Vsat",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "datedim",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Labour_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select7"
				},
				{
					"name": "filter2"
				},
				{
					"name": "join2"
				},
				{
					"name": "union1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "filter3"
				},
				{
					"name": "select8"
				},
				{
					"name": "exists1"
				},
				{
					"name": "select9"
				},
				{
					"name": "select10"
				},
				{
					"name": "derivedColumn5"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RAW_COST as double,",
				"          EMPLOYEE_NUMBER as integer,",
				"          EMPLOYEE_FULL_NAME as string,",
				"          EMPLOYEE_ID as integer,",
				"          EXPENDITURE_ITEM_DATE as string,",
				"          EXPENDITURE_ITEM_PERIOD as string,",
				"          QUANTITY as double,",
				"          RAW_COST_RATE as double,",
				"          PROJECT_NUMBER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EMPLOYEE_NUMBER as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          SUPERVISOR_FULL_NAME as string,",
				"          EMPLOYEE_ID as integer,",
				"          SUPERVISOR_EMPLOYEE_NUMBER as integer,",
				"          FULL_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          DateKey as date,",
				"          DateText as date,",
				"          Date as date,",
				"          DayOfMonth as short,",
				"          DayName as string,",
				"          DayOfWeek as short,",
				"          WeekOfMonth as short,",
				"          WeekOfQuarter as short,",
				"          MonthName as string,",
				"          Month as short,",
				"          Quarter as short,",
				"          Year as short,",
				"          MonthYear as string,",
				"          YearMonth as string,",
				"          MonthYearName as string,",
				"          QuarterYear as string,",
				"          FirstDayOfMonth as date,",
				"          LastDayOfMonth as date,",
				"          FirstDayOfQuarter as date,",
				"          LastDayOfQuarter as date,",
				"          FiscalFirstDayOfYear as date,",
				"          FiscalLastDayOfYear as date,",
				"          FiscalDayOfYear as short,",
				"          FiscalWeekOfYear as short,",
				"          FiscalQuarter as string,",
				"          FiscalQuarterYear as string,",
				"          FiscalYearQuarter as string,",
				"          FiscalYear as short,",
				"          FiscalYearName as string,",
				"          IsBusinessDay as boolean,",
				"          IsHoliday as boolean,",
				"          HolidayName as string,",
				"          WeekEndingDate_Monday as date,",
				"          WeekEndingDate_Tuesday as date,",
				"          WeekEndingDate_Wednesday as date,",
				"          WeekEndingDate_Thursday as date,",
				"          WeekEndingDate_Friday as date,",
				"          WeekEndingDate_Saturday as date,",
				"          WeekEndingDate_Sunday as date,",
				"          IsStandardTime as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source1 select(mapColumn(",
				"          RAW_COST,",
				"          EMPLOYEE_NUMBER,",
				"          EMPLOYEE_FULL_NAME,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ITEM_PERIOD,",
				"          QUANTITY,",
				"          RAW_COST_RATE,",
				"          PROJECT_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, source2 join(select1@EMPLOYEE_NUMBER == source2@EMPLOYEE_NUMBER,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          RAW_COST,",
				"          EMPLOYEE_NUMBER = select1@EMPLOYEE_NUMBER,",
				"          EMPLOYEE_FULL_NAME,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ITEM_PERIOD,",
				"          QUANTITY,",
				"          RAW_COST_RATE,",
				"          PROJECT_NUMBER,",
				"          {RIGHT EMPLOYEE_NUMBER} = source2@EMPLOYEE_NUMBER,",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          SUPERVISOR_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          SUPERVISOR_EMPLOYEE_NUMBER,",
				"          FULL_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(FULL_NAME1 = split(FULL_NAME,\",\")[1],",
				"          FULL_NAME2 = split(FULL_NAME,\",\")[2],",
				"          FULL_NAME3 = split(FULL_NAME,\",\")[3],",
				"          EXPENDITURE_ITEM_DATE = toDate(EXPENDITURE_ITEM_DATE)) ~> derivedColumn1",
				"derivedColumn1 derive(FULL_NAME22 = split(FULL_NAME2,\" \")[2],",
				"          FULL_NAME21 = split(FULL_NAME2,\" \")[1],",
				"          FULL_NAME23 = split(FULL_NAME2,\" \")[3],",
				"          SUPERVISOR_FULL_NAME1 = split(SUPERVISOR_FULL_NAME,\",\")[1],",
				"          SUPERVISOR_FULL_NAME2 = split(SUPERVISOR_FULL_NAME,\",\")[2],",
				"          SUPERVISOR_FULL_NAME3 = split(SUPERVISOR_FULL_NAME,\",\")[3]) ~> derivedColumn2",
				"select10 derive({Supervisor First Initial Last Name} = left(SUPERVISOR_FULL_NAME22,1)+'. '+ SUPERVISOR_FULL_NAME1,",
				"          {Employee First Initial Last Name} = iif(LAST_NAME == 'Nguyen', FIRST_NAME +'. '+LAST_NAME,left(FIRST_NAME,1)+'. '+LAST_NAME),",
				"          {Employee Last Name First Initial} = iif(LAST_NAME=='Nguyen',LAST_NAME+'. '+left(FULL_NAME2, 2)+'. '+left(FULL_NAME23, 1), LAST_NAME+'. '+left(FIRST_NAME, 1)),",
				"          {Tableau Username} = iif(SUPERVISOR_FULL_NAME1 =='Lloyd', \"splloyd\", lower(left(SUPERVISOR_FULL_NAME22,1))+lower(SUPERVISOR_FULL_NAME1)),",
				"          {Date Published} = currentTimestamp()) ~> derivedColumn3",
				"derivedColumn3 derive({EXPENDITURE_ITEM_DATE YYYYMM} = substring(toString(EXPENDITURE_ITEM_DATE, \"yyyy-MM\"), 1, 7)) ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'ASSY','') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'_',\" \") = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 select(mapColumn(",
				"          each(match(true()),",
				"               initCap($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"source3 filter(Date >=toDate('2019-01-01')) ~> filter1",
				"filter1 select(mapColumn(",
				"          Date,",
				"          DayName,",
				"          WeekEndingDate_Friday,",
				"          WeekEndingDate_Saturday",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"exists1 filter(Date <= toDate(currentTimestamp())) ~> filter2",
				"select7, select9 join(Date == {Expenditure Item Date},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, filter2 union(byName: true)~> union1",
				"union1 aggregate(groupBy(Date,",
				"          DayName,",
				"          WeekEndingDate_Friday,",
				"          WeekEndingDate_Saturday,",
				"          {Raw Cost},",
				"          {Employee Number},",
				"          {Employee Full Name},",
				"          {Expenditure Item Date},",
				"          {Expenditure Item Period},",
				"          Quantity,",
				"          {Raw Cost Rate},",
				"          {Project Number},",
				"          {Right Employee Number},",
				"          {Employee Id},",
				"          {Supervisor Employee Number},",
				"          {Full Name},",
				"          {Full Name3},",
				"          {Full Name21},",
				"          {Full Name23},",
				"          {Employee First Initial Last Name},",
				"          {Supervisor First Initial Last Name},",
				"          {Employee Last Name First Initial},",
				"          {Tableau Username},",
				"          {Date Published},",
				"          {Expenditure Item Date Yyyymm}),",
				"     each(match(name!='Date'&&name!='DayName'&&name!='WeekEndingDate_Friday'&&\r",
				"name!='WeekEndingDate_Saturday'&&name!='Raw Cost'&&name!='Employee Number'\r",
				"&&name!='Employee Full Name'&&name!='Expenditure Item Date'&&name!='Expenditure Item Period'&&\r",
				"name!='Quantity'&&name!='Raw Cost Rate'&&name!='Project Number'&&name!='Right Employee Number'&&\r",
				"name!='Employee Id'&&name!='Supervisor Employee Number'&&name!='Full Name'&&name!='Full Name 2'&& name!='Full Name3'&&\r",
				"name!='Full Name21'&&name!='Full Name23'&&name!='Employee First Initial Last Name'&&\r",
				"name!='Supervisor First Initial Last Name'&&name!='Employee Last Name First Initial'&&\r",
				"name!='Tableau Username'&&name!='Date Published'&&name!='Expenditure Item Date Yyyymm'), $$ = first($$))) ~> aggregate1",
				"aggregate1 aggregate(groupBy({Employee Number},",
				"          {Expenditure Item Date},",
				"          {Employee Full Name},",
				"          {Expenditure Item Period},",
				"          {Raw Cost Rate},",
				"          {Project Number},",
				"          {Right Employee Number},",
				"          {Supervisor Employee Number},",
				"          {Employee Id},",
				"          {Full Name},",
				"          {Full Name2},",
				"          {Full Name3},",
				"          {Full Name21},",
				"          {Full Name23},",
				"          {Employee First Initial Last Name},",
				"          {Supervisor First Initial Last Name},",
				"          {Employee Last Name First Initial},",
				"          {Tableau Username},",
				"          {Date Published},",
				"          {Expenditure Item Date Yyyymm},",
				"          WeekEndingDate_Friday),",
				"     Sum_Quantity = sum(Quantity)) ~> aggregate2",
				"aggregate2 filter(Sum_Quantity > 0) ~> filter3",
				"filter3 select(mapColumn(",
				"          {Employee Number},",
				"          {Expenditure Item Date},",
				"          {Employee Full Name},",
				"          {Expenditure Item Period},",
				"          {Raw Cost Rate},",
				"          {Project Number},",
				"          {Supervisor Employee Number},",
				"          {Employee Id},",
				"          {Full Name},",
				"          {Full Name2},",
				"          {Full Name3},",
				"          {Full Name21},",
				"          {Full Name23},",
				"          {Employee First Initial Last Name},",
				"          {Supervisor First Initial Last Name},",
				"          {Employee Last Name First Initial},",
				"          {Tableau Username},",
				"          {Date Published},",
				"          {Expenditure Item Date Yyyymm},",
				"          WeekEndingDate_Friday,",
				"          Quantity = Sum_Quantity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select7, select9 exists(Date == {Expenditure Item Date},",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"select5 select(mapColumn(",
				"          {Raw Cost},",
				"          {Employee Number},",
				"          {Employee Full Name},",
				"          {Expenditure Item Date},",
				"          {Expenditure Item Period},",
				"          Quantity,",
				"          {Raw Cost Rate},",
				"          {Project Number},",
				"          {Right Employee Number},",
				"          {First Name2} = {First Name},",
				"          {Last Name2} = {Last Name},",
				"          {Employee Id},",
				"          {Supervisor Employee Number},",
				"          {Full Name},",
				"          {Full Name2},",
				"          {Full Name3},",
				"          {Full Name21},",
				"          {Full Name23},",
				"          {Employee First Initial Last Name},",
				"          {Supervisor First Initial Last Name},",
				"          {Employee Last Name First Initial},",
				"          {Tableau Username},",
				"          {Date Published},",
				"          {Expenditure Item Date Yyyymm}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"derivedColumn5 select(mapColumn(",
				"          RAW_COST,",
				"          EMPLOYEE_NUMBER,",
				"          EMPLOYEE_FULL_NAME,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ITEM_PERIOD,",
				"          QUANTITY,",
				"          RAW_COST_RATE,",
				"          PROJECT_NUMBER,",
				"          {RIGHT EMPLOYEE_NUMBER},",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          SUPERVISOR_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          SUPERVISOR_EMPLOYEE_NUMBER,",
				"          FULL_NAME,",
				"          LAST_NAME = FULL_NAME1,",
				"          FULL_NAME2,",
				"          FULL_NAME3,",
				"          FIRST_NAME = FULL_NAME22,",
				"          FULL_NAME21,",
				"          FULL_NAME23,",
				"          SUPERVISOR_FULL_NAME1,",
				"          SUPERVISOR_FULL_NAME2,",
				"          SUPERVISOR_FULL_NAME3,",
				"          SUPERVISOR_FULL_NAME21,",
				"          SUPERVISOR_FULL_NAME22",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"derivedColumn2 derive(SUPERVISOR_FULL_NAME21 = split(SUPERVISOR_FULL_NAME2,\" \")[1],",
				"          SUPERVISOR_FULL_NAME22 = split(SUPERVISOR_FULL_NAME2,\" \")[2]) ~> derivedColumn5",
				"select8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Charged Timecard Hours.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}