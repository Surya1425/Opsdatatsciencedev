{
	"name": "WIP Job Summary_df",
	"properties": {
		"folder": {
			"name": "Wip_Job_Summary"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "SupplyChain"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "CSV20"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "ProjectLookUpDetails"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "Invg0ItemsVsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "orgchart"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv_output",
						"type": "DatasetReference"
					},
					"name": "WIPJobSummaryFull"
				},
				{
					"dataset": {
						"referenceName": "ds_AzSql",
						"type": "DatasetReference"
					},
					"name": "TableauOutputSql"
				}
			],
			"transformations": [
				{
					"name": "Formulae1"
				},
				{
					"name": "Formulae2"
				},
				{
					"name": "filteringProjectNumber"
				},
				{
					"name": "selectingReqCols1"
				},
				{
					"name": "Summarise1"
				},
				{
					"name": "RenamingCols"
				},
				{
					"name": "innerjoin1"
				},
				{
					"name": "LeftColRename"
				},
				{
					"name": "leftjoin1"
				},
				{
					"name": "SelectingReqCols2"
				},
				{
					"name": "DataCleansingTrims"
				},
				{
					"name": "DataCleasingNulls"
				},
				{
					"name": "Formulae6"
				},
				{
					"name": "Formulae3"
				},
				{
					"name": "RenameCols1"
				},
				{
					"name": "leftjoin2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "DynamicSelect1"
				},
				{
					"name": "DynamicSelect2"
				},
				{
					"name": "leftjoin3"
				},
				{
					"name": "selectReqCols"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "filteringStatus"
				},
				{
					"name": "filteringOrgCode"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select1"
				},
				{
					"name": "Summarise2"
				},
				{
					"name": "Crosstab1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'wip-job-summary',",
				"     folderPath: 'input',",
				"     fileName: 'SupplyChain.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> SupplyChain",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'wip-job-summary',",
				"     folderPath: 'input',",
				"     fileName: '20.txt',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> CSV20",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'wip-job-summary',",
				"     folderPath: 'input',",
				"     fileName: 'Project LookUp Details.txt',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> ProjectLookUpDetails",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['input/IVG0_items/*'],",
				"     fileSystem: 'nmrs',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> Invg0ItemsVsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'ops-datascience-5026',",
				"     folderPath: 'Inputs',",
				"     fileName: 'org_chart.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> orgchart",
				"SupplyChain derive(FileName = 'WIPG0_All_Jobs') ~> Formulae1",
				"CSV20 derive({Qty Open} = toDouble({Qty Started}) - toDouble({Qty Completed})) ~> Formulae2",
				"ProjectLookUpDetails filter(!isNull({Project Number})) ~> filteringProjectNumber",
				"filteringProjectNumber select(mapColumn(",
				"          {Project Number},",
				"          {Business Area},",
				"          {Project Name},",
				"          Segment,",
				"          {Product Line Segment},",
				"          {Product Line},",
				"          {Project Manager Name},",
				"          {Award Group}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectingReqCols1",
				"Formulae1 aggregate(groupBy(FileName),",
				"     LastWriteTime = max(LastWriteTime)) ~> Summarise1",
				"Formulae2 select(mapColumn(",
				"          {Account Class Code},",
				"          {Assembly$Inventory Item Id},",
				"          {Assembly$Organization Id},",
				"          {Item Number},",
				"          {Item Desc},",
				"          {Assembly Uom Code},",
				"          {Bill Alternate Bom},",
				"          {Bill Alternate Routing},",
				"          {Bill Revision},",
				"          {Bill Revision Date},",
				"          {Bill Revision Time},",
				"          {Bill Routing Revision},",
				"          {Bill Routing Revision Date},",
				"          {Bill Routing Revision Time},",
				"          {Build Sequence},",
				"          {Chart Of Accounts Name},",
				"          {Completion Subinventory},",
				"          {Daily Production Rate},",
				"          {Demand Class Code},",
				"          {Djob Deliver Kit To},",
				"          {Djob Hold Reason},",
				"          {Djob Hold Reason Code},",
				"          {Djob Line Number},",
				"          {Djob Nmr},",
				"          {Djob Nmr Date},",
				"          {Djob Order Number},",
				"          {Djob Outside Processing},",
				"          {Djob Sent To Sol},",
				"          {Djob Sol Pp Id},",
				"          {Djob Sol Pp Revision},",
				"          {Djob Sol Pp Version},",
				"          {Firm Planned Flag},",
				"          {Job Closed Date},",
				"          {Job Completed Date},",
				"          {Created By},",
				"          {Job Creation Date},",
				"          {Job Days Late},",
				"          {Job Days Until Due},",
				"          {Job Desc},",
				"          {Job Late Flag},",
				"          {Job #} = {Job Number},",
				"          {Complete Qty} = {Qty Completed},",
				"          {Start Qty} = {Qty Started},",
				"          {Job Quantity Scrapped},",
				"          {Job Released Date},",
				"          {Scheduled Comp Date},",
				"          {Sched Start Date},",
				"          {Job Start Time},",
				"          Status,",
				"          {Job Type},",
				"          {Job Type Ebs},",
				"          {Last Updated By},",
				"          {Last Updated By En},",
				"          {Last Update Date},",
				"          {Last Update Date En},",
				"          {Locator$Cv$Stock Locator Kff},",
				"          {Locator$Inventory Location Id},",
				"          {Locator$Organization Id},",
				"          {Lot Number},",
				"          {Master Organization Name},",
				"          {Org Code},",
				"          {Organization Name},",
				"          {Production Line Code},",
				"          {Production Line Description},",
				"          {Project Name},",
				"          Project = {Project Number},",
				"          {Res Hrs Exists},",
				"          {Routing Exist},",
				"          {Schedule Group Name},",
				"          {Task Number},",
				"          {Wip Entity Id},",
				"          {Wip Supply Type},",
				"          FileName,",
				"          {Open Qty} = {Qty Open}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenamingCols",
				"Summarise1, RenamingCols join(Summarise1@FileName == RenamingCols@FileName,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin1",
				"innerjoin1 select(mapColumn(",
				"          FileName,",
				"          {Date Published} = LastWriteTime,",
				"          {Account Class Code},",
				"          {Assembly$Inventory Item Id},",
				"          {Assembly$Organization Id},",
				"          {Item Number},",
				"          {Item Desc},",
				"          {Assembly Uom Code},",
				"          {Bill Alternate Bom},",
				"          {Bill Alternate Routing},",
				"          {Bill Revision},",
				"          {Bill Revision Date},",
				"          {Bill Revision Time},",
				"          {Bill Routing Revision},",
				"          {Bill Routing Revision Date},",
				"          {Bill Routing Revision Time},",
				"          {Build Sequence},",
				"          {Chart Of Accounts Name},",
				"          {Completion Subinventory},",
				"          {Daily Production Rate},",
				"          {Demand Class Code},",
				"          {Djob Deliver Kit To},",
				"          {Djob Hold Reason},",
				"          {Djob Hold Reason Code},",
				"          {Djob Line Number},",
				"          {Djob Nmr},",
				"          {Djob Nmr Date},",
				"          {Djob Order Number},",
				"          {Djob Outside Processing},",
				"          {Djob Sent To Sol},",
				"          {Djob Sol Pp Id},",
				"          {Djob Sol Pp Revision},",
				"          {Djob Sol Pp Version},",
				"          {Firm Planned Flag},",
				"          {Job Closed Date},",
				"          {Job Completed Date},",
				"          {Created By},",
				"          {Job Creation Date},",
				"          {Job Days Late},",
				"          {Job Days Until Due},",
				"          {Job Desc},",
				"          {Job Late Flag},",
				"          {Job #},",
				"          {Complete Qty},",
				"          {Start Qty},",
				"          {Job Quantity Scrapped},",
				"          {Job Released Date},",
				"          {Scheduled Comp Date},",
				"          {Sched Start Date},",
				"          {Job Start Time},",
				"          Status,",
				"          {Job Type},",
				"          {Job Type Ebs},",
				"          {Last Updated By},",
				"          {Last Updated By En},",
				"          {Last Update Date},",
				"          {Last Update Date En},",
				"          {Locator$Cv$Stock Locator Kff},",
				"          {Locator$Inventory Location Id},",
				"          {Locator$Organization Id},",
				"          {Lot Number},",
				"          {Master Organization Name},",
				"          {Org Code},",
				"          {Organization Name},",
				"          {Production Line Code},",
				"          {Production Line Description},",
				"          {Project Name},",
				"          Project,",
				"          {Res Hrs Exists},",
				"          {Routing Exist},",
				"          {Schedule Group Name},",
				"          {Task Number},",
				"          {Wip Entity Id},",
				"          {Wip Supply Type},",
				"          FileName = RenamingCols@FileName,",
				"          {Open Qty}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LeftColRename",
				"LeftColRename, selectingReqCols1 join(Project == {Project Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin1",
				"Invg0ItemsVsat select(mapColumn(",
				"          {Organization Code},",
				"          {Planning Make Buy Code},",
				"          {Postprocessing Lead Time},",
				"          {Preprocessing Lead Time},",
				"          {Processing Lead Time},",
				"          {Average Cost},",
				"          {Cum Manufacturing Lead Time},",
				"          {Fixed Lead Time},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Items$Comsec},",
				"          {Cumulative Total Lead Time}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingReqCols2",
				"SelectingReqCols2 derive(each(match(type=='string'), $$ = trim($$)),",
				"          each(match(type=='float'), $$ = toFloat(trim(toString($$))))) ~> DataCleansingTrims",
				"DataCleansingTrims derive(each(match(type=='string'), $$ = iif(isNull($$),'',$$)),",
				"          each(match(type=='float'), $$ = iif(isNull($$),toFloat(0),$$))) ~> DataCleasingNulls",
				"DataCleasingNulls derive({Total Buy LT} = iif({Preprocessing Lead Time}+{Processing Lead Time}+{Postprocessing Lead Time}>{Cumulative Total Lead Time},{Preprocessing Lead Time}+{Processing Lead Time}+{Postprocessing Lead Time},{Cumulative Total Lead Time}),",
				"          {Manufacturing LT} = iif({Fixed Lead Time}>{Cum Manufacturing Lead Time}, {Fixed Lead Time},{Cum Manufacturing Lead Time})) ~> Formulae6",
				"Formulae6 derive({WIP OTD LT} = iif({Planning Make Buy Code}=='Buy',{Total Buy LT},iif({Manufacturing LT}==0,{Total Buy LT}, {Manufacturing LT}))) ~> Formulae3",
				"leftjoin1 select(mapColumn(",
				"          FileName,",
				"          {Date Published},",
				"          {Account Class Code},",
				"          {Assembly$Inventory Item Id},",
				"          {Assembly$Organization Id},",
				"          {Item Number},",
				"          {Item Desc},",
				"          {Assembly Uom Code},",
				"          {Bill Alternate Bom},",
				"          {Bill Alternate Routing},",
				"          {Bill Revision},",
				"          {Bill Revision Date},",
				"          {Bill Revision Time},",
				"          {Bill Routing Revision},",
				"          {Bill Routing Revision Date},",
				"          {Bill Routing Revision Time},",
				"          {Build Sequence},",
				"          {Chart Of Accounts Name},",
				"          {Completion Subinventory},",
				"          {Daily Production Rate},",
				"          {Demand Class Code},",
				"          {Djob Deliver Kit To},",
				"          {Djob Hold Reason},",
				"          {Djob Hold Reason Code},",
				"          {Djob Line Number},",
				"          {Djob Nmr},",
				"          {Djob Nmr Date},",
				"          {Djob Order Number},",
				"          {Djob Outside Processing},",
				"          {Djob Sent To Sol},",
				"          {Djob Sol Pp Id},",
				"          {Djob Sol Pp Revision},",
				"          {Djob Sol Pp Version},",
				"          {Firm Planned Flag},",
				"          {Job Closed Date},",
				"          {Job Completed Date},",
				"          {Created By},",
				"          {Job Creation Date},",
				"          {Job Days Late},",
				"          {Job Days Until Due},",
				"          {Job Desc},",
				"          {Job Late Flag},",
				"          {Job #},",
				"          {Complete Qty},",
				"          {Start Qty},",
				"          {Job Quantity Scrapped},",
				"          {Job Released Date},",
				"          {Scheduled Comp Date},",
				"          {Sched Start Date},",
				"          {Job Start Time},",
				"          Status,",
				"          {Job Type},",
				"          {Job Type Ebs},",
				"          {Last Updated By},",
				"          {Last Updated By En},",
				"          {Last Update Date},",
				"          {Last Update Date En},",
				"          {Locator$Cv$Stock Locator Kff},",
				"          {Locator$Inventory Location Id},",
				"          {Locator$Organization Id},",
				"          {Lot Number},",
				"          {Master Organization Name},",
				"          {Org Code},",
				"          {Organization Name},",
				"          {Production Line Code},",
				"          {Production Line Description},",
				"          {Project Name} = LeftColRename@{Project Name},",
				"          Project,",
				"          {Res Hrs Exists},",
				"          {Routing Exist},",
				"          {Schedule Group Name},",
				"          {Task Number},",
				"          {Wip Entity Id},",
				"          {Wip Supply Type},",
				"          {Open Qty},",
				"          {Project Number},",
				"          {Business Area},",
				"          {Right_Project Name} = {Project Name},",
				"          Segment,",
				"          {Product Line Segment},",
				"          {Product Line},",
				"          {Project Manager Name},",
				"          {Award Group}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameCols1",
				"RenameCols1, Formulae3 join(RenameCols1@{Item Number} == DataCleasingNulls@{Item Number}",
				"     && {Org Code} == {Organization Code},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin2",
				"leftjoin2 derive({WIP OTD Days to Complete} = iif(isNull({Job Completed Date})==toBoolean('-1'),currentDate(),toDate({Job Completed Date}))) ~> derivedColumn1",
				"orgchart select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'ASSY$','') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DynamicSelect1",
				"DynamicSelect1 select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace($$,'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DynamicSelect2",
				"derivedColumn1, DynamicSelect2 join({Created By} == {Oracle User Name},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin3",
				"leftjoin3 select(mapColumn(",
				"          FileName,",
				"          {Date Published},",
				"          {Account Class Code},",
				"          {Assembly$Inventory Item Id},",
				"          {Assembly$Organization Id},",
				"          {Item Number} = RenameCols1@{Item Number},",
				"          {Item Desc},",
				"          {Assembly Uom Code},",
				"          {Bill Alternate Bom},",
				"          {Bill Alternate Routing},",
				"          {Bill Revision},",
				"          {Bill Revision Date},",
				"          {Bill Revision Time},",
				"          {Bill Routing Revision},",
				"          {Bill Routing Revision Date},",
				"          {Bill Routing Revision Time},",
				"          {Build Sequence},",
				"          {Chart Of Accounts Name},",
				"          {Completion Subinventory},",
				"          {Daily Production Rate},",
				"          {Demand Class Code},",
				"          {Djob Deliver Kit To},",
				"          {Djob Hold Reason},",
				"          {Djob Hold Reason Code},",
				"          {Djob Line Number},",
				"          {Djob Nmr},",
				"          {Djob Nmr Date},",
				"          {Djob Order Number},",
				"          {Djob Outside Processing},",
				"          {Djob Sent To Sol},",
				"          {Djob Sol Pp Id},",
				"          {Djob Sol Pp Revision},",
				"          {Djob Sol Pp Version},",
				"          {Firm Planned Flag},",
				"          {Job Closed Date},",
				"          {Job Completed Date},",
				"          {Created By},",
				"          {Job Creation Date},",
				"          {Job Days Late},",
				"          {Job Days Until Due},",
				"          {Job Desc},",
				"          {Job Late Flag},",
				"          {Job #},",
				"          {Complete Qty},",
				"          {Start Qty},",
				"          {Job Quantity Scrapped},",
				"          {Job Released Date},",
				"          {Scheduled Comp Date},",
				"          {Sched Start Date},",
				"          {Job Start Time},",
				"          Status,",
				"          {Job Type},",
				"          {Job Type Ebs},",
				"          {Last Updated By},",
				"          {Last Updated By En},",
				"          {Last Update Date},",
				"          {Last Update Date En},",
				"          {Locator$Cv$Stock Locator Kff},",
				"          {Locator$Inventory Location Id},",
				"          {Locator$Organization Id},",
				"          {Lot Number},",
				"          {Master Organization Name},",
				"          {Org Code},",
				"          {Organization Name},",
				"          {Production Line Code},",
				"          {Production Line Description},",
				"          {Project Name},",
				"          Project,",
				"          {Res Hrs Exists},",
				"          {Routing Exist},",
				"          {Schedule Group Name},",
				"          {Task Number},",
				"          {Wip Entity Id},",
				"          {Wip Supply Type},",
				"          {Open Qty},",
				"          {Project Number},",
				"          {Business Area},",
				"          {Right_Project Name},",
				"          Segment,",
				"          {Product Line Segment},",
				"          {Product Line},",
				"          {Project Manager Name},",
				"          {Award Group},",
				"          {Organization Code},",
				"          {Planning Make Buy Code},",
				"          {Postprocessing Lead Time},",
				"          {Preprocessing Lead Time},",
				"          {Processing Lead Time},",
				"          {Average Cost},",
				"          {Cum Manufacturing Lead Time},",
				"          {Fixed Lead Time},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Items$Comsec},",
				"          {Cumulative Total Lead Time},",
				"          {Total Buy LT},",
				"          {Manufacturing LT},",
				"          {WIP OTD LT},",
				"          {WIP OTD Days to Complete},",
				"          {Address Country},",
				"          {Assignment Effective Strt Date},",
				"          {Assignment Number},",
				"          {Business Group},",
				"          {Business Group Country},",
				"          {Business Segment},",
				"          {Business Title},",
				"          {Cost Center},",
				"          {Email Address},",
				"          {Employee Effective Start Date},",
				"          {Employee Id},",
				"          {Employee Number},",
				"          {Employment Category},",
				"          {First Name},",
				"          {Full Name},",
				"          {Known As},",
				"          {Last Name},",
				"          Location,",
				"          {Manager Flag},",
				"          {Oracle User Name},",
				"          {Postal Code},",
				"          State,",
				"          {Supervisor Email Address},",
				"          {Supervisor Employee Number},",
				"          {Supervisor First Name},",
				"          {Supervisor Full Name},",
				"          {Supervisor Last Name},",
				"          {Supervisor Oracle User Name},",
				"          {Town Or City},",
				"          {Work Postal Code},",
				"          {Work State},",
				"          {Work Town Or City},",
				"          {Supervisor Filter}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols",
				"derivedColumn1 derive({WO Owner} = iif({Org Code}=='10', 'M. McGee',\r",
				"iif({Org Code}=='75', 'R. Rhodes',\r",
				"iif({Org Code}=='30' && Status=='Released','B. Tack / G. Tell',\r",
				"iif({Org Code}=='30' && Status=='Unreleased','M. Hartranft / J. de Queljoe',\r",
				"'Other')))),",
				"          {Snapshot Date} = currentDate()) ~> derivedColumn2",
				"derivedColumn2 derive({Day of Week} = toString({Snapshot Date},'E')) ~> derivedColumn3",
				"derivedColumn3 filter(({Status} ==\"Released\"||{Status} == \"Unreleased\") && !regexMatch(RenameCols1@{Item Number}, 'METMECH')) ~> filteringStatus",
				"filteringStatus filter({Org Code} == \"10\"",
				"||",
				"{Org Code} == \"75\"",
				"||",
				"{Org Code} == \"30\") ~> filteringOrgCode",
				"filteringOrgCode derive(Org = 'Org '+{Org Code},",
				"          {Job Late Flag} = iif({Job Days Late} <= '14','N','Y')) ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          {Job Late Flag},",
				"          {Job #},",
				"          Status,",
				"          {Org Code},",
				"          {WO Owner},",
				"          {Snapshot Date},",
				"          {Day of Week}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy({Job Late Flag},",
				"          Status,",
				"          {Org Code},",
				"          {WO Owner},",
				"          {Snapshot Date},",
				"          {Day of Week}),",
				"     {CountDistinct_Job #} = countDistinct({Job #})) ~> Summarise2",
				"Summarise2 pivot(pivotBy({Job Late Flag}),",
				"     {} = first({CountDistinct_Job #}),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> Crosstab1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['WIP Job Summary (Full).csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1),",
				"     format: 'delimited',",
				"     fileSystem: 'wip-job-summary',",
				"     folderPath: 'output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> WIPJobSummaryFull",
				"selectReqCols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo') ~> TableauOutputSql"
			]
		}
	}
}