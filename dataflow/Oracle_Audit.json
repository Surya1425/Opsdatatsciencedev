{
	"name": "Oracle_Audit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "QAG0_Audit_Details_Vsat",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "oracleOutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Lead Internal Auditor} as string,",
				"          Occurrence as string,",
				"          {Organization Code} as string,",
				"          {Plan Id} as string,",
				"          {Project Number} as string,",
				"          {Question Count} as string,",
				"          {Standard Violated} as string,",
				"          {Start Date} as string,",
				"          Supplier as string,",
				"          {Supplier Site} as string,",
				"          {Task Number} as string,",
				"          {Answer Count} as string,",
				"          {Audit Area} as string,",
				"          {Audit Location} as string,",
				"          {Audit Name} as string,",
				"          {Audit Num} as string,",
				"          {Audit Objective} as string,",
				"          {Audit Result} as string,",
				"          {Audit Status} as string,",
				"          {Audit Summary} as string,",
				"          {Audit Type} as string,",
				"          {Cars Count} as string,",
				"          Comments as string,",
				"          Customer as string,",
				"          {Det Audit Area} as string,",
				"          {Det Audit Question} as string,",
				"          {Det Auditor Comments} as string,",
				"          {Det Collection Id} as string,",
				"          {Det Internal Auditee} as string,",
				"          {Det Last Update By} as string,",
				"          {Det Last Update Date} as string,",
				"          {Det Occurrence} as string,",
				"          {Det Plan Id} as string,",
				"          {Det Question Category} as string,",
				"          {Det Question Code} as string,",
				"          {Det Question Response} as string,",
				"          {Det Response Date} as string,",
				"          {Det Special Instructions} as string,",
				"          {Det Vsat Follow Up Action} as string,",
				"          {Det Vsat Follow Up Date} as string,",
				"          {Det Vsat Follow Up Person} as string,",
				"          {Due Date} as string,",
				"          {End Date} as string,",
				"          {External Auditee} as string,",
				"          {External Auditor} as string,",
				"          {Follow Up Date} as string,",
				"          {Internal Auditee} as string,",
				"          {Internal Auditee Email} as string,",
				"          {Internal Auditor} as string,",
				"          {Internal Auditor Email} as string,",
				"          {Repo Load Dttm} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          {Lead Internal Auditor},",
				"          Occurrence,",
				"          {Organization Code},",
				"          {Plan Id},",
				"          {Project Number},",
				"          {Question Count},",
				"          {Standard Violated},",
				"          {Start Date},",
				"          Supplier,",
				"          {Supplier Site},",
				"          {Task Number},",
				"          {Answer Count},",
				"          {Audit Area},",
				"          {Audit Location},",
				"          {Audit Name},",
				"          {Audit Num},",
				"          {Audit Objective},",
				"          {Audit Result},",
				"          {Audit Status},",
				"          {Audit Summary},",
				"          {Audit Type},",
				"          {Cars Count},",
				"          Comments,",
				"          Customer,",
				"          {Det Audit Area},",
				"          {Det Audit Question},",
				"          {Det Auditor Comments},",
				"          {Det Collection Id},",
				"          {Det Internal Auditee},",
				"          {Det Last Update By},",
				"          {Det Last Update Date},",
				"          {Det Occurrence},",
				"          {Det Plan Id},",
				"          {Det Question Category},",
				"          {Det Question Code},",
				"          {Det Question Response},",
				"          {Det Response Date},",
				"          {Det Special Instructions},",
				"          {Det Vsat Follow Up Action},",
				"          {Det Vsat Follow Up Date},",
				"          {Det Vsat Follow Up Person},",
				"          {Due Date},",
				"          {End Date},",
				"          {External Auditee},",
				"          {External Auditor},",
				"          {Follow Up Date},",
				"          {Internal Auditee},",
				"          {Internal Auditee Email},",
				"          {Internal Auditor},",
				"          {Internal Auditor Email},",
				"          {Repo Load Dttm}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(WorkflowGeneratingData = '',",
				"          TableauPublishDate = currentDate(),",
				"          Audit_Location1 = iif(isNull({Audit Location}) && {Organization Code} == '08','US - GERMANTOWN', \r",
				"iif(isNull({Audit Location})  && {Organization Code} == '10', 'US - CARLSBAD',\r",
				"iif(isNull({Audit Location})  && {Organization Code} == '14', 'US - CLEVELAND',\r",
				"iif(isNull({Audit Location})  && {Organization Code} == '30', 'US - TEMPE',\r",
				"iif(isNull({Audit Location})  && {Organization Code} == '75', 'US - DULUTH',{Audit Location} \r",
				"))))),",
				"          Supplier1 = iif (\r",
				"     isNull({Supplier}) && \r",
				"     {Audit Type} == 'SUPPLIER' &&\r",
				"     instr({Audit Objective},'{') >= 0 && instr({Audit Objective},'}') >= 0 , \r",
				"    substring({Audit Objective},instr({Audit Objective},'{') + 1,instr({Audit Objective},'}') - instr({Audit Objective},'{')-1),{Supplier} \r",
				"    )) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          {Lead Internal Auditor},",
				"          Occurrence,",
				"          {Organization Code},",
				"          {Plan Id},",
				"          {Project Number},",
				"          {Question Count},",
				"          {Standard Violated},",
				"          {Start Date},",
				"          Supplier = Supplier1,",
				"          {Supplier Site},",
				"          {Task Number},",
				"          {Answer Count},",
				"          {Audit Area},",
				"          {Audit Location} = Audit_Location1,",
				"          {Audit Name},",
				"          {Audit Num},",
				"          {Audit Objective},",
				"          {Audit Result},",
				"          {Audit Status},",
				"          {Audit Summary},",
				"          {Audit Type},",
				"          {Cars Count},",
				"          Comments,",
				"          Customer,",
				"          {Det Audit Area},",
				"          {Det Audit Question},",
				"          {Det Auditor Comments},",
				"          {Det Collection Id},",
				"          {Det Internal Auditee},",
				"          {Det Last Update By},",
				"          {Det Last Update Date},",
				"          {Det Occurrence},",
				"          {Det Plan Id},",
				"          {Det Question Category},",
				"          {Det Question Code},",
				"          {Det Question Response},",
				"          {Det Response Date},",
				"          {Det Special Instructions},",
				"          {Det Vsat Follow Up Action},",
				"          {Det Vsat Follow Up Date},",
				"          {Det Vsat Follow Up Person},",
				"          {Due Date},",
				"          {End Date},",
				"          {External Auditee},",
				"          {External Auditor},",
				"          {Follow Up Date},",
				"          {Internal Auditee},",
				"          {Internal Auditee Email},",
				"          {Internal Auditor},",
				"          {Internal Auditor Email},",
				"          {Repo Load Dttm},",
				"          WorkflowGeneratingData,",
				"          TableauPublishDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['QAPPMergedQAPPList'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}