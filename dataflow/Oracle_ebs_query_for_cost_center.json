{
	"name": "Oracle_ebs_query_for_cost_center",
	"properties": {
		"folder": {
			"name": "pte_project_cost"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "ProjectExpenditureData"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "TotalBudgetByProjectNumber"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "ProductLineByProjectNumber"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "TemplateNumberByProjectNumber"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "PAG0Tasks"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv_output",
						"type": "DatasetReference"
					},
					"name": "FinalOutput"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "FormulaeApplied1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "LeftOuter2"
				},
				{
					"name": "FormulaeApplied2"
				},
				{
					"name": "FullOuterJoin"
				},
				{
					"name": "LeftOuter3"
				},
				{
					"name": "DeselectingColumnsinJoin1"
				},
				{
					"name": "DeselectingColumnsinJoin2"
				},
				{
					"name": "DeselectingColumnsinJoin3"
				},
				{
					"name": "RightOuter1"
				},
				{
					"name": "FinalSelect"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PROJECT_NUMBER as string,",
				"          TASK_NUMBER as string,",
				"          TASK_NAME as string,",
				"          DIVISION as string,",
				"          EXPENDITURE_TYPE as string,",
				"          EXPENDITURE_CATEGORY as string,",
				"          EXPENDITURE_COMMENT as string,",
				"          ITEM_NUMBER as string,",
				"          ITEM_DESCRIPTION as string,",
				"          QUANTITY as double,",
				"          EXTERNAL_TRANSACTION_SOURCE as string,",
				"          SYSTEM_LINKAGE as string,",
				"          INCURRED_ORG as string,",
				"          PROVIDER_ORGANIZATION as string,",
				"          EMPLOYEE_NAME as string,",
				"          EMPLOYEE_FULL_NAME as string,",
				"          EMPLOYEE_ID as string,",
				"          PERIOD_NAME as string,",
				"          GL_DATE as date,",
				"          EXPENDITURE_ITEM_DATE as date,",
				"          EXPENDITURE_ENDING_DATE as date,",
				"          REGULAR_TIME as double,",
				"          BURDENED_COST_PC as double,",
				"          PROJECT_DESCRIPTION as string,",
				"          PROJECT_NAME as string,",
				"          PROJECT_STATUS as string,",
				"          UNIT_OF_MEASURE as string,",
				"          EXP_ITEM_EXTERNAL_SYS_REF as string,",
				"          INCURRED_COST_CENTER as string,",
				"          COST_CENTER_DESC as string,",
				"          CLASS_CODE as string,",
				"          CLASS_CATEGORY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProjectExpenditureData",
				"source(output(",
				"          PROJECT_NUMBER as string,",
				"          BUDGETED_BURDENED_COST as double,",
				"          PROJECT_DESCRIPTION as string,",
				"          PROJECT_STATUS as string,",
				"          PROJECT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TotalBudgetByProjectNumber",
				"source(output(",
				"          PROJECT_NUMBER as string,",
				"          PRODUCT_LINE as string,",
				"          SEGMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProductLineByProjectNumber",
				"source(output(",
				"          PROJECT_NUMBER as string,",
				"          TEMPLATE_NUMBER as string,",
				"          PROJECT_COMPLETION_DATE as string,",
				"          PROJECT_CLOSED_DATE as string,",
				"          PROJECT_START_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TemplateNumberByProjectNumber",
				"source(output(",
				"          TASK_NUMBER as string,",
				"          TASK_NAME as string,",
				"          TASK_DESCRIPTION as string,",
				"          PROJECT_NUMBER as string,",
				"          PROJECT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PAG0Tasks",
				"ProjectExpenditureData select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          TASK_NUMBER,",
				"          TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          PROJECT_DESCRIPTION,",
				"          PROJECT_NAME,",
				"          PROJECT_STATUS,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"TotalBudgetByProjectNumber select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_DESCRIPTION,",
				"          PROJECT_STATUS,",
				"          PROJECT_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"ProductLineByProjectNumber select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          PRODUCT_LINE,",
				"          SEGMENT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"TemplateNumberByProjectNumber select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          TEMPLATE_NUMBER,",
				"          PROJECT_COMPLETION_DATE,",
				"          PROJECT_CLOSED_DATE,",
				"          PROJECT_START_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select1 derive(EXPENDITURE_COMMENT = iif(PROJECT_NUMBER=='I700133',toString(null()),EXPENDITURE_COMMENT)) ~> FormulaeApplied1",
				"select2 aggregate(groupBy(PROJECT_NUMBER),",
				"     BUDGETED_BURDENED_COST = max(BUDGETED_BURDENED_COST),",
				"          PROJECT_STATUS = max(PROJECT_STATUS),",
				"          PROJECT_NAME = max(PROJECT_NAME),",
				"          PROJECT_DESCRIPTION = max(PROJECT_DESCRIPTION)) ~> aggregate1",
				"select3 aggregate(groupBy(PROJECT_NUMBER),",
				"     SEGMENT = max(SEGMENT),",
				"          PRODUCT_LINE = max(PRODUCT_LINE)) ~> aggregate2",
				"select4 aggregate(groupBy(PROJECT_NUMBER),",
				"     TEMPLATE_NUMBER = max(TEMPLATE_NUMBER),",
				"          PROJECT_COMPLETION_DATE = max(PROJECT_COMPLETION_DATE),",
				"          PROJECT_CLOSED_DATE = max(PROJECT_CLOSED_DATE),",
				"          PROJECT_START_DATE = max(PROJECT_START_DATE)) ~> aggregate3",
				"DeselectingColumnsinJoin1, aggregate2 join(DeselectingColumnsinJoin1@PROJECT_NUMBER == aggregate2@PROJECT_NUMBER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftOuter2",
				"RightOuter1 derive(Last_Refresh = toString(currentTimestamp(),'yyyy-MM-dd HH:mm:ss')) ~> FormulaeApplied2",
				"FormulaeApplied1, aggregate1 join(select1@PROJECT_NUMBER == aggregate1@PROJECT_NUMBER,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FullOuterJoin",
				"DeselectingColumnsinJoin2, aggregate3 join(DeselectingColumnsinJoin2@PROJECT_NUMBER == aggregate3@PROJECT_NUMBER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftOuter3",
				"FullOuterJoin select(mapColumn(",
				"          TASK_NUMBER,",
				"          TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF,",
				"          PROJECT_NUMBER = aggregate1@PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_STATUS = aggregate1@PROJECT_STATUS,",
				"          PROJECT_NAME = aggregate1@PROJECT_NAME,",
				"          PROJECT_DESCRIPTION = aggregate1@PROJECT_DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeselectingColumnsinJoin1",
				"LeftOuter2 select(mapColumn(",
				"          TASK_NUMBER,",
				"          TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF,",
				"          PROJECT_NUMBER = DeselectingColumnsinJoin1@PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_STATUS,",
				"          PROJECT_NAME,",
				"          PROJECT_DESCRIPTION,",
				"          SEGMENT,",
				"          PRODUCT_LINE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeselectingColumnsinJoin2",
				"LeftOuter3 select(mapColumn(",
				"          TASK_NUMBER,",
				"          TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF,",
				"          PROJECT_NUMBER = DeselectingColumnsinJoin2@PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_STATUS,",
				"          PROJECT_NAME,",
				"          PROJECT_DESCRIPTION,",
				"          SEGMENT,",
				"          PRODUCT_LINE,",
				"          TEMPLATE_NUMBER,",
				"          PROJECT_COMPLETION_DATE,",
				"          PROJECT_CLOSED_DATE,",
				"          PROJECT_START_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeselectingColumnsinJoin3",
				"DeselectingColumnsinJoin3, PAG0Tasks join(DeselectingColumnsinJoin3@TASK_NUMBER == PAG0Tasks@TASK_NUMBER",
				"     && DeselectingColumnsinJoin3@TASK_NAME == PAG0Tasks@TASK_NAME",
				"     && DeselectingColumnsinJoin3@PROJECT_NUMBER == PAG0Tasks@PROJECT_NUMBER,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> RightOuter1",
				"FormulaeApplied2 select(mapColumn(",
				"          TASK_NUMBER = DeselectingColumnsinJoin3@TASK_NUMBER,",
				"          TASK_NAME = DeselectingColumnsinJoin3@TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF,",
				"          PROJECT_NUMBER = DeselectingColumnsinJoin3@PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_STATUS,",
				"          PROJECT_NAME = DeselectingColumnsinJoin3@PROJECT_NAME,",
				"          PROJECT_DESCRIPTION,",
				"          SEGMENT,",
				"          PRODUCT_LINE,",
				"          TEMPLATE_NUMBER,",
				"          PROJECT_COMPLETION_DATE,",
				"          PROJECT_CLOSED_DATE,",
				"          PROJECT_START_DATE,",
				"          TASK_DESCRIPTION,",
				"          PROJECT_NAME = PAG0Tasks@PROJECT_NAME,",
				"          Last_Refresh",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FinalSelect",
				"FinalSelect sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['pte_project_cost.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          TASK_NUMBER,",
				"          TASK_NAME,",
				"          DIVISION,",
				"          EXPENDITURE_TYPE,",
				"          EXPENDITURE_CATEGORY,",
				"          EXPENDITURE_COMMENT,",
				"          ITEM_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          QUANTITY,",
				"          EXTERNAL_TRANSACTION_SOURCE,",
				"          SYSTEM_LINKAGE,",
				"          INCURRED_ORG,",
				"          PROVIDER_ORGANIZATION,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_FULL_NAME,",
				"          EMPLOYEE_ID,",
				"          PERIOD_NAME,",
				"          GL_DATE,",
				"          EXPENDITURE_ITEM_DATE,",
				"          EXPENDITURE_ENDING_DATE,",
				"          REGULAR_TIME,",
				"          BURDENED_COST_PC,",
				"          UNIT_OF_MEASURE,",
				"          EXP_ITEM_EXTERNAL_SYS_REF,",
				"          PROJECT_NUMBER,",
				"          BUDGETED_BURDENED_COST,",
				"          PROJECT_STATUS,",
				"          PROJECT_NAME,",
				"          PROJECT_DESCRIPTION,",
				"          SEGMENT,",
				"          PRODUCT_LINE,",
				"          TEMPLATE_NUMBER,",
				"          PROJECT_COMPLETION_DATE,",
				"          PROJECT_CLOSED_DATE,",
				"          PROJECT_START_DATE,",
				"          TASK_DESCRIPTION,",
				"          Last_Refresh",
				"     ),",
				"     partitionBy('hash', 1)) ~> FinalOutput"
			]
		}
	}
}