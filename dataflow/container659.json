{
	"name": "container659",
	"properties": {
		"folder": {
			"name": "pte-project-cost-final"
		},
		"type": "Flowlet",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "csvLS1",
						"type": "LinkedServiceReference"
					},
					"name": "AllPODistributions"
				},
				{
					"linkedService": {
						"referenceName": "csvLS1",
						"type": "LinkedServiceReference"
					},
					"name": "ProjectNumberAndDescription"
				},
				{
					"linkedService": {
						"referenceName": "csvLS1",
						"type": "LinkedServiceReference"
					},
					"name": "Req1"
				},
				{
					"linkedService": {
						"referenceName": "csvLS1",
						"type": "LinkedServiceReference"
					},
					"name": "req2"
				},
				{
					"linkedService": {
						"referenceName": "csvLS1",
						"type": "LinkedServiceReference"
					},
					"name": "pog0reqdistposvsat"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "leftjoin1"
				},
				{
					"name": "union1"
				},
				{
					"name": "select3"
				},
				{
					"name": "leftjoin2"
				},
				{
					"name": "CIPFilter"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "leftjoin3"
				},
				{
					"name": "RemoveAllJoinCOls"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "output1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Acceptance Count} as short,",
				"          {Account Type} as string,",
				"          {Acknowledge Flag} as boolean,",
				"          {Amount Billed} as double,",
				"          {Authorization Status} as string,",
				"          {Automated PO} as string,",
				"          {Award Class PO} as string,",
				"          {Award Group} as string,",
				"          {Business Segment} as string,",
				"          Buyer as string,",
				"          {Buyer Number} as short,",
				"          {Buyer Org} as string,",
				"          {Buyer Type} as string,",
				"          {Cancel Flag} as string,",
				"          {Closure Status} as string,",
				"          {Commodity Code} as string,",
				"          {Commodity Description} as string,",
				"          {Commodity Group} as string,",
				"          {Commodity Long Description} as string,",
				"          {Commodity Segment} as string,",
				"          {Cost Center} as short,",
				"          {Date Published} as string,",
				"          {Deliver To Person} as string,",
				"          {Delivery to OTD} as string,",
				"          {Delivery to Promise} as string,",
				"          {Destination Org} as short,",
				"          {Distribution #} as short,",
				"          {Expenditure Type} as string,",
				"          {Extended Price} as double,",
				"          {First Acknowledge Date} as date,",
				"          {Hydra Projects} as string,",
				"          {Item #} as string,",
				"          {Item Description} as string,",
				"          {Item Revision} as short,",
				"          {Item Target Cost} as string,",
				"          Justification as string,",
				"          {Last Receipt Date} as date,",
				"          {Last Receipt Fiscal Date} as date,",
				"          {Make/Buy} as string,",
				"          Manager as string,",
				"          {Matching Type} as string,",
				"          {Need By Date} as date,",
				"          {Original OTD} as date,",
				"          {OTD Date} as timestamp,",
				"          {OTD Days} as short,",
				"          {OTD Field Status} as string,",
				"          {OTD Status} as string,",
				"          {Past Due Status code} as string,",
				"          {PO #} as integer,",
				"          {PO Charge Account} as string,",
				"          {PO Creation Date} as date,",
				"          {PO Currency Code} as string,",
				"          {PO Line #} as double,",
				"          {PO Line Creation Date} as date,",
				"          {PO Line Creation Fiscal Date} as date,",
				"          {PO Line Open Flag} as boolean,",
				"          {PO Line Type} as string,",
				"          {PO Type} as string,",
				"          {PO Type 1} as string,",
				"          {Product Line} as string,",
				"          {Product Line Segment} as string,",
				"          {Product Segment} as string,",
				"          {Project Business Area} as string,",
				"          {Project Manager Name} as string,",
				"          {Project Name} as string,",
				"          {Project Number} as string,",
				"          {Promise Days} as short,",
				"          {Promise Fiscal Date} as date,",
				"          {Promise Status} as string,",
				"          {Promised Date} as date,",
				"          {Qty Billed} as short,",
				"          {Qty Cancelled} as short,",
				"          {Qty Delivered} as short,",
				"          {Qty Open} as short,",
				"          {Qty Ordered} as short,",
				"          {Receipt Routing} as string,",
				"          {Receipt Status} as string,",
				"          {Receipt Status (Promise Date)} as string,",
				"          {Receipt/Expected Receipt Date} as date,",
				"          {Release #} as string,",
				"          {Req #} as integer,",
				"          {Req Create Date} as date,",
				"          {Req Line #} as short,",
				"          {Requisition Created By} as string,",
				"          {Right_PO Type} as string,",
				"          {SBR Group} as string,",
				"          {SBR Type} as string,",
				"          {Ship To Location} as string,",
				"          {Shipm$Mrp Pull In Message Root} as string,",
				"          {Shipment #} as short,",
				"          Supplier as string,",
				"          {Supplier Commodity Group} as string,",
				"          {Supplier Commodity Segment} as string,",
				"          {Supplier Group Name} as string,",
				"          {Supplier Item PO} as string,",
				"          {Supplier Item Req} as string,",
				"          {Supplier Segment} as string,",
				"          {Supplier Type} as string,",
				"          {Task Number} as short,",
				"          {TAT Days} as double,",
				"          Terms as string,",
				"          {Unit Price} as double,",
				"          UOM as string,",
				"          {Vend$Require Po Acknowledgemen} as string,",
				"          {Vendor Number} as integer,",
				"          {Total Lead Time} as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'inspections',",
				"     folderPath: 'raw',",
				"     fileName: 'All PO Distributions.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> AllPODistributions",
				"source(output(",
				"          PROJECT_NUMBER as string,",
				"          PROJECT_DESCRIPTION as string,",
				"          KEY_MEMBER_COST_CENTER as integer,",
				"          TEMPLATE_NUMBER as string,",
				"          PROJECT_STATUS as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'pte-project-cost-final',",
				"     folderPath: 'input',",
				"     fileName: 'ProjectNoAndDescription.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> ProjectNumberAndDescription",
				"source(output(",
				"          JN as string,",
				"          {Req Number} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     fileSystem: 'pte-project-cost-final',",
				"     folderPath: 'input',",
				"     fileName: 'RequisitionNumberFile1.xlsx',",
				"     sheetName: 'Sheet1',",
				"     firstRowAsHeader: true) ~> Req1",
				"source(output(",
				"          JN as string,",
				"          {Req Number} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     fileSystem: 'pte-project-cost-final',",
				"     folderPath: 'input',",
				"     fileName: 'RequisitionNumberFile2.xlsx',",
				"     sheetName: 'Sheet1',",
				"     firstRowAsHeader: true) ~> req2",
				"source(output(",
				"          REQUISITION_NUMBER as string,",
				"          ITEM_DESCRIPTION as string,",
				"          AUTHORIZATION_STATUS as string,",
				"          REQ_ITEMCATPUR_KFF as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'pte-project-cost-final',",
				"     folderPath: 'input',",
				"     fileName: 'POG0_REQ_DIST_POS_VSAT.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> pog0reqdistposvsat",
				"AllPODistributions filter(!regexMatch({Closure Status},\"CLOSED\") && {Cancel Flag}!='Y') ~> filter1",
				"ProjectNumberAndDescription select(mapColumn(",
				"          PROJECT_NUMBER,",
				"          PROJECT_DESCRIPTION,",
				"          KEY_MEMBER_COST_CENTER,",
				"          {Template Number} = TEMPLATE_NUMBER,",
				"          PROJECT_STATUS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"filter1 select(mapColumn(",
				"          {Billed Amt} = {Amount Billed},",
				"          Buyer,",
				"          {Item #},",
				"          {Item Desc} = {Item Description},",
				"          {PO Number} = {PO #},",
				"          {PO Line #},",
				"          Project = {Project Number},",
				"          {Promise Date} = {Promised Date},",
				"          {Qty Cancelled},",
				"          {Qty Open},",
				"          {Qty Ordered},",
				"          {PO Requisition Number} = {Req #},",
				"          {Vendor Name} = Supplier,",
				"          {Unit Price}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive({Ordered Amt} = ({Qty Ordered}-{Qty Cancelled})*{Unit Price}) ~> derivedColumn1",
				"derivedColumn1 derive({Unbilled Amt} = {Ordered Amt}-{Billed Amt}) ~> derivedColumn2",
				"derivedColumn2, select1 join(Project == PROJECT_NUMBER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin1",
				"Req1, req2 union(byName: true)~> union1",
				"union1 select(mapColumn(",
				"          JN,",
				"          REQUISITION_NUMBER = {Req Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"leftjoin1, select3 join(Project == JN,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin2",
				"select5 filter(!isNull(ITEM_DESCRIPTION) && {Authorization Status} == 'APPROVED' && {Req Itemcatpur Kff} == \"CIP.PROJECT\") ~> CIPFilter",
				"CIPFilter aggregate(groupBy(ITEM_DESCRIPTION),",
				"     REQUISITION_NUMBER = dropRight(toString(reduce(collect(REQUISITION_NUMBER),'',#item+','+#acc,#result)),1)) ~> aggregate1",
				"leftjoin2, aggregate1 join(PROJECT_DESCRIPTION == ITEM_DESCRIPTION,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin3",
				"leftjoin3 select(mapColumn(",
				"          {Billed Amt},",
				"          Buyer,",
				"          {Item #},",
				"          {Item Desc},",
				"          {PO Number},",
				"          {PO Line #},",
				"          Project,",
				"          {Promise Date},",
				"          {Qty Cancelled},",
				"          {Qty Open},",
				"          {Qty Ordered},",
				"          {PO Requisition Number},",
				"          {Vendor Name},",
				"          {Unit Price},",
				"          {Ordered Amt},",
				"          {Unbilled Amt},",
				"          PROJECT_NUMBER,",
				"          PROJECT_DESCRIPTION,",
				"          KEY_MEMBER_COST_CENTER,",
				"          {Template Number},",
				"          PROJECT_STATUS,",
				"          JN,",
				"          ITEM_DESCRIPTION,",
				"          REQ_FROM_ITEM = aggregate1@REQUISITION_NUMBER,",
				"          REQUISITION_NUMBER = select3@REQUISITION_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveAllJoinCOls",
				"RemoveAllJoinCOls derive(REQUISITION_NUMBER = iif(isNull(REQUISITION_NUMBER),REQ_FROM_ITEM,REQUISITION_NUMBER)) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          {Billed Amt},",
				"          Buyer,",
				"          {Item #},",
				"          {Item Desc},",
				"          {PO Number},",
				"          {PO Line #},",
				"          Project,",
				"          {Promise Date},",
				"          {Qty Cancelled},",
				"          {Qty Open},",
				"          {Qty Ordered},",
				"          {PO Requisition Number},",
				"          {Vendor Name},",
				"          {Unit Price},",
				"          {Ordered Amt},",
				"          {Unbilled Amt},",
				"          PROJECT_NUMBER,",
				"          KEY_MEMBER_COST_CENTER,",
				"          {Template Number},",
				"          PROJECT_STATUS,",
				"          JN,",
				"          ITEM_DESCRIPTION,",
				"          {Project Req Number} = REQUISITION_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"pog0reqdistposvsat select(mapColumn(",
				"          REQUISITION_NUMBER,",
				"          ITEM_DESCRIPTION,",
				"          {Authorization Status} = AUTHORIZATION_STATUS,",
				"          {Req Itemcatpur Kff} = REQ_ITEMCATPUR_KFF",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select4 output() ~> output1"
			]
		}
	}
}