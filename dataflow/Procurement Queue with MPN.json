{
	"name": "Procurement Queue with MPN",
	"properties": {
		"folder": {
			"name": "timpildataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Procurement_Queue_with_MPN",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Buyercleanup",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "INVG0manufactureitemdetail",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "PAG0projects",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "invg0itemsvsat",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "QAG0_QAPP_CC_Vsat",
						"type": "DatasetReference"
					},
					"name": "source6"
				},
				{
					"dataset": {
						"referenceName": "QAG0_QAPP_PN_Vsat",
						"type": "DatasetReference"
					},
					"name": "source7"
				},
				{
					"dataset": {
						"referenceName": "QAG0_QAPP_Project_Vsat",
						"type": "DatasetReference"
					},
					"name": "source8"
				},
				{
					"dataset": {
						"referenceName": "AllPoDistributions",
						"type": "DatasetReference"
					},
					"name": "source9"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProcurementQueuewithMPN",
						"type": "DatasetReference"
					},
					"name": "ProcurementQueuewitMPNyxdb"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join2"
				},
				{
					"name": "select3"
				},
				{
					"name": "join3"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select4"
				},
				{
					"name": "join4"
				},
				{
					"name": "select6"
				},
				{
					"name": "filter2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select7"
				},
				{
					"name": "select8"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select9"
				},
				{
					"name": "join5"
				},
				{
					"name": "select10"
				},
				{
					"name": "select11"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join6"
				},
				{
					"name": "select12"
				},
				{
					"name": "join7"
				},
				{
					"name": "join8"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "select13"
				},
				{
					"name": "select14"
				},
				{
					"name": "filter3"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "join9"
				},
				{
					"name": "select15"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "join10"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "join11"
				},
				{
					"name": "filter4"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "select17"
				},
				{
					"name": "select18"
				},
				{
					"name": "select19"
				},
				{
					"name": "select20"
				},
				{
					"name": "select21"
				},
				{
					"name": "select22"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AUTHORIZATION_STATUS as string,",
				"          CLOSED_CODE as string,",
				"          DOCUMENT_TYPE as string,",
				"          ITEM_DESCRIPTION as string,",
				"          {ITEM$SV$PART_NUMBER} as string,",
				"          ITEM_REVISION as boolean,",
				"          LINE_TYPE as string,",
				"          NEED_BY_DATE as string,",
				"          PROJECT_NAME as string,",
				"          PROJECT_NUMBER as string,",
				"          PREPARER_NAME as string,",
				"          REQ_DELIVER_TO_LOCATION as string,",
				"          REQ_DESTINATION_ORG_CODE as short,",
				"          REQ_LINE_CANCEL_FLAG as boolean,",
				"          REQ_LINE_QTY_DELIVERED as string,",
				"          REQ_LINE_QUANTITY as string,",
				"          REQUISITION_APPROVAL_DATE as string,",
				"          REQUISITION_CREATION_DATE as string,",
				"          REQUISITION_NUMBER as string,",
				"          SUGGESTED_BUYER_NAME as string,",
				"          SUGGESTED_VENDOR_NAME as string,",
				"          TASK_NAME as string,",
				"          UNIT_PRICE as integer,",
				"          UNIT_OF_MEASURE as string,",
				"          PO_NUMBER as string,",
				"          LINE_NUMBER as string,",
				"          TASK_NUMBER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          {Buyer Name} as string,",
				"          Name as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          {First Name || ' ' || Last Name} as string,",
				"          FLast as string,",
				"          {Inactive Flag} as string,",
				"          {Buyer Type} as string,",
				"          {Buyer Org} as string,",
				"          Manager as string,",
				"          State as string,",
				"          F12 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          {A$CHART_OF_ACCOUNTS_NAME} as string,",
				"          {A$ITEM_DESCRIPTION} as string,",
				"          {A$MASTER_ORGANIZATION_NAME} as string,",
				"          {A$ORGANIZATION_NAME} as string,",
				"          {A$ZZ__________________________} as string,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CONVERSION_TYPE as string,",
				"          {ITEM$AGILE_ACCESS_RESTRICTION} as string,",
				"          {ITEM$AGILE_ITEM__PART__CATEGOR} as string,",
				"          {ITEM$ASSET_NAME} as string,",
				"          {ITEM$ASSET_NOMENCLATURE} as string,",
				"          {ITEM$ASSET_VARIANT} as string,",
				"          {ITEM$BIN_QTY} as string,",
				"          {ITEM$BUILD_IN_SOLUMINA_DATE} as string,",
				"          {ITEM$COMSEC} as integer,",
				"          {ITEM$CUI} as string,",
				"          {ITEM$COUNTRY_OF_ORIGIN} as string,",
				"          {ITEM$ESD_HANDLING} as string,",
				"          {ITEM$EXCLUDE_FROM_LEAD_TIME_UP} as string,",
				"          {ITEM$EXTERNAL_SYSTEMS} as string,",
				"          {ITEM$INVOICE_UOM} as string,",
				"          {ITEM$ITEM_NET_WEIGHT__LBS} as string,",
				"          {ITEM$ITEM_SETUP_VERIFIED} as string,",
				"          {ITEM$LEAD_TIME_UPDATED} as string,",
				"          {ITEM$LEGACY_SYSTEM_ITEM_NUMBER} as string,",
				"          {ITEM$MATERIAL_EXPIRATION_VALUE} as string,",
				"          {ITEM$MOISTURE_SENSITIVITY_LEVE} as string,",
				"          {ITEM$NON_MRP_ACTIONABLE} as string,",
				"          {ITEM$REPLENISHMENT_TYPE} as string,",
				"          {ITEM$RESERVED_PN} as boolean,",
				"          {ITEM$ST_APPLIES} as string,",
				"          {ITEM$SPACE_FLIGHT_DELIVERABLE} as string,",
				"          {ITEM$STORAGE_CONDITION} as string,",
				"          {ITEM$TARGET_COST} as string,",
				"          {ITEM$USE_AS_REQUIRED} as string,",
				"          {ITEM$VMI_ITEM} as string,",
				"          {ITEM$WARRANTY_PERIOD} as string,",
				"          {ITEM$INVENTORY_ITEM_ID} as integer,",
				"          {ITEM$ORGANIZATION_ID} as short,",
				"          {ITEM$SV$PART_NUMBER} as string,",
				"          ITEM_DESCRIPTION as string,",
				"          ITEM_STATUS as string,",
				"          ITEM_STATUS_CODE as string,",
				"          ITEM_TYPE as string,",
				"          {MFG$SUPPLIER_NAME} as short,",
				"          {MFGPT$LAST_TIME_BUY} as string,",
				"          {MFGPT$MFR_PART_DESCRIPTION} as string,",
				"          {MFGPT$STATUS} as string,",
				"          {MFGPT$SUPPLEMENTAL_DATA} as string,",
				"          MANUFACTURER_DESCRIPTION as string,",
				"          MANUFACTURER_NAME as string,",
				"          MANUFACTURER_PART_DESCR as string,",
				"          MANUFACTURER_PART_NUMBER as string,",
				"          MASTER_ORGANIZATION_NAME as string,",
				"          ORGANIZATION as string,",
				"          ORGANIZATION_CODE as string,",
				"          ORGANIZATION_NAME as string,",
				"          UNIT_OF_MEASURE as string,",
				"          {Z$$_________________________} as string,",
				"          {Z$INVG0_ITEMS} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          {A$CARRYING_OUT_ORGANIZATION} as string,",
				"          {A$CARRYING_OUT_ORGANIZATION_ID} as short,",
				"          {A$CHART_OF_ACCOUNTS_NAME} as string,",
				"          {A$LEDGER_NAME} as string,",
				"          {A$OPERATING_UNIT_NAME} as string,",
				"          {A$ORGANIZATION_NAME} as string,",
				"          {A$PROJECT_ID} as short,",
				"          {A$PROJECT_LONG_NAME} as string,",
				"          {A$PROJECT_NAME} as string,",
				"          {A$PROJECT_NUMBER} as string,",
				"          {A$PROJECT_STATUS_CODE} as string,",
				"          {A$PROJECT_TYPE} as string,",
				"          {A$ZZ__________________________} as string,",
				"          AGREEMENT_CURRENCY_CODE as string,",
				"          AGREEMENT_EXISTS_FLAG as boolean,",
				"          AGREEMENT_NUMBER as string,",
				"          AGREEMENT_TYPE as string,",
				"          ALLOW_CROSS_CHARGE_FLAG as boolean,",
				"          APPROVAL_PROBABILITY_DESC as string,",
				"          APPROVAL_PROBABILITY_PERCENT as string,",
				"          BILL_EXCH_RATE_DATE_TYPE_PFC as string,",
				"          BILL_FUND_EXCH_RATE_DATE_TYPE as string,",
				"          BILL_JOB_GROUP_ID as short,",
				"          BILL_TO_FUNDING_EXCH_RATE_DATE as string,",
				"          BILL_TO_FUNDING_EXCH_RATE_TYPE as string,",
				"          BILL_TO_FUNDING_EXCHANGE_RATE as string,",
				"          BILLING_CYCLE as boolean,",
				"          BILLING_CYCLE_ID as short,",
				"          BILLING_CYCLE_TYPE as string,",
				"          BILLING_EXCH_RATE_DATE_TYPE_PC as string,",
				"          BILLING_EXCHANGE_RATE_DATE_PC as string,",
				"          BILLING_EXCHANGE_RATE_DATE_PFC as string,",
				"          BILLING_EXCHANGE_RATE_PC as string,",
				"          BILLING_EXCHANGE_RATE_PFC as string,",
				"          BILLING_EXCHANGE_RATE_TYPE_PC as string,",
				"          BILLING_EXCHANGE_RATE_TYPE_PFC as string,",
				"          CARRYING_OUT_ORGANIZATION as string,",
				"          CARRYING_OUT_ORGANIZATION_ID as short,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CLASS_CATEGORY as string,",
				"          COST_BASED_REV_BILL_CURR_TYPE as string,",
				"          COST_EXCHANGE_RATE_DATE_PC as string,",
				"          COST_EXCHANGE_RATE_DATE_PFC as string,",
				"          COST_EXCHANGE_RATE_TYPE_PC as string,",
				"          COST_EXCHANGE_RATE_TYPE_PFC as string,",
				"          CROSS_CHARGE_LABOR_FLAG as boolean,",
				"          CROSS_CHARGE_NONLABOR_FLAG as boolean,",
				"          CURR_QTR_BASELINED_DATE as string,",
				"          CURR_QTR_BURDENED_COST as double,",
				"          CURRENCY_CODE_PC as string,",
				"          CURRENCY_CODE_PFC as string,",
				"          CUSTOMER_CATEGORY as string,",
				"          CUSTOMER_CLASS as string,",
				"          CUSTOMER_EXISTS_FLAG as boolean,",
				"          CUSTOMER_NAME as string,",
				"          CUSTOMER_NUMBER as short,",
				"          CUSTOMER_TYPE as string,",
				"          DISTRIBUTION_RULE as string,",
				"          ENABLED_FLAG as boolean,",
				"          EXPECTED_APPROVAL_DATE as string,",
				"          FIRST_ACTIVITY_DATE as string,",
				"          FIRST_ACTIVITY_EVENT as string,",
				"          IND_RATE_SCHEME_NAME as string,",
				"          INVOICE_PROCESS_CURRENCY_TYPE as string,",
				"          KEY_MEMBER_COST_CENTER as integer,",
				"          KEY_MEMBER_NAME as string,",
				"          KEY_MEMBER_NUMBER as short,",
				"          KEY_MEMBER_ROLE as string,",
				"          LABOR_TRANSFER_PRICE_SCHEDULE as string,",
				"          LAST_UPDATE_DATE as string,",
				"          LEDGER_NAME as string,",
				"          MULTI_CURRENCY_BILLING_FLAG as boolean,",
				"          NONLBR_TRANFER_PRICE_SCHEDULE as string,",
				"          {ORG$AA2} as string,",
				"          {ORG$ADP_COMPANY_CODE} as string,",
				"          {ORG$BA_CORP_FA_MGR} as string,",
				"          {ORG$BA_FINANCIAL_ANALYST} as string,",
				"          {ORG$BA_MANAGER} as string,",
				"          {ORG$CC_BUDGETARY_MANAGER} as string,",
				"          {ORG$CC_DIRECTOR__COUPA} as string,",
				"          {ORG$CC_LOCATION} as string,",
				"          {ORG$CC_VP__COUPA} as string,",
				"          {ORG$COUPA_COA_PREFIX} as string,",
				"          {ORG$ENGINEERING_DIRECTOR} as string,",
				"          {ORG$FINANCE_VP__COUPA} as string,",
				"          {ORG$GL_COST_CENTER_VALUE} as short,",
				"          {ORG$GL_DIVISION_VALUE} as short,",
				"          {ORG$GL_LOCATION_VALUE} as short,",
				"          {ORG$LABOR_EXP_TYPE_FLAG} as string,",
				"          {ORG$ITIME_APPROVAL_ROUTING} as string,",
				"          {ORG$ITIME_SYSADMIN_ROLE} as string,",
				"          OPERATING_UNIT_NAME as string,",
				"          OPP_VALUE_CURRENCY_CODE as string,",
				"          OPPORTUNITY_VALUE as double,",
				"          OPPORTUNITY_VALUE_PC as double,",
				"          OPPORTUNITY_VALUE_PFC as double,",
				"          ORGANIZATION_NAME as string,",
				"          {PROJ$COST_ACCRUAL} as boolean,",
				"          {PROJ$FAR_REQUIRED} as boolean,",
				"          {PROJ$FP_CODE} as string,",
				"          {PROJ$GA} as boolean,",
				"          {PROJ$MPM_EXPORT} as boolean,",
				"          {PROJ$OPTIONS_VALUE} as integer,",
				"          {PROJ$ORDER_MANAGEMENT_PROJECT} as boolean,",
				"          {PROJ$REVENUE_COMPLETE} as boolean,",
				"          {PROJ$TRANSFER_FROM_PROJECT} as boolean,",
				"          {PROJ$TRANSFER_INTO_PROJECT} as boolean,",
				"          PREV_QTR_BASELINED_DATE as string,",
				"          PREV_QTR_BURDENED_COST as double,",
				"          PRIORITY as string,",
				"          PRODUCT_CODE as string,",
				"          PROGRAM_ID as short,",
				"          PROGRAM_UPDATE_DATE as string,",
				"          PROJECT_BASELINED_FLAG as boolean,",
				"          PROJECT_CITY as string,",
				"          PROJECT_CLOSED_DATE as string,",
				"          PROJECT_COMPLETION_DATE as string,",
				"          PROJECT_COUNTRY as string,",
				"          PROJECT_CREATION_DATE as string,",
				"          PROJECT_DESCRIPTION as string,",
				"          PROJECT_DIRECT_FLAG as boolean,",
				"          PROJECT_ID as short,",
				"          PROJECT_LAST_UPDATE_DATE as string,",
				"          PROJECT_LEVEL_FUNDING_FLAG as boolean,",
				"          PROJECT_LONG_NAME as string,",
				"          PROJECT_MANAGER_NAME as string,",
				"          PROJECT_MANAGER_NUMBER as short,",
				"          PROJECT_NAME as string,",
				"          PROJECT_NUMBER as string,",
				"          PROJECT_RELATIONSHIP as string,",
				"          PROJECT_START_DATE as string,",
				"          PROJECT_STATE_OR_REGION as string,",
				"          PROJECT_STATUS as string,",
				"          PROJECT_STATUS_CODE as string,",
				"          PROJECT_TEMPLATE_END_DATE as string,",
				"          PROJECT_TEMPLATE_FLAG as boolean,",
				"          PROJECT_TEMPLATE_START_DATE as string,",
				"          PROJECT_TYPE as string,",
				"          PROJECT_TYPE_CLASS as string,",
				"          PUBLIC_SECTOR_FLAG as boolean,",
				"          RETENTION_PERCENTAGE as boolean,",
				"          REVENUE_PROCESS_CURRENCY_CODE as string,",
				"          SCHEDULE_FINISH_DATE as string,",
				"          SCHEDULE_START_DATE as string,",
				"          SET_OF_BOOKS_NAME as string,",
				"          TEMPLATE_NUMBER as string,",
				"          UNBILLED_RECEIVABLES as double,",
				"          UNEARNED_REVENUE as double,",
				"          WORK_TYPE as string,",
				"          {Z$$_________________________} as string,",
				"          {Z$PAG0_ORGANIZATIONS} as string,",
				"          {Z$PAG0_PROJECTS} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source4",
				"source(output(",
				"          {A$CHART_OF_ACCOUNTS_NAME} as string,",
				"          {A$MASTER_ORGANIZATION_NAME} as string,",
				"          {A$ORGANIZATION_NAME} as string,",
				"          {A$ZZ__________________________} as string,",
				"          AVERAGE_COST as double,",
				"          BUILD_IN_WIP_FLAG as boolean,",
				"          BUYER_NAME as string,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CHILD_LOT_CONTROL_FLAG as boolean,",
				"          CONVERSIONS_TYPE as string,",
				"          CRITICAL_COMPONENT_FLAG as boolean,",
				"          CUM_MANUFACTURING_LEAD_TIME as double,",
				"          CUMULATIVE_TOTAL_LEAD_TIME as double,",
				"          DEFAULT_GRADE_CODE as string,",
				"          DEFAULT_LOT_STATUS_CODE as string,",
				"          DEVIATION_FACTOR_HIGH as boolean,",
				"          DEVIATION_FACTOR_LOW as boolean,",
				"          DUAL_UOM as string,",
				"          END_ASSEMBLY_PEGGING_FLAG as string,",
				"          EXPERIMENTAL_ITEM_FLAG as boolean,",
				"          EXPIRATION_ACTION_INTERVAL as string,",
				"          FIXED_DAYS_SUPPLY as short,",
				"          FIXED_LEAD_TIME as double,",
				"          FIXED_ORDER_QUANTITY as short,",
				"          FORECAST_CONTROL as string,",
				"          GRADE_CONTROL_FLAG as boolean,",
				"          HAZARD_CLASS as string,",
				"          HAZARD_CLASS_DESCRIPTION as string,",
				"          HAZARDOUS_MATERIAL_FLAG as boolean,",
				"          INV_CAT_EXISTS as boolean,",
				"          INVENTORY_ITEM_FLAG as boolean,",
				"          INVENTORY_ITEM_ID as integer,",
				"          INVENTORY_PLANNING_METHOD_CODE as string,",
				"          {ITEM$INVENTORY_ITEM_ID} as integer,",
				"          {ITEM$LEAD_TIME_UPDATED} as string,",
				"          {ITEM$NON_MRP_ACTIONABLE} as string,",
				"          {ITEM$ORGANIZATION_ID} as short,",
				"          {ITEM$REPLENISHMENT_TYPE} as string,",
				"          ITEM_CREATION_DATE as string,",
				"          ITEM_DESCRIPTION as string,",
				"          ITEM_EXPIRATION_ACTION_CODE as string,",
				"          ITEM_LONG_DESCRIPTION as string,",
				"          ITEM_NUMBER as string,",
				"          ITEM_REPLENISHMENT_TYPE as string,",
				"          ITEM_REVISION_CONTROL_FLAG as boolean,",
				"          ITEM_STATUS as string,",
				"          ITEM_STATUS_CODE as string,",
				"          ITEM_TYPE as string,",
				"          ITEMCATASSET_INVENTORY_CLASS as string,",
				"          ITEMCATASSET_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATASSET_PRODUCT_LINE as string,",
				"          ITEMCATASSET_PRODUCT_TYPE as string,",
				"          ITEMCATCONT_INVENTORY_CLASS as string,",
				"          ITEMCATCONT_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATCONT_PRODUCT_LINE as string,",
				"          ITEMCATCONT_PRODUCT_TYPE as string,",
				"          ITEMCATCOST_INVENTORY_CLASS as string,",
				"          ITEMCATCOST_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATCOST_PRODUCT_LINE as string,",
				"          ITEMCATCOST_PRODUCT_TYPE as string,",
				"          ITEMCATENG_INVENTORY_CLASS as string,",
				"          ITEMCATENG_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATENG_PRODUCT_LINE as string,",
				"          ITEMCATENG_PRODUCT_TYPE as string,",
				"          ITEMCATGDSN_INVENTORY_CLASS as string,",
				"          ITEMCATGDSN_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATGDSN_PRODUCT_LINE as string,",
				"          ITEMCATGDSN_PRODUCT_TYPE as string,",
				"          ITEMCATGDSNG_INVENTORY_CLASS as string,",
				"          ITEMCATGDSNG_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATGDSNG_PRODUCT_LINE as string,",
				"          ITEMCATGDSNG_PRODUCT_TYPE as string,",
				"          ITEMCATINV_INVENTORY_CLASS as string,",
				"          ITEMCATINV_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATINV_PRODUCT_LINE as string,",
				"          ITEMCATINV_PRODUCT_TYPE as string,",
				"          ITEMCATOE_INVENTORY_CLASS as string,",
				"          ITEMCATOE_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATOE_PRODUCT_LINE as string,",
				"          ITEMCATOE_PRODUCT_TYPE as string,",
				"          ITEMCATPAC_INVENTORY_CLASS as string,",
				"          ITEMCATPAC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPAC_PRODUCT_LINE as string,",
				"          ITEMCATPAC_PRODUCT_TYPE as string,",
				"          ITEMCATPCC_INVENTORY_CLASS as string,",
				"          ITEMCATPCC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPCC_PRODUCT_LINE as string,",
				"          ITEMCATPCC_PRODUCT_TYPE as string,",
				"          ITEMCATPGBC_INVENTORY_CLASS as string,",
				"          ITEMCATPGBC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPGBC_PRODUCT_LINE as string,",
				"          ITEMCATPGBC_PRODUCT_TYPE as string,",
				"          ITEMCATPGC_INVENTORY_CLASS as string,",
				"          ITEMCATPGC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPGC_PRODUCT_LINE as string,",
				"          ITEMCATPGC_PRODUCT_TYPE as string,",
				"          ITEMCATPLA_INVENTORY_CLASS as string,",
				"          ITEMCATPLA_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPLA_PRODUCT_LINE as string,",
				"          ITEMCATPLA_PRODUCT_TYPE as string,",
				"          ITEMCATPLAN_INVENTORY_CLASS as string,",
				"          ITEMCATPLAN_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPLAN_PRODUCT_LINE as string,",
				"          ITEMCATPLAN_PRODUCT_TYPE as string,",
				"          ITEMCATPPL_INVENTORY_CLASS as string,",
				"          ITEMCATPPL_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPPL_PRODUCT_LINE as string,",
				"          ITEMCATPPL_PRODUCT_TYPE as string,",
				"          ITEMCATPROR_INVENTORY_CLASS as string,",
				"          ITEMCATPROR_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPROR_PRODUCT_LINE as string,",
				"          ITEMCATPROR_PRODUCT_TYPE as string,",
				"          ITEMCATPSDC_INVENTORY_CLASS as string,",
				"          ITEMCATPSDC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPSDC_PRODUCT_LINE as string,",
				"          ITEMCATPSDC_PRODUCT_TYPE as string,",
				"          ITEMCATPSIC_INVENTORY_CLASS as string,",
				"          ITEMCATPSIC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPSIC_PRODUCT_LINE as string,",
				"          ITEMCATPSIC_PRODUCT_TYPE as string,",
				"          ITEMCATPTC_INVENTORY_CLASS as string,",
				"          ITEMCATPTC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPTC_PRODUCT_LINE as string,",
				"          ITEMCATPTC_PRODUCT_TYPE as string,",
				"          ITEMCATPUR_CATEGORY_DESC as string,",
				"          ITEMCATPUR_INVENTORY_CLASS as string,",
				"          ITEMCATPUR_ITEM_CATEGORY_KFF as double,",
				"          ITEMCATPUR_PRODUCT_LINE as string,",
				"          ITEMCATPUR_PRODUCT_TYPE as string,",
				"          ITEMCATSERV_INVENTORY_CLASS as string,",
				"          ITEMCATSERV_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATSERV_PRODUCT_LINE as string,",
				"          ITEMCATSERV_PRODUCT_TYPE as string,",
				"          {ITEMS$AGILE_ACCESS_RESTRICTION} as string,",
				"          {ITEMS$AGILE_ITEM__PART__CATEGO} as string,",
				"          {ITEMS$ASSET_NAME} as string,",
				"          {ITEMS$ASSET_NOMENCLATURE} as string,",
				"          {ITEMS$ASSET_VARIANT} as string,",
				"          {ITEMS$BIN_QTY} as short,",
				"          {ITEMS$BUILD_IN_SOLUMINA_DATE} as string,",
				"          {ITEMS$COMSEC} as boolean,",
				"          {ITEMS$CUI} as string,",
				"          {ITEMS$COUNTRY_OF_ORIGIN} as string,",
				"          {ITEMS$ESD_HANDLING} as string,",
				"          {ITEMS$EXCLUDE_FROM_LEAD_TIME_U} as string,",
				"          {ITEMS$EXTERNAL_SYSTEMS} as string,",
				"          {ITEMS$INVOICE_UOM} as string,",
				"          {ITEMS$ITEM_NET_WEIGHT__LBS} as string,",
				"          {ITEMS$ITEM_SETUP_VERIFIED} as timestamp,",
				"          {ITEMS$LEAD_TIME_UPDATED} as string,",
				"          {ITEMS$LEGACY_SYSTEM_ITEM_NUMBE} as string,",
				"          {ITEMS$MATERIAL_EXPIRATION_VALU} as string,",
				"          {ITEMS$MOISTURE_SENSITIVITY_LEV} as string,",
				"          {ITEMS$NON_MRP_ACTIONABLE} as string,",
				"          {ITEMS$REPLENISHMENT_TYPE} as string,",
				"          {ITEMS$RESERVED_PN} as boolean,",
				"          {ITEMS$ST_APPLIES} as boolean,",
				"          {ITEMS$SPACE_FLIGHT_DELIVERABLE} as boolean,",
				"          {ITEMS$STORAGE_CONDITION} as string,",
				"          {ITEMS$TARGET_COST} as double,",
				"          {ITEMS$USE_AS_REQUIRED} as string,",
				"          {ITEMS$VMI_ITEM} as string,",
				"          {ITEMS$WARRANTY_PERIOD} as string,",
				"          LAST_UPDATE_DATE as string,",
				"          LAST_UPDATED_BY as string,",
				"          LIST_PRICE_PER_UNIT as double,",
				"          LOCATION_CONTROL as string,",
				"          LOT_CONTROL_FLAG as boolean,",
				"          LOT_DIVISIBLE_FLAG as boolean,",
				"          LOT_STATUS_ENABLED_FLAG as boolean,",
				"          MASTER_ORGANIZATION_NAME as string,",
				"          MAX_MINMAX_QUANTITY as boolean,",
				"          MAXIMUM_ORDER_QUANTITY as boolean,",
				"          MIN_MINMAX_QUANTITY as boolean,",
				"          MINIMUM_ORDER_QUANTITY as short,",
				"          MRP_PLANNING_METHOD as string,",
				"          MTL_TRANSACTIONS_ENABLED_FLAG as boolean,",
				"          ORDER_COST as boolean,",
				"          ORGANIZATION as string,",
				"          ORGANIZATION_CODE as string,",
				"          ORGANIZATION_ID as short,",
				"          ORGANIZATION_NAME as string,",
				"          PLANNER_CODE as string,",
				"          PLANNING_EXCEPTION_SET as string,",
				"          PLANNING_MAKE_BUY_CODE as string,",
				"          POSTPROCESSING_LEAD_TIME as short,",
				"          PREPROCESSING_LEAD_TIME as short,",
				"          PRICING_SOURCE as string,",
				"          PROCESSING_LEAD_TIME as double,",
				"          PURCHASE_COMMOD as string,",
				"          RECEIPT_ROUTING as string,",
				"          RECEIVING_ROUTING_ID as short,",
				"          REPLENTISHMENT_SOURCE_TYPE as string,",
				"          RETEST_INTERVAL_DAYS as string,",
				"          SERIAL_NUMBER_CONTROL_CODE as string,",
				"          SERIAL_STARTING_NUMBER as string,",
				"          SERIAL_STARTING_PREFIX as string,",
				"          SHELF_LIFE_CODE as string,",
				"          SHELF_LIFE_DAYS as boolean,",
				"          SHRINKAGE_RATE as boolean,",
				"          SOLUMINA_SECURITY_GROUP as string,",
				"          SOURCE_ORGANIZATION_CODE as string,",
				"          STOCK_ENABLED_FLAG as boolean,",
				"          TRACK_IN_INSTALLED_BASE as boolean,",
				"          UNIT_OF_MEASURE as string,",
				"          VARIABLE_LEAD_TIME as double,",
				"          WIP_SUPPLY_TYPE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source5",
				"source(output(",
				"          {A$QA_CREATED_BY} as string,",
				"          {A$ZZ__________________________} as string,",
				"          COMMODITY_CODE as string,",
				"          COMMODITY_CODE_DESC as string,",
				"          QAPP_LIST as string,",
				"          QA_CREATED_BY as string,",
				"          QA_CREATION_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source6",
				"source(output(",
				"          {A$PART_NUMBER} as string,",
				"          {A$QA_CREATED_BY} as string,",
				"          {A$ZZ__________________________} as string,",
				"          PART_DESCRIPTION as string,",
				"          PART_NUMBER as string,",
				"          QAPP_LIST as string,",
				"          QA_APPROVER as string,",
				"          QA_CREATED_BY as string,",
				"          QA_CREATION_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source7",
				"source(output(",
				"          {A$QA_CREATED_BY} as string,",
				"          {A$ZZ__________________________} as string,",
				"          COMMODITY_CODE as string,",
				"          COMMODITY_CODE_DESC as string,",
				"          PROJECT_ID as integer,",
				"          PROJECT_NUMBER as string,",
				"          QAPP_LIST as string,",
				"          QA_APPROVER as string,",
				"          QA_CREATED_BY as string,",
				"          QA_CREATION_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source8",
				"source(output(",
				"          {Acceptance Count} as string,",
				"          {Account Type} as string,",
				"          {Acknowledge Flag} as string,",
				"          {Amount Billed} as string,",
				"          {Authorization Status} as string,",
				"          {Automated PO} as string,",
				"          {Award Class PO} as string,",
				"          {Award Group} as string,",
				"          {Business Segment} as string,",
				"          Buyer as string,",
				"          {Buyer Number} as string,",
				"          {Buyer Org} as string,",
				"          {Buyer Type} as string,",
				"          {Cancel Flag} as string,",
				"          {Closure Status} as string,",
				"          {Commodity Code} as string,",
				"          {Commodity Description} as string,",
				"          {Commodity Group} as string,",
				"          {Commodity Long Description} as string,",
				"          {Commodity Segment} as string,",
				"          {Cost Center} as string,",
				"          {Date Published} as string,",
				"          {Deliver To Person} as string,",
				"          {Delivery to OTD} as string,",
				"          {Delivery to Promise} as string,",
				"          {Destination Org} as string,",
				"          {Distribution #} as string,",
				"          {Expenditure Type} as string,",
				"          {Extended Price} as string,",
				"          {First Acknowledge Date} as string,",
				"          {Hydra Projects} as string,",
				"          {Item #} as string,",
				"          {Item Description} as string,",
				"          {Item Revision} as string,",
				"          {Item Target Cost} as string,",
				"          Justification as string,",
				"          {Last Receipt Date} as string,",
				"          {Last Receipt Fiscal Date} as string,",
				"          {Make/Buy} as string,",
				"          Manager as string,",
				"          {Matching Type} as string,",
				"          {Need By Date} as string,",
				"          {Original OTD} as string,",
				"          {OTD Date} as string,",
				"          {OTD Days} as string,",
				"          {OTD Field Status} as string,",
				"          {OTD Status} as string,",
				"          {Past Due Status code} as string,",
				"          {PO #} as string,",
				"          {PO Charge Account} as string,",
				"          {PO Creation Date} as date,",
				"          {PO Currency Code} as string,",
				"          {PO Line #} as string,",
				"          {PO Line Creation Date} as string,",
				"          {PO Line Creation Fiscal Date} as string,",
				"          {PO Line Open Flag} as string,",
				"          {PO Line Type} as string,",
				"          {PO Type} as string,",
				"          {PO Type 1} as string,",
				"          {Product Line} as string,",
				"          {Product Line Segment} as string,",
				"          {Product Segment} as string,",
				"          {Project Business Area} as string,",
				"          {Project Manager Name} as string,",
				"          {Project Name} as string,",
				"          {Project Number} as string,",
				"          {Promise Days} as string,",
				"          {Promise Fiscal Date} as string,",
				"          {Promise Status} as string,",
				"          {Promised Date} as string,",
				"          {Qty Billed} as string,",
				"          {Qty Cancelled} as string,",
				"          {Qty Delivered} as string,",
				"          {Qty Open} as string,",
				"          {Qty Ordered} as string,",
				"          {Receipt Routing} as string,",
				"          {Receipt Status} as string,",
				"          {Receipt Status (Promise Date)} as string,",
				"          {Receipt/Expected Receipt Date} as string,",
				"          {Release #} as string,",
				"          {Req #} as string,",
				"          {Req Create Date} as string,",
				"          {Req Line #} as string,",
				"          {Requisition Created By} as string,",
				"          {Right_PO Type} as string,",
				"          {SBR Group} as string,",
				"          {SBR Type} as string,",
				"          {Ship To Location} as string,",
				"          {Shipm$Mrp Pull In Message Root} as string,",
				"          {Shipment #} as string,",
				"          Supplier as string,",
				"          {Supplier Commodity Group} as string,",
				"          {Supplier Commodity Segment} as string,",
				"          {Supplier Group Name} as string,",
				"          {Supplier Item PO} as string,",
				"          {Supplier Item Req} as string,",
				"          {Supplier Segment} as string,",
				"          {Supplier Type} as string,",
				"          {Task Number} as string,",
				"          {TAT Days} as string,",
				"          Terms as string,",
				"          {Unit Price} as string,",
				"          UOM as string,",
				"          {Vend$Require Po Acknowledgemen} as string,",
				"          {Vendor Number} as string,",
				"          {Total Lead Time} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source9",
				"source1 select(mapColumn(",
				"          {Req Authorization Status} = AUTHORIZATION_STATUS,",
				"          {Req Closed Code} = CLOSED_CODE,",
				"          {Document Type} = DOCUMENT_TYPE,",
				"          {Item Description} = ITEM_DESCRIPTION,",
				"          {Item Number} = {ITEM$SV$PART_NUMBER},",
				"          {Item Revision} = ITEM_REVISION,",
				"          {Line Type} = LINE_TYPE,",
				"          {Need By Date} = NEED_BY_DATE,",
				"          {Project Name} = PROJECT_NAME,",
				"          {Project Number} = PROJECT_NUMBER,",
				"          {Preparer Name} = PREPARER_NAME,",
				"          {Req Deliver To Location} = REQ_DELIVER_TO_LOCATION,",
				"          {Req Destination Org Code} = REQ_DESTINATION_ORG_CODE,",
				"          {Req Line Cancel Flag} = REQ_LINE_CANCEL_FLAG,",
				"          {Req Line Qty Delivered} = REQ_LINE_QTY_DELIVERED,",
				"          {Req Line Quantity} = REQ_LINE_QUANTITY,",
				"          {Requisition Approval Co} = REQUISITION_APPROVAL_DATE,",
				"          {Requisition Creation Date} = REQUISITION_CREATION_DATE,",
				"          {Requisition Number} = REQUISITION_NUMBER,",
				"          {Suggested Buyer Name} = SUGGESTED_BUYER_NAME,",
				"          {Suggested Vendor Name} = SUGGESTED_VENDOR_NAME,",
				"          {Task Name} = TASK_NAME,",
				"          {Unit Of Measure} = UNIT_OF_MEASURE,",
				"          {Po Number} = PO_NUMBER,",
				"          {Line Number} = LINE_NUMBER,",
				"          TASK_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(isNull({Po Number}) && {Req Authorization Status} == \"APPROVED\") ~> filter1",
				"filter1, source2 join({Suggested Buyer Name} == {Buyer Name},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source3 select(mapColumn(",
				"          {Item Number} = {ITEM$SV$PART_NUMBER},",
				"          {Item Status} = ITEM_STATUS,",
				"          {Item Type} = ITEM_TYPE,",
				"          {Manufacturer Part Descr} = {MFGPT$MFR_PART_DESCRIPTION},",
				"          {Manufacturer Name} = MANUFACTURER_NAME,",
				"          {Manufacturer Part Number} = MANUFACTURER_PART_NUMBER,",
				"          Organization = ORGANIZATION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select21, select2 join(select21@{Item Number} == select2@{Item Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"source4 select(mapColumn(",
				"          {Project Name} = {A$PROJECT_NAME},",
				"          {Project Number} = {A$PROJECT_NUMBER}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select4, select3 join(select4@{Project Number} == select3@{Project Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"select10 derive(UID = {Item Number}+\"-\"+{Requisition Number}+\"-\"+{Line Number}+\"-\"+{Project Number},",
				"          {Date Published} = toString(currentTimestamp())) ~> derivedColumn1",
				"join2 select(mapColumn(",
				"          {Req Authorization Status},",
				"          {Req Closed Code},",
				"          {Document Type},",
				"          {Item Description},",
				"          {Item Number} = select21@{Item Number},",
				"          {Item Revision},",
				"          {Line Type},",
				"          {Need By Date},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Preparer Name},",
				"          {Req Deliver To Location},",
				"          {Req Destination Org Code},",
				"          {Req Line Cancel Flag},",
				"          {Req Line Qty Delivered},",
				"          {Req Line Quantity},",
				"          {Requisition Approval Co},",
				"          {Requisition Creation Date},",
				"          {Requisition Number},",
				"          {Suggested Buyer Name},",
				"          {Suggested Vendor Name},",
				"          {Task Name},",
				"          {Unit Of Measure},",
				"          {Po Number},",
				"          {Line Number},",
				"          TASK_NUMBER,",
				"          {Buyer Name},",
				"          Name,",
				"          {First Name},",
				"          {Last Name},",
				"          {First Name || ' ' || Last Name},",
				"          FLast,",
				"          {Inactive Flag},",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          State,",
				"          F12,",
				"          {Item Number} = select2@{Item Number},",
				"          {Item Status},",
				"          {Item Type},",
				"          {Manufacturer Part Descr},",
				"          {Manufacturer Name},",
				"          {Manufacturer Part Number},",
				"          Organization",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"derivedColumn1, filter2 join(select10@{Item Number} == select20@{Item Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"source5 select(mapColumn(",
				"          {Organization Code} = ORGANIZATION_CODE,",
				"          {Postprocessing Lead Time} = POSTPROCESSING_LEAD_TIME,",
				"          {Preprocessing Lead Time} = PREPROCESSING_LEAD_TIME,",
				"          {Processing Lead Time} = PROCESSING_LEAD_TIME,",
				"          {Purchase Commod} = PURCHASE_COMMOD,",
				"          {Unit of Measure} = UNIT_OF_MEASURE,",
				"          {Buyer Name} = BUYER_NAME,",
				"          {Item Number} = ITEM_NUMBER,",
				"          {Item Type} = ITEM_TYPE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select20 filter({Organization Code} == \"30\") ~> filter2",
				"select22 derive(Commodity_code = trim(Commodity_code),",
				"          Qapp_list = trim(Qapp_list)) ~> derivedColumn2",
				"select18 derive({Part Number} = trim({Part Number}),",
				"          {Qapp List} = trim({Qapp List})) ~> derivedColumn3",
				"derivedColumn2 select(mapColumn(",
				"          {Commodity Code} = Commodity_code,",
				"          {Cc Qapp List} = Qapp_list",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"derivedColumn3 select(mapColumn(",
				"          {Part Number},",
				"          {VPN Qapp List} = {Qapp List},",
				"          {Qa Creation Date} = QA_CREATION_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select19 derive(Commodity_code = trim({Commodity Code}),",
				"          Project_number = trim({Project Number}),",
				"          Qapp_list = trim({Qapp List})) ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          {Commodity Code} = Commodity_code,",
				"          {Project Number} = Project_number,",
				"          {Project Qapp List} = Qapp_list",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select7, join4 join({Commodity Code} == {Purchase Commod},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join3 select(mapColumn(",
				"          {Req Authorization Status},",
				"          {Req Closed Code},",
				"          {Document Type},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Type},",
				"          {Need By Date},",
				"          {Project Name} = select4@{Project Name},",
				"          {Project Number} = select4@{Project Number},",
				"          {Preparer Name},",
				"          {Req Deliver To Location},",
				"          {Req Destination Org Code},",
				"          {Req Line Cancel Flag},",
				"          {Req Line Qty Delivered},",
				"          {Req Line Quantity},",
				"          {Requisition Approval Co},",
				"          {Requisition Creation Date},",
				"          {Requisition Number},",
				"          {Suggested Buyer Name},",
				"          {Suggested Vendor Name},",
				"          {Task Name},",
				"          {Unit Of Measure},",
				"          {Po Number},",
				"          {Line Number},",
				"          TASK_NUMBER,",
				"          {Buyer Name},",
				"          Name,",
				"          {First Name},",
				"          {Last Name},",
				"          {First Name || ' ' || Last Name},",
				"          FLast,",
				"          {Inactive Flag},",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          State,",
				"          F12,",
				"          {Item Status},",
				"          {Item Type},",
				"          {Manufacturer Part Descr},",
				"          {Manufacturer Name},",
				"          {Manufacturer Part Number},",
				"          Organization,",
				"          {Project Name} = select3@{Project Name},",
				"          {Project Number} = select3@{Project Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"join5 select(mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select8 aggregate(groupBy({Part Number}),",
				"     {Max_Qa Creation Date} = max({Qa Creation Date})) ~> aggregate1",
				"aggregate1, select8 join(aggregate1@{Part Number} == select8@{Part Number}",
				"     && {Max_Qa Creation Date} == {Qa Creation Date},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6 select(mapColumn(",
				"          {Part Number} = aggregate1@{Part Number},",
				"          {VPN Qapp List}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12",
				"select12, select11 join({Part Number} == {Item Number},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"select9, join7 join(select9@{Project Number} == select11@{Project Number}",
				"     && select9@{Commodity Code} == {Purchase Commod},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"join8 derive(QAPP = iif(length({Project Qapp List})>1,{Project Qapp List},\r",
				"iif(isNull({Project Qapp List})&&length({VPN Qapp List})>1&&length({Cc Qapp List})>1,{VPN Qapp List},\r",
				"iif(isNull({Project Qapp List})&&length({VPN Qapp List})>1&&isNull({Cc Qapp List}),{VPN Qapp List},\r",
				"iif(isNull({Project Qapp List})&&isNull({VPN Qapp List})&&length({Cc Qapp List})>1,{Cc Qapp List},\" \"))))) ~> derivedColumn5",
				"derivedColumn5 select(mapColumn(",
				"          {Commodity Code} = select9@{Commodity Code},",
				"          {Project Number} = select9@{Project Number},",
				"          {Part Number},",
				"          {Commodity Code} = select11@{Commodity Code},",
				"          {Req Authorization Status},",
				"          {Req Closed Code},",
				"          {Document Type},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Type},",
				"          {Need By Date},",
				"          {Project Name},",
				"          {Project Number} = select11@{Project Number},",
				"          {Preparer Name},",
				"          {Req Deliver To Location},",
				"          {Req Destination Org Code},",
				"          {Req Line Cancel Flag},",
				"          {Req Line Qty Delivered},",
				"          {Req Line Quantity},",
				"          {Requisition Approval Co},",
				"          {Requisition Creation Date},",
				"          {Requisition Number},",
				"          {Suggested Buyer Name},",
				"          {Suggested Vendor Name},",
				"          {Task Name},",
				"          {Unit Of Measure},",
				"          {Po Number},",
				"          {Line Number},",
				"          TASK_NUMBER,",
				"          {Buyer Name},",
				"          Name,",
				"          {First Name},",
				"          {Last Name},",
				"          {First Name || ' ' || Last Name},",
				"          FLast,",
				"          {Inactive Flag},",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          State,",
				"          F12,",
				"          {Item Status},",
				"          {Manufacturer Part Descr},",
				"          {Manufacturer Name},",
				"          {Manufacturer Part Number},",
				"          Organization,",
				"          UID,",
				"          {Date Published},",
				"          {Organization Code},",
				"          {Purchase Commod},",
				"          QAPP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"source9 select(mapColumn(",
				"          {Acceptance Count},",
				"          {Account Type},",
				"          {Acknowledge Flag},",
				"          {Amount Billed},",
				"          {Authorization Status},",
				"          {Automated PO},",
				"          {Award Class PO},",
				"          {Award Group},",
				"          {Business Segment},",
				"          Buyer,",
				"          {Buyer Number},",
				"          {Buyer Org},",
				"          {Buyer Type},",
				"          {Cancel Flag},",
				"          {Closure Status},",
				"          {Commodity Code},",
				"          {Commodity Description},",
				"          {Commodity Group},",
				"          {Commodity Long Description},",
				"          {Commodity Segment},",
				"          {Cost Center},",
				"          {Date Published},",
				"          {Deliver To Person},",
				"          {Delivery to OTD},",
				"          {Delivery to Promise},",
				"          {Destination Org},",
				"          {Distribution #},",
				"          {Expenditure Type},",
				"          {Extended Price},",
				"          {First Acknowledge Date},",
				"          {Hydra Projects},",
				"          {Item #},",
				"          {Item Description},",
				"          {Item Revision},",
				"          {Item Target Cost},",
				"          Justification,",
				"          {Last Receipt Date},",
				"          {Last Receipt Fiscal Date},",
				"          {Make/Buy},",
				"          Manager,",
				"          {Matching Type},",
				"          {Need By Date},",
				"          {Original OTD},",
				"          {OTD Date},",
				"          {OTD Days},",
				"          {OTD Field Status},",
				"          {OTD Status},",
				"          {Past Due Status code},",
				"          {PO #},",
				"          {PO Charge Account},",
				"          {PO Creation Date},",
				"          {PO Currency Code},",
				"          {PO Line #},",
				"          {PO Line Creation Date},",
				"          {PO Line Creation Fiscal Date},",
				"          {PO Line Open Flag},",
				"          {PO Line Type},",
				"          {PO Type},",
				"          {PO Type 1},",
				"          {Product Line},",
				"          {Product Line Segment},",
				"          {Product Segment},",
				"          {Project Business Area},",
				"          {Project Manager Name},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Promise Days},",
				"          {Promise Fiscal Date},",
				"          {Promise Status},",
				"          {Promised Date},",
				"          {Qty Billed},",
				"          {Qty Cancelled},",
				"          {Qty Delivered},",
				"          {Qty Open},",
				"          {Qty Ordered},",
				"          {Receipt Routing},",
				"          {Receipt Status},",
				"          {Receipt Status (Promise Date)},",
				"          {Receipt/Expected Receipt Date},",
				"          {Release #},",
				"          {Req #},",
				"          {Req Create Date},",
				"          {Req Line #},",
				"          {Requisition Created By},",
				"          {Right_PO Type},",
				"          {SBR Group},",
				"          {SBR Type},",
				"          {Ship To Location},",
				"          {Shipm$Mrp Pull In Message Root},",
				"          {Shipment #},",
				"          Supplier,",
				"          {Supplier Commodity Group},",
				"          {Supplier Commodity Segment},",
				"          {Supplier Group Name},",
				"          {Supplier Item PO},",
				"          {Supplier Item Req},",
				"          {Supplier Segment},",
				"          {Supplier Type},",
				"          {Task Number},",
				"          {TAT Days},",
				"          Terms,",
				"          {Unit Price},",
				"          UOM,",
				"          {Vend$Require Po Acknowledgemen},",
				"          {Vendor Number},",
				"          {Total Lead Time}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"select14 filter({PO Creation Date} >=  toDate(addDays(currentTimestamp(), -730))) ~> filter3",
				"filter3 aggregate(groupBy({Item #}),",
				"     {Last PO} = max({PO #})) ~> aggregate2",
				"aggregate2, filter3 join(aggregate2@{Item #} == select14@{Item #}",
				"     && {Last PO} == {PO #},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join9",
				"join9 select(mapColumn(",
				"          {Last Buyer} = Buyer,",
				"          {Last PO Creation Date} = {PO Creation Date},",
				"          {Latest PO Supplier} = Supplier,",
				"          {Last PO Unit Price} = {Unit Price},",
				"          {Item #} = aggregate2@{Item #}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"select15 derive({Last PO 30} = \"NA\") ~> derivedColumn6",
				"derivedColumn6, select13 join({Item #} == {Item Number},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join10",
				"join10 derive({Last PO Unit Price} = iif({Item Number}==\"Consignment Build\",\"0\",\r",
				"iif({Line Type}==\"Expense\",\"0\",\r",
				"{Last PO Unit Price}))) ~> derivedColumn7",
				"select6, derivedColumn7 join(select6@{Item Number} == select13@{Item Number}",
				"     && select6@{Organization Code} == select13@{Organization Code},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join11",
				"join11 filter({Req Closed Code}== \"OPEN\" && {Document Type} != \"INTERNAL\") ~> filter4",
				"filter4 derive({Order By Date} = addDays(toDate({Need By Date}),toInteger(-{Processing Lead Time} +{Postprocessing Lead Time})) ) ~> derivedColumn8",
				"source6 select(mapColumn(",
				"          COMMODITY_CODE,",
				"          COMMODITY_CODE_DESC,",
				"          QAPP_LIST,",
				"          QA_CREATED_BY,",
				"          QA_CREATION_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select17",
				"source7 select(mapColumn(",
				"          {A$PART_NUMBER},",
				"          {A$QA_CREATED_BY},",
				"          {A$ZZ__________________________},",
				"          PART_DESCRIPTION,",
				"          {Part Number} = PART_NUMBER,",
				"          {Qapp List} = QAPP_LIST,",
				"          QA_APPROVER,",
				"          QA_CREATED_BY,",
				"          QA_CREATION_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select18",
				"source8 select(mapColumn(",
				"          {Commodity Code} = COMMODITY_CODE,",
				"          COMMODITY_CODE_DESC,",
				"          PROJECT_ID,",
				"          {Project Number} = PROJECT_NUMBER,",
				"          {Qapp List} = QAPP_LIST,",
				"          QA_APPROVER,",
				"          QA_CREATED_BY,",
				"          QA_CREATION_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select19",
				"select6 select(mapColumn(",
				"          {Organization Code},",
				"          {Purchase Commod},",
				"          {Item Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select20",
				"join1 select(mapColumn(",
				"          {Req Authorization Status},",
				"          {Req Closed Code},",
				"          {Document Type},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Type},",
				"          {Need By Date},",
				"          {Project Name},",
				"          {Project Number},",
				"          {Preparer Name},",
				"          {Req Deliver To Location},",
				"          {Req Destination Org Code},",
				"          {Req Line Cancel Flag},",
				"          {Req Line Qty Delivered},",
				"          {Req Line Quantity},",
				"          {Requisition Approval Co},",
				"          {Requisition Creation Date},",
				"          {Requisition Number},",
				"          {Suggested Buyer Name},",
				"          {Suggested Vendor Name},",
				"          {Task Name},",
				"          {Unit Of Measure},",
				"          {Po Number},",
				"          {Line Number},",
				"          TASK_NUMBER,",
				"          {Buyer Name},",
				"          Name,",
				"          {First Name},",
				"          {Last Name},",
				"          {First Name || ' ' || Last Name},",
				"          FLast,",
				"          {Inactive Flag},",
				"          {Buyer Type},",
				"          {Buyer Org},",
				"          Manager,",
				"          State,",
				"          F12",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select21",
				"select17 select(mapColumn(",
				"          each(match(true()),",
				"               initCap($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select22",
				"derivedColumn8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ProcurementQueuewitMPNyxdb"
			]
		}
	}
}