{
	"name": "Supplier_OTD_Performance_Df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "OnTimeDeliveryData"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "POG0Vendors"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "Poalldistributions"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "EBSPRODR"
				},
				{
					"dataset": {
						"referenceName": "ds_Excel_input",
						"type": "DatasetReference"
					},
					"name": "buyercleanup"
				},
				{
					"dataset": {
						"referenceName": "ds_Excel_input",
						"type": "DatasetReference"
					},
					"name": "fyqualityscores"
				},
				{
					"dataset": {
						"referenceName": "ds_Excel_input",
						"type": "DatasetReference"
					},
					"name": "VendorData"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "PAG0ProjectParametersVsat"
				},
				{
					"name": "source9"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv_output",
						"type": "DatasetReference"
					},
					"name": "SupplierOTDDeliveryPerformance"
				},
				{
					"dataset": {
						"referenceName": "ds_AzSql",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select3"
				},
				{
					"name": "join3"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "sort1"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "filter2"
				},
				{
					"name": "join4"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select5"
				},
				{
					"name": "aggregate5"
				},
				{
					"name": "aggregate6"
				},
				{
					"name": "filter3"
				},
				{
					"name": "aggregate7"
				},
				{
					"name": "join5"
				},
				{
					"name": "aggregate8"
				},
				{
					"name": "join6"
				},
				{
					"name": "filter4"
				},
				{
					"name": "select6"
				},
				{
					"name": "join7"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "select9"
				},
				{
					"name": "filter5"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "select10"
				},
				{
					"name": "aggregate9"
				},
				{
					"name": "select11"
				},
				{
					"name": "join8"
				},
				{
					"name": "join9"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "join10"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "derivedColumn9"
				},
				{
					"name": "split1"
				},
				{
					"name": "aggregate11"
				},
				{
					"name": "join13"
				},
				{
					"name": "join14"
				},
				{
					"name": "join15"
				},
				{
					"name": "select19"
				},
				{
					"name": "derivedColumn14"
				},
				{
					"name": "select20"
				},
				{
					"name": "derivedColumn15"
				},
				{
					"name": "aggregate13"
				},
				{
					"name": "join16"
				},
				{
					"name": "select22"
				},
				{
					"name": "derivedColumn16"
				},
				{
					"name": "aggregate14"
				},
				{
					"name": "Removingdummycolumn"
				},
				{
					"name": "toremovedummycolumn1"
				},
				{
					"name": "derivedColumn17"
				},
				{
					"name": "select26"
				},
				{
					"name": "derivedColumn18"
				},
				{
					"name": "derivedColumn19"
				},
				{
					"name": "select27"
				},
				{
					"name": "select28"
				},
				{
					"name": "select29"
				},
				{
					"name": "toremovedummycolumn2"
				},
				{
					"name": "toremovedummycolumn4"
				},
				{
					"name": "toremovedummycolumn3"
				},
				{
					"name": "select31"
				},
				{
					"name": "select35"
				},
				{
					"name": "select36"
				},
				{
					"name": "select37"
				},
				{
					"name": "select39"
				},
				{
					"name": "select40"
				},
				{
					"name": "select41"
				},
				{
					"name": "select42"
				},
				{
					"name": "aggregate15"
				},
				{
					"name": "join17"
				},
				{
					"name": "select43"
				},
				{
					"name": "derivedColumn20"
				},
				{
					"name": "derivedColumn21"
				},
				{
					"name": "derivedColumn22"
				},
				{
					"name": "join18"
				},
				{
					"name": "aggregate16"
				},
				{
					"name": "select44"
				},
				{
					"name": "select45"
				},
				{
					"name": "sort5"
				},
				{
					"name": "sort6"
				},
				{
					"name": "sort7"
				},
				{
					"name": "derivedColumn23"
				},
				{
					"name": "derivedColumn24"
				},
				{
					"name": "derivedColumn25"
				},
				{
					"name": "window4"
				},
				{
					"name": "derivedColumn26"
				},
				{
					"name": "window5"
				},
				{
					"name": "derivedColumn27"
				},
				{
					"name": "window6"
				},
				{
					"name": "derivedColumn28"
				},
				{
					"name": "select46"
				},
				{
					"name": "select47"
				},
				{
					"name": "select48"
				},
				{
					"name": "select49"
				},
				{
					"name": "select51"
				},
				{
					"name": "select53"
				},
				{
					"name": "derivedColumn29"
				},
				{
					"name": "derivedColumn30"
				},
				{
					"name": "select54"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OnTimeDeliveryData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> POG0Vendors",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Poalldistributions",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EBSPRODR",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> buyercleanup",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> fyqualityscores",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> VendorData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PAG0ProjectParametersVsat",
				"source(output(",
				"          {A$CHART_OF_ACCOUNTS_NAME} as string,",
				"          {A$MASTER_ORGANIZATION_NAME} as string,",
				"          {A$ORGANIZATION_NAME} as string,",
				"          {A$ZZ__________________________} as string,",
				"          AVERAGE_COST as double,",
				"          BUILD_IN_WIP_FLAG as boolean,",
				"          BUYER_NAME as string,",
				"          CHART_OF_ACCOUNTS_NAME as string,",
				"          CHILD_LOT_CONTROL_FLAG as boolean,",
				"          CONVERSIONS_TYPE as string,",
				"          CRITICAL_COMPONENT_FLAG as boolean,",
				"          CUM_MANUFACTURING_LEAD_TIME as double,",
				"          CUMULATIVE_TOTAL_LEAD_TIME as double,",
				"          DEFAULT_GRADE_CODE as string,",
				"          DEFAULT_LOT_STATUS_CODE as string,",
				"          DEVIATION_FACTOR_HIGH as boolean,",
				"          DEVIATION_FACTOR_LOW as boolean,",
				"          DUAL_UOM as string,",
				"          END_ASSEMBLY_PEGGING_FLAG as string,",
				"          EXPERIMENTAL_ITEM_FLAG as boolean,",
				"          EXPIRATION_ACTION_INTERVAL as string,",
				"          FIXED_DAYS_SUPPLY as short,",
				"          FIXED_LEAD_TIME as double,",
				"          FIXED_ORDER_QUANTITY as short,",
				"          FORECAST_CONTROL as string,",
				"          GRADE_CONTROL_FLAG as boolean,",
				"          HAZARD_CLASS as string,",
				"          HAZARD_CLASS_DESCRIPTION as string,",
				"          HAZARDOUS_MATERIAL_FLAG as boolean,",
				"          INV_CAT_EXISTS as boolean,",
				"          INVENTORY_ITEM_FLAG as boolean,",
				"          INVENTORY_ITEM_ID as integer,",
				"          INVENTORY_PLANNING_METHOD_CODE as string,",
				"          {ITEM$INVENTORY_ITEM_ID} as integer,",
				"          {ITEM$LEAD_TIME_UPDATED} as string,",
				"          {ITEM$NON_MRP_ACTIONABLE} as string,",
				"          {ITEM$ORGANIZATION_ID} as short,",
				"          {ITEM$REPLENISHMENT_TYPE} as string,",
				"          ITEM_CREATION_DATE as string,",
				"          ITEM_DESCRIPTION as string,",
				"          ITEM_EXPIRATION_ACTION_CODE as string,",
				"          ITEM_LONG_DESCRIPTION as string,",
				"          ITEM_NUMBER as string,",
				"          ITEM_REPLENISHMENT_TYPE as string,",
				"          ITEM_REVISION_CONTROL_FLAG as boolean,",
				"          ITEM_STATUS as string,",
				"          ITEM_STATUS_CODE as string,",
				"          ITEM_TYPE as string,",
				"          ITEMCATASSET_INVENTORY_CLASS as string,",
				"          ITEMCATASSET_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATASSET_PRODUCT_LINE as string,",
				"          ITEMCATASSET_PRODUCT_TYPE as string,",
				"          ITEMCATCONT_INVENTORY_CLASS as string,",
				"          ITEMCATCONT_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATCONT_PRODUCT_LINE as string,",
				"          ITEMCATCONT_PRODUCT_TYPE as string,",
				"          ITEMCATCOST_INVENTORY_CLASS as string,",
				"          ITEMCATCOST_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATCOST_PRODUCT_LINE as string,",
				"          ITEMCATCOST_PRODUCT_TYPE as string,",
				"          ITEMCATENG_INVENTORY_CLASS as string,",
				"          ITEMCATENG_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATENG_PRODUCT_LINE as string,",
				"          ITEMCATENG_PRODUCT_TYPE as string,",
				"          ITEMCATGDSN_INVENTORY_CLASS as string,",
				"          ITEMCATGDSN_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATGDSN_PRODUCT_LINE as string,",
				"          ITEMCATGDSN_PRODUCT_TYPE as string,",
				"          ITEMCATGDSNG_INVENTORY_CLASS as string,",
				"          ITEMCATGDSNG_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATGDSNG_PRODUCT_LINE as string,",
				"          ITEMCATGDSNG_PRODUCT_TYPE as string,",
				"          ITEMCATINV_INVENTORY_CLASS as string,",
				"          ITEMCATINV_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATINV_PRODUCT_LINE as string,",
				"          ITEMCATINV_PRODUCT_TYPE as string,",
				"          ITEMCATOE_INVENTORY_CLASS as string,",
				"          ITEMCATOE_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATOE_PRODUCT_LINE as string,",
				"          ITEMCATOE_PRODUCT_TYPE as string,",
				"          ITEMCATPAC_INVENTORY_CLASS as string,",
				"          ITEMCATPAC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPAC_PRODUCT_LINE as string,",
				"          ITEMCATPAC_PRODUCT_TYPE as string,",
				"          ITEMCATPCC_INVENTORY_CLASS as string,",
				"          ITEMCATPCC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPCC_PRODUCT_LINE as string,",
				"          ITEMCATPCC_PRODUCT_TYPE as string,",
				"          ITEMCATPGBC_INVENTORY_CLASS as string,",
				"          ITEMCATPGBC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPGBC_PRODUCT_LINE as string,",
				"          ITEMCATPGBC_PRODUCT_TYPE as string,",
				"          ITEMCATPGC_INVENTORY_CLASS as string,",
				"          ITEMCATPGC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPGC_PRODUCT_LINE as string,",
				"          ITEMCATPGC_PRODUCT_TYPE as string,",
				"          ITEMCATPLA_INVENTORY_CLASS as string,",
				"          ITEMCATPLA_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPLA_PRODUCT_LINE as string,",
				"          ITEMCATPLA_PRODUCT_TYPE as string,",
				"          ITEMCATPLAN_INVENTORY_CLASS as string,",
				"          ITEMCATPLAN_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPLAN_PRODUCT_LINE as string,",
				"          ITEMCATPLAN_PRODUCT_TYPE as string,",
				"          ITEMCATPPL_INVENTORY_CLASS as string,",
				"          ITEMCATPPL_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPPL_PRODUCT_LINE as string,",
				"          ITEMCATPPL_PRODUCT_TYPE as string,",
				"          ITEMCATPROR_INVENTORY_CLASS as string,",
				"          ITEMCATPROR_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPROR_PRODUCT_LINE as string,",
				"          ITEMCATPROR_PRODUCT_TYPE as string,",
				"          ITEMCATPSDC_INVENTORY_CLASS as string,",
				"          ITEMCATPSDC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPSDC_PRODUCT_LINE as string,",
				"          ITEMCATPSDC_PRODUCT_TYPE as string,",
				"          ITEMCATPSIC_INVENTORY_CLASS as string,",
				"          ITEMCATPSIC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPSIC_PRODUCT_LINE as string,",
				"          ITEMCATPSIC_PRODUCT_TYPE as string,",
				"          ITEMCATPTC_INVENTORY_CLASS as string,",
				"          ITEMCATPTC_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATPTC_PRODUCT_LINE as string,",
				"          ITEMCATPTC_PRODUCT_TYPE as string,",
				"          ITEMCATPUR_CATEGORY_DESC as string,",
				"          ITEMCATPUR_INVENTORY_CLASS as string,",
				"          ITEMCATPUR_ITEM_CATEGORY_KFF as double,",
				"          ITEMCATPUR_PRODUCT_LINE as string,",
				"          ITEMCATPUR_PRODUCT_TYPE as string,",
				"          ITEMCATSERV_INVENTORY_CLASS as string,",
				"          ITEMCATSERV_ITEM_CATEGORY_KFF as string,",
				"          ITEMCATSERV_PRODUCT_LINE as string,",
				"          ITEMCATSERV_PRODUCT_TYPE as string,",
				"          {ITEMS$AGILE_ACCESS_RESTRICTION} as string,",
				"          {ITEMS$AGILE_ITEM__PART__CATEGO} as string,",
				"          {ITEMS$ASSET_NAME} as string,",
				"          {ITEMS$ASSET_NOMENCLATURE} as string,",
				"          {ITEMS$ASSET_VARIANT} as string,",
				"          {ITEMS$BIN_QTY} as short,",
				"          {ITEMS$BUILD_IN_SOLUMINA_DATE} as string,",
				"          {ITEMS$COMSEC} as boolean,",
				"          {ITEMS$CUI} as string,",
				"          {ITEMS$COUNTRY_OF_ORIGIN} as string,",
				"          {ITEMS$ESD_HANDLING} as string,",
				"          {ITEMS$EXCLUDE_FROM_LEAD_TIME_U} as string,",
				"          {ITEMS$EXTERNAL_SYSTEMS} as string,",
				"          {ITEMS$INVOICE_UOM} as string,",
				"          {ITEMS$ITEM_NET_WEIGHT__LBS} as string,",
				"          {ITEMS$ITEM_SETUP_VERIFIED} as timestamp,",
				"          {ITEMS$LEAD_TIME_UPDATED} as string,",
				"          {ITEMS$LEGACY_SYSTEM_ITEM_NUMBE} as string,",
				"          {ITEMS$MATERIAL_EXPIRATION_VALU} as string,",
				"          {ITEMS$MOISTURE_SENSITIVITY_LEV} as string,",
				"          {ITEMS$NON_MRP_ACTIONABLE} as string,",
				"          {ITEMS$REPLENISHMENT_TYPE} as string,",
				"          {ITEMS$RESERVED_PN} as boolean,",
				"          {ITEMS$ST_APPLIES} as boolean,",
				"          {ITEMS$SPACE_FLIGHT_DELIVERABLE} as boolean,",
				"          {ITEMS$STORAGE_CONDITION} as string,",
				"          {ITEMS$TARGET_COST} as double,",
				"          {ITEMS$USE_AS_REQUIRED} as string,",
				"          {ITEMS$VMI_ITEM} as string,",
				"          {ITEMS$WARRANTY_PERIOD} as string,",
				"          LAST_UPDATE_DATE as string,",
				"          LAST_UPDATED_BY as string,",
				"          LIST_PRICE_PER_UNIT as double,",
				"          LOCATION_CONTROL as string,",
				"          LOT_CONTROL_FLAG as boolean,",
				"          LOT_DIVISIBLE_FLAG as boolean,",
				"          LOT_STATUS_ENABLED_FLAG as boolean,",
				"          MASTER_ORGANIZATION_NAME as string,",
				"          MAX_MINMAX_QUANTITY as boolean,",
				"          MAXIMUM_ORDER_QUANTITY as boolean,",
				"          MIN_MINMAX_QUANTITY as boolean,",
				"          MINIMUM_ORDER_QUANTITY as short,",
				"          MRP_PLANNING_METHOD as string,",
				"          MTL_TRANSACTIONS_ENABLED_FLAG as boolean,",
				"          ORDER_COST as boolean,",
				"          ORGANIZATION as string,",
				"          ORGANIZATION_CODE as string,",
				"          ORGANIZATION_ID as short,",
				"          ORGANIZATION_NAME as string,",
				"          PLANNER_CODE as string,",
				"          PLANNING_EXCEPTION_SET as string,",
				"          PLANNING_MAKE_BUY_CODE as string,",
				"          POSTPROCESSING_LEAD_TIME as short,",
				"          PREPROCESSING_LEAD_TIME as short,",
				"          PRICING_SOURCE as string,",
				"          PROCESSING_LEAD_TIME as double,",
				"          PURCHASE_COMMOD as integer,",
				"          RECEIPT_ROUTING as string,",
				"          RECEIVING_ROUTING_ID as short,",
				"          REPLENTISHMENT_SOURCE_TYPE as string,",
				"          RETEST_INTERVAL_DAYS as string,",
				"          SERIAL_NUMBER_CONTROL_CODE as string,",
				"          SERIAL_STARTING_NUMBER as string,",
				"          SERIAL_STARTING_PREFIX as string,",
				"          SHELF_LIFE_CODE as string,",
				"          SHELF_LIFE_DAYS as boolean,",
				"          SHRINKAGE_RATE as boolean,",
				"          SOLUMINA_SECURITY_GROUP as string,",
				"          SOURCE_ORGANIZATION_CODE as string,",
				"          STOCK_ENABLED_FLAG as boolean,",
				"          TRACK_IN_INSTALLED_BASE as boolean,",
				"          UNIT_OF_MEASURE as string,",
				"          VARIABLE_LEAD_TIME as double,",
				"          WIP_SUPPLY_TYPE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source9",
				"POG0Vendors aggregate(groupBy(VENDOR_NUMBER,",
				"          VENDOR_NAME),",
				"     xxx = count(TERMS)) ~> aggregate1",
				"OnTimeDeliveryData, Removingdummycolumn join({Supplier Number} == VENDOR_NUMBER,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Last Receipt Date},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Release Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name} = VENDOR_NUMBER,",
				"          VENDOR_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Poalldistributions select(mapColumn(",
				"          {Cancel Flag},",
				"          {Po Number},",
				"          {Po Line Number},",
				"          {Shipment Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 filter({Cancel Flag}=='N') ~> filter1",
				"filter1 aggregate(groupBy({Cancel Flag},",
				"          {Po Number},",
				"          {Po Line Number},",
				"          {Shipment Number}),",
				"     each(match(name!='Cancel Flag'&&name!='Po Line Number'&&name!='Po Number'&&name!='Shipment Number'), $$ = first($$))) ~> aggregate2",
				"select1, aggregate2 join({PO Shipment Number} == {Shipment Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive({Transaction Date} = {Last Receipt Date}) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Last Receipt Date},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Release Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Po Number},",
				"          {Po Line Number},",
				"          {Shipment Number},",
				"          {Transaction Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3, aggregate3 join(select3@{PO Shipment Number} == aggregate3@{PO Shipment Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"select3 aggregate(groupBy({PO #},",
				"          {PO Line},",
				"          {Release Number},",
				"          {PO Shipment Number}),",
				"     {Last Receipt Date} = max({Transaction Date})) ~> aggregate3",
				"select27 sort(desc({Report Date}, true)) ~> sort1",
				"sort1 aggregate(groupBy({Po Line Number},",
				"          {PO Shipment Number}),",
				"     each(match(name!='Po Line Number'&&name!='PO Shipment Number'), $$ = first($$))) ~> aggregate4",
				"select28 filter({Line Type}==\"Goods\") ~> filter2",
				"filter2, EBSPRODR join({PO Shipment Number} == SHIPMENT_NUM,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"EBSPRODR select(mapColumn(",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          ATTRIBUTE9",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select29 derive({Fiscal Date} = {Transaction Date},",
				"          {OTD Date} = toDate(iif(isNull({OTD Date}),{Promised Date},{OTD Date})),",
				"          {OTD Days} = (minus(toDate({Transaction Date}),toDate({OTD Date})) /7 )*5,",
				"          Limit = iif(ATTRIBUTE9!='Y',7,4)) ~> derivedColumn3",
				"derivedColumn17 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site} = ATTRIBUTE9,",
				"          {OTD Days},",
				"          Limit,",
				"          {Delivery to OTD},",
				"          {Last Receipt Date},",
				"          {Release Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"derivedColumn17 aggregate(groupBy({PO Shipment Number},",
				"          {Delivery to OTD},",
				"          {PO #},",
				"          {PO Line},",
				"          {Release Number}),",
				"     yyy = count(Amount)) ~> aggregate5",
				"toremovedummycolumn1 aggregate(groupBy({PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}),",
				"     sss = max({PO Line})) ~> aggregate6",
				"toremovedummycolumn1 filter({Delivery to OTD}=='Late') ~> filter3",
				"filter3 aggregate(groupBy({PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}),",
				"     aaa = max({PO Line})) ~> aggregate7",
				"toremovedummycolumn2, toremovedummycolumn4 join(toremovedummycolumn2@{PO Shipment Number} == toremovedummycolumn4@{PO Shipment Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"select31 aggregate(groupBy({PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}),",
				"     bbb = max({Release Number})) ~> aggregate8",
				"select5, toremovedummycolumn3 join(select5@{PO Shipment Number} == toremovedummycolumn3@{PO Shipment Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"buyercleanup filter(!(isNull({Buyer Name}))) ~> filter4",
				"filter4 select(mapColumn(",
				"          {Buyer Name(Long)} = {Buyer Name},",
				"          {Buyer Name} = Name,",
				"          {Buying Team} = {Buyer Type},",
				"          {Buyer Org}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select26, select6 join(select26@{Buyer Name} == select6@{Buyer Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"select35 derive(Year = toInteger(year(toDate({Fiscal Date},'%Y'))),",
				"          Month = toInteger(month(toDate({Fiscal Date},'%m'))),",
				"          Day = toInteger({Fiscal Date},'%d')) ~> derivedColumn4",
				"fyqualityscores derive(Period = toDate(iif(regexMatch(Period,\"Q4\"),substring(Period,0,4)+\"-10-01\",\r",
				"iif(regexMatch(Period,\"Q3\"),substring(Period,0,4)+\"-07-01\",\r",
				"iif(regexMatch(Period,\"Q2\"),substring(Period,0,4)+\"04-01\",substring(Period,0,4)+\"-01-01\"))))) ~> derivedColumn5",
				"derivedColumn5 select(mapColumn(",
				"          Supplier,",
				"          Period,",
				"          {QA Score}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"VendorData filter(!(isNull({Supplier Number}))) ~> filter5",
				"filter5 derive({SBR Group} = iif({SBR Type}=='Non-Core',{SBR Type},'Core'),",
				"          {Supplier Name} = upper({Supplier Name})) ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          {Vendor Number} = {Supplier Number},",
				"          {Vendor Name} = {Supplier Name},",
				"          {Supplier Segment} = {Assigned Segment},",
				"          {SBR Type},",
				"          {Supplier Group Name},",
				"          SRM,",
				"          {SBR Group}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"select10 aggregate(groupBy({Vendor Number}),",
				"     {Vendor Name} = last({Vendor Name}),",
				"          {Supplier Segment} = last({Supplier Segment}),",
				"          {Supplier Group Name} = last({Supplier Group Name}),",
				"          {SBR Type} = last({SBR Type}),",
				"          {SBR Group} = last({SBR Group}),",
				"          SRM = last(SRM)) ~> aggregate9",
				"PAG0ProjectParametersVsat select(mapColumn(",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area} = PROD_LINE_CLASS_CODE_BUS_UNIT,",
				"          {Product Line} = PROD_LINE_CLASS_CODE_DESC,",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment} = SEGMENT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select36, select9 join({Vendor Name} == Supplier,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"select37, aggregate9 join({Supplier Number} == {Vendor Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join9",
				"select39 derive({Supplier Segment} = iif(isNull({Supplier Segment}),'Other',{Supplier Segment}),",
				"          {SBR Group} = iif(isNull({SBR Type}),'Non-Core',{SBR Type}),",
				"          {SBR Type} = iif(isNull({SBR Group}),'Non-Core',{SBR Group}),",
				"          {Supplier Group Name} = iif(isNull({Supplier Group Name}),{Vendor Name},{Supplier Group Name})) ~> derivedColumn7",
				"select40, select11 join({Project Number} == PROJECT_NUMBER,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join10",
				"select41 derive({Project Number} = iif(isNull({Project Number}),'Non-Project',{Project Number}),",
				"          {Project Business Area} = iif(isNull({Project Number}),'CORP',{Project Business Area})) ~> derivedColumn8",
				"select42 derive({PO ID} = {PO #}+{PO Line}+iif(isNull({Release Number}),\"\",{Release Number})+{PO Shipment Number}) ~> derivedColumn9",
				"derivedColumn9 split({Delivery to OTD}==\"On Time\",",
				"     disjoint: false) ~> split1@(split1, split2)",
				"split1@split1 aggregate(groupBy({Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment}),",
				"     {# On Time} = countDistinct({PO ID}),",
				"          {QA Score} = avg({QA Score})) ~> aggregate11",
				"derivedColumn9, select46 join(select42@{Supplier Group Name} == select46@{Supplier Group Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join13",
				"select49, select48 join(select49@{Supplier Group Name} == select48@{Supplier Group Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join14",
				"select53, select47 join(select53@{Supplier Group Name} == select47@{Supplier Group Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join15",
				"join15 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area},",
				"          {Product Line},",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment},",
				"          {Release Number},",
				"          {PO ID},",
				"          {Quality Score A},",
				"          {On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {BSC Rank},",
				"          {Left_Right_Supplier Group Name} = {Right_Supplier Group Name},",
				"          {Left_Right_Fiscal Period} = {Right_Fiscal Period},",
				"          {Left_Right_Supplier Segment} = {Right_Supplier Segment},",
				"          {OTD Rank},",
				"          {Right_On Time Score A},",
				"          {Right_Supplier Group Name} = select47@{Supplier Group Name},",
				"          {Right_Fiscal Period} = select47@{Fiscal Period},",
				"          {Supplier Segment} = select47@{Supplier Segment},",
				"          {Quality Rank},",
				"          {Supplier Name},",
				"          {Last Receipt Date},",
				"          Justification",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select19",
				"select51 derive({Letter Status} = iif({Supplier Segment}=='Strategic','No Letter',\r",
				"iif({Supplier Segment}=='Critical','No Letter',\r",
				"iif({Supplier Segment}=='Other','No Letter','Send Letter')))) ~> derivedColumn14",
				"derivedColumn29 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          {Receipt Fiscal Date},",
				"          Period,",
				"          {QA Score},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          {Project Business Area},",
				"          {Release Number},",
				"          {PO ID},",
				"          {Quality Score A},",
				"          {On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {BSC Rank},",
				"          {OTD Rank},",
				"          {Right_On Time Score A},",
				"          {Quality Rank},",
				"          {Last Receipt Date},",
				"          {Supplier Name},",
				"          {Supplier Segment},",
				"          {AS9100 Letter},",
				"          Justification",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select20",
				"select20 derive({Date Published} = currentDate(),",
				"          {Workflow Generating Date} = \"Supplier_OTD_Performance_yxmd\",",
				"          {Past Due Status Code} = 0) ~> derivedColumn15",
				"select54 aggregate(groupBy(ITEM_NUMBER,",
				"          {Commodity Description},",
				"          {Commodity Code},",
				"          ORGANIZATION_CODE),",
				"     each(match(name!=\"ITEM_NUMBER\"&&name!=\"Commodity Description\"&&name!=\"Commodity Code\"&&name!=\"ORGANIZATION_CODE\"), $$ = first($$))) ~> aggregate13",
				"derivedColumn30, aggregate13 join({Destination Org Code} == ORGANIZATION_CODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join16",
				"join16 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Receipt Number},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          {Receipt Fiscal Date},",
				"          {QA Score},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          {Project Business Area},",
				"          {Release Number},",
				"          {Quality Score A},",
				"          {On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {OTD Rank},",
				"          {Quality Rank},",
				"          {Last Receipt Date},",
				"          {Supplier Name},",
				"          {Supplier Segment},",
				"          {AS9100 Letter},",
				"          Justification,",
				"          {Date Published},",
				"          {Workflow Generating Date},",
				"          {Past Due Status Code},",
				"          ITEM_NUMBER,",
				"          {Commodity Description},",
				"          {Commodity Code},",
				"          ORGANIZATION_CODE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select22",
				"select22 derive({Workflow Publishing Date} = \"Supplier OTD Performance.yxmd\") ~> derivedColumn16",
				"derivedColumn16 aggregate(groupBy({OTD Rank}),",
				"     each(match(name!=\"OTD Rank\"), $$ = first($$))) ~> aggregate14",
				"aggregate1 select(mapColumn(",
				"          VENDOR_NUMBER,",
				"          VENDOR_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Removingdummycolumn",
				"aggregate5 select(mapColumn(",
				"          {PO #},",
				"          {PO Line},",
				"          {Release Number},",
				"          {PO Shipment Number},",
				"          {Delivery to OTD}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> toremovedummycolumn1",
				"derivedColumn3 derive({Delivery to OTD} = iif({OTD Days}>Limit,'Late','On Time')) ~> derivedColumn17",
				"join6 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number} = select5@{PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD} = toremovedummycolumn3@{Delivery to OTD},",
				"          {Release Number} = {select5@Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select26",
				"derivedColumn4 derive(FD = iif(Month==5 &&Day>28,28,Day),",
				"          FY = iif(Month<4,Year,Year+1),",
				"          FM = iif(Month<4,Month+9,Month-3)) ~> derivedColumn18",
				"derivedColumn18 derive({Fiscal Year} = toString(FY)+'-'+toString(FM)+'-'+toString(FD),",
				"          {Receipt Fiscal Date} = toDate({Fiscal Period},\"%Y-%m-%d\"),",
				"          {Fiscal Period} = toDate(iif(toInteger(FM)>9,toString(FY)+\"-\"+\"10-01\",\r",
				"iif(toInteger(FM)>6,toString(FY)+\"-\"+\"07-01\",\r",
				"iif(toInteger(FM)>3,toString(FY)+\"-\"+\"04-01\",\r",
				"toString(FY)+\"-\"+\"01-01\"))))) ~> derivedColumn19",
				"join3 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Last Receipt Date} = {select3@Last Receipt Date},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO #} = {select3@PO #},",
				"          {PO Line} = {select3@PO Line},",
				"          {PO Shipment Number} = {select3@PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Release Number} = {select3@Release Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Po Number},",
				"          {Po Line Number},",
				"          {Shipment Number},",
				"          {Transaction Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select27",
				"aggregate4 select(mapColumn(",
				"          {Po Line Number},",
				"          {PO Shipment Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Last Receipt Date},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Release Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Po Number},",
				"          {Shipment Number},",
				"          {Transaction Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select28",
				"join4 select(mapColumn(",
				"          {Po Line Number},",
				"          {PO Shipment Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Last Receipt Date},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Release Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Po Number},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          ATTRIBUTE9",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select29",
				"aggregate6 select(mapColumn(",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> toremovedummycolumn2",
				"aggregate7 select(mapColumn(",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> toremovedummycolumn4",
				"aggregate8 select(mapColumn(",
				"          {PO #},",
				"          {PO Line},",
				"          {PO Shipment Number},",
				"          {Release Number},",
				"          {Delivery to OTD}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> toremovedummycolumn3",
				"join5 select(mapColumn(",
				"          {PO #} = toremovedummycolumn2@{PO #},",
				"          {PO Line} = toremovedummycolumn2@{PO Line},",
				"          {PO Shipment Number} = toremovedummycolumn2@{PO Shipment Number},",
				"          {Release Number} = toremovedummycolumn2@{Release Number},",
				"          {Delivery to OTD} = toremovedummycolumn4@{Delivery to OTD}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select31",
				"join7 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name} = {select26@Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buyer Name},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          {Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select35",
				"derivedColumn19 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          {Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select36",
				"join8 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Release Number},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select37",
				"join9 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Vendor Name} = {select37@Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Release Number},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Vendor Name},",
				"          {Supplier Segment},",
				"          {Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          {Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select39",
				"derivedColumn7 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Supplier Name} = {Vendor Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Supplier Segment},",
				"          {Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          {Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select40",
				"join10 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Supplier Name},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Supplier Segment},",
				"          {Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          {Release Number},",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area},",
				"          {Product Line},",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment},",
				"          {Release Number},",
				"          {Last Receipt Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select41",
				"derivedColumn8 select(mapColumn(",
				"          {Po Line Number},",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          Justification,",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Receipt Date} = {Transaction Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Supplier Segment},",
				"          {Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area},",
				"          {Product Line},",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment},",
				"          {Release Number},",
				"          {Last Receipt Date},",
				"          {Supplier Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select42",
				"split1@split2 aggregate(groupBy({Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment}),",
				"     {#Late} = countDistinct({PO ID}),",
				"          {QA Score} = avg({QA Score})) ~> aggregate15",
				"aggregate11, aggregate15 join(aggregate11@{Supplier Group Name} == aggregate15@{Supplier Group Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join17",
				"join17 select(mapColumn(",
				"          {Supplier Group Name} = aggregate11@{Supplier Group Name},",
				"          {Fiscal Period} = aggregate11@{Fiscal Period},",
				"          {Supplier Segment} = aggregate11@{Supplier Segment},",
				"          {# On Time},",
				"          {QA Score} = aggregate11@{QA Score},",
				"          {Right_Supplier Segment} = aggregate15@{Supplier Segment},",
				"          {#Late},",
				"          {Right_QA Score} = aggregate15@{QA Score}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select43",
				"select43 derive({# On Time} = iif(isNull({# On Time}),0,toInteger({# On Time})),",
				"          {#Late} = iif(isNull({#Late}),0,toInteger({#Late})),",
				"          {On Time Score} = toDouble({# On Time}/({# On Time}+{#Late}))) ~> derivedColumn20",
				"derivedColumn20 derive({Q Score} = toDouble(iif(isNull({QA Score}),{On Time Score},{QA Score}))) ~> derivedColumn21",
				"derivedColumn21 derive({BSC Score} = toDouble(({On Time Score}+{Q Score})/2)) ~> derivedColumn22",
				"derivedColumn22, aggregate16 join(select43@{Supplier Segment} == aggregate16@{Supplier Segment},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join18",
				"derivedColumn22 aggregate(groupBy({Fiscal Period},",
				"          {Supplier Segment}),",
				"     {#of Suppliers} = countDistinct({Supplier Group Name})) ~> aggregate16",
				"join18 select(mapColumn(",
				"          {Supplier Group Name},",
				"          {Fiscal Period} = select43@{Fiscal Period},",
				"          {Supplier Segment} = select43@{Supplier Segment},",
				"          {# On Time},",
				"          {QA Score},",
				"          {Left_Right_Supplier Segment} = {Right_Supplier Segment},",
				"          {#Late},",
				"          {Right_QA Score},",
				"          {On Time Score},",
				"          {Q Score},",
				"          {BSC Score},",
				"          {Right_Fiscal Period} = aggregate16@{Fiscal Period},",
				"          {Right_Supplier Segment} = aggregate16@{Supplier Segment},",
				"          {#of Suppliers}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select44",
				"select44 select(mapColumn(",
				"          {Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment},",
				"          {# On Time},",
				"          {Quality Score} = {QA Score},",
				"          {#Late},",
				"          {On Time Score},",
				"          {BSC Score},",
				"          {#of Suppliers}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select45",
				"select45 sort(asc({Fiscal Period}, true),",
				"     asc({Supplier Segment}, true),",
				"     desc({BSC Score}, true)) ~> sort5",
				"select45 sort(asc({Supplier Segment}, true),",
				"     asc({Fiscal Period}, true),",
				"     desc({Quality Score}, true)) ~> sort6",
				"select45 sort(asc({Fiscal Period}, true),",
				"     desc({On Time Score}, true),",
				"     asc({Supplier Segment}, true)) ~> sort7",
				"sort7 derive({Record ID} = iif(isNull({Quality Score}),0,1),",
				"          {OTD Rank} = 0) ~> derivedColumn23",
				"sort6 derive({Record ID} = iif(isNull({Quality Score}),0,1),",
				"          {Quality Rank} = 0) ~> derivedColumn24",
				"sort5 derive({Record ID} = iif(isNull({Quality Score}),0,1),",
				"          {BSC Rank} = 0) ~> derivedColumn25",
				"derivedColumn23 window(over({Supplier Segment}),",
				"     asc({Supplier Segment}, true),",
				"     A1 = lag({On Time Score},1,0.0),",
				"          A2 = lag({OTD Rank},1,0.0)) ~> window4",
				"window4 derive({OTD Rank} = iif({Record ID}==1,1,\r",
				"iif(A1=={On Time Score},A2,A2+1))) ~> derivedColumn26",
				"derivedColumn24 window(over({Supplier Segment}),",
				"     asc({Supplier Segment}, true),",
				"     B1 = lag({Quality Score},1,0.0),",
				"          B2 = lag({Quality Rank},1,0.0)) ~> window5",
				"window5 derive({Quality Rank} = iif({Record ID}==1,1,\r",
				"iif(B1=={Quality Score},B2,B2+1))) ~> derivedColumn27",
				"derivedColumn25 window(over({Supplier Segment}),",
				"     asc({Supplier Segment}, true),",
				"     D1 = lag({BSC Score},1,0.0),",
				"          D2 = lag({BSC Rank},1,0.0)) ~> window6",
				"window6 derive({BSC Rank} = iif({Record ID}==1,1,iif(D1=={BSC Score},D2,D2+1))) ~> derivedColumn28",
				"derivedColumn28 select(mapColumn(",
				"          {Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment},",
				"          {Quality Score A} = {Quality Score},",
				"          {On Time Score A} = {On Time Score},",
				"          {BSC Score A} = {BSC Score},",
				"          {#of Suppliers},",
				"          {BSC Rank}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select46",
				"derivedColumn27 select(mapColumn(",
				"          {Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment},",
				"          {Quality Rank}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select47",
				"derivedColumn26 select(mapColumn(",
				"          {Supplier Group Name},",
				"          {Fiscal Period},",
				"          {Supplier Segment},",
				"          {OTD Rank},",
				"          {On Time Score A} = {On Time Score}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select48",
				"join13 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period} = select42@{Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          {Transaction Date} = {Receipt Date},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Supplier Segment} = select42@{Supplier Segment},",
				"          {Supplier Group Name} = select42@{Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area},",
				"          {Product Line},",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment},",
				"          {Release Number},",
				"          {PO ID},",
				"          {Supplier Group Name} = select46@{Supplier Group Name},",
				"          {Fiscal Period} = select46@{Fiscal Period},",
				"          {Supplier Segment} = select46@{Supplier Segment},",
				"          {Quality Score A},",
				"          {On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {BSC Rank},",
				"          {Last Receipt Date},",
				"          {Receipt Date},",
				"          {Supplier Name},",
				"          Justification",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select49",
				"select19 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          {Receipt Fiscal Date},",
				"          Period,",
				"          {QA Score},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          {Project Business Area},",
				"          {Release Number},",
				"          {PO ID},",
				"          {Quality Score A},",
				"          {On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {BSC Rank},",
				"          {OTD Rank},",
				"          {Right_On Time Score A},",
				"          {Quality Rank},",
				"          {Last Receipt Date},",
				"          {Supplier Name},",
				"          {Supplier Segment},",
				"          Justification",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select51",
				"join14 select(mapColumn(",
				"          Amount,",
				"          {Buyer Name},",
				"          Days,",
				"          {Destination Org Code},",
				"          {Fiscal Date},",
				"          {Fiscal Period} = select49@{Fiscal Period},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line Type},",
				"          {On Time Delivery Date},",
				"          {OTD Date},",
				"          {PO Shipment Number},",
				"          {PO Type},",
				"          {PO Unit Price},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Qty Received},",
				"          {Receipt Number},",
				"          {Receipt Status},",
				"          {Report Date},",
				"          {Shipment Line Status Code},",
				"          {Supplier Number},",
				"          {Past Due Status code},",
				"          {Correct Vendor Name},",
				"          VENDOR_NAME,",
				"          {Cancel Flag},",
				"          {Shipment Number},",
				"          PO_NUMBER,",
				"          LINE_NUM,",
				"          SHIPMENT_NUM,",
				"          RELEASE_NUM,",
				"          {Viasat Receiving Site},",
				"          {OTD Days},",
				"          {PO #},",
				"          {PO Line},",
				"          {Delivery to OTD},",
				"          {Buyer Name(Long)},",
				"          {Buying Team},",
				"          {Buyer Org},",
				"          Year,",
				"          Month,",
				"          Day,",
				"          FD,",
				"          FY,",
				"          FM,",
				"          {Fiscal Year},",
				"          {Receipt Fiscal Date},",
				"          Supplier,",
				"          Period,",
				"          {QA Score},",
				"          {Vendor Number},",
				"          {Supplier Segment} = select49@{Supplier Segment},",
				"          {Supplier Group Name} = select49@{Supplier Group Name},",
				"          {SBR Type},",
				"          {SBR Group},",
				"          SRM,",
				"          ORGANIZATION_CODE,",
				"          {Project Business Area},",
				"          {Product Line},",
				"          PROJECT_MANAGER,",
				"          PROJECT_NUMBER,",
				"          {Business Segment},",
				"          {Release Number},",
				"          {PO ID},",
				"          {Quality Score A},",
				"          {On Time Score A} = select49@{On Time Score A},",
				"          {BSC Score A},",
				"          {#of Suppliers},",
				"          {BSC Rank},",
				"          {Last Receipt Date},",
				"          {Supplier Name},",
				"          {Right_Supplier Group Name} = select48@{Supplier Group Name},",
				"          {Right_Fiscal Period} = select48@{Fiscal Period},",
				"          {Right_Supplier Segment} = select48@{Supplier Segment},",
				"          {OTD Rank},",
				"          {Right_On Time Score A} = select48@{On Time Score A},",
				"          Justification",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select53",
				"derivedColumn14 derive({AS9100 Letter} = iif({Letter Status}=='No Letter','No Letter',\r",
				"iif({On Time Score A}<=.85,'Send Letter','No Letter'))) ~> derivedColumn29",
				"derivedColumn15 derive({Date Published} = {Date Published}-toDate(hours(8)),",
				"          Justification = iif(isNull(Justification),'',Justification),",
				"          {Past Due Status Code} = iif(isNull({Past Due Status Code}),'',toString({Past Due Status Code}))) ~> derivedColumn30",
				"source9 select(mapColumn(",
				"          ITEM_NUMBER,",
				"          {Commodity Description} = ITEMCATPUR_CATEGORY_DESC,",
				"          {Commodity Code} = PURCHASE_COMMOD,",
				"          ORGANIZATION_CODE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select54",
				"derivedColumn30 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Supplier OTD Performance1.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SupplierOTDDeliveryPerformance",
				"aggregate14 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink2"
			]
		}
	}
}