{
	"name": "Duluth_Combined_Metrics_pt2_copy1",
	"properties": {
		"folder": {
			"name": "Duluth_Combined_Metrics_pt2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "DuluthCombinedDetails"
				},
				{
					"name": "csdg0repairnotes"
				},
				{
					"name": "POG0RECEIPTSVSAT"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "sort1"
				},
				{
					"name": "select1"
				},
				{
					"name": "Formulae1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "leftOuterjoin1"
				},
				{
					"name": "Formulae2"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "LeftOuterjoin2"
				},
				{
					"name": "Formulae3"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "filter2"
				},
				{
					"name": "filter3"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "filter4"
				},
				{
					"name": "union1"
				},
				{
					"name": "GenerateRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Actual Shipment Date} as string,",
				"          {AMS Item Name} as string,",
				"          {Approval Date} as string,",
				"          {Arrived at Vendor Date} as string,",
				"          {Avg Addl Funds} as string,",
				"          {Business Area} as string,",
				"          {Buyer Name} as string,",
				"          {Closure Status} as string,",
				"          {Concat_NMR Details} as string,",
				"          {Contract Number} as string,",
				"          {Contract Warranty End Date} as string,",
				"          {Customer Name} as string,",
				"          {Customer Po Number} as string,",
				"          {DRO Po Number} as string,",
				"          {Failure Cause Code} as string,",
				"          {Failure Date} as string,",
				"          {Failure Site} as string,",
				"          {Item Description} as string,",
				"          {Item Number} as string,",
				"          {Item Revision} as string,",
				"          {Line Creation Date} as string,",
				"          {Line Number} as string,",
				"          {Line Quantity} as string,",
				"          {Line Status} as string,",
				"          {NMR Creation Date} as string,",
				"          {Nmr Customer} as string,",
				"          {NMR DATE CLOSED_DETCLOSED} as string,",
				"          {Nmr Det Action Taken} as string,",
				"          {Nmr Det Date Action Taken} as string,",
				"          {Nmr Det Date Closed} as string,",
				"          {Nmr Det Desc Of Def} as string,",
				"          {Nmr Det Dispo} as string,",
				"          {Nmr Det Line Creation Date} as string,",
				"          {Nmr Det Oper Name} as string,",
				"          {NMR Det Repair Action} as string,",
				"          {Nmr Det Sn} as string,",
				"          {Nmr Nmr Date Closed} as string,",
				"          {Nmr Nmr No} as string,",
				"          {NMR Originator} as string,",
				"          {Nmr Parent Nmr} as string,",
				"          {Nmr Parent Sn} as string,",
				"          {Nmr Pgm} as string,",
				"          {Nmr Pn} as string,",
				"          {Nmr Pn Desc} as string,",
				"          {Nmr Po Receipt Date} as string,",
				"          {NMR RMA Line No} as string,",
				"          {Nmr Sn} as string,",
				"          {Nmr Warranty} as string,",
				"          {Om Or Pc} as string,",
				"          {Order Date} as string,",
				"          {Order Type Name} as string,",
				"          {Organization Code} as string,",
				"          {Po Approved Date} as string,",
				"          {PO Closed Date} as string,",
				"          {Po Item Description} as string,",
				"          {Po Line Creation Date} as string,",
				"          {Po Line Number} as string,",
				"          {Po Line Type} as string,",
				"          {Po Revision Number} as string,",
				"          {PO Unit Price} as string,",
				"          {Po Warranty Status} as string,",
				"          Preparer as string,",
				"          {Price List} as string,",
				"          {Product Line} as string,",
				"          {Project Number} as string,",
				"          {Promised Date} as string,",
				"          {Quantity Shipped} as string,",
				"          {Receive Date} as string,",
				"          {Repair Item Serial Number} as string,",
				"          {Repair Line Id} as string,",
				"          {Repair Number} as string,",
				"          {Repair Order Closed Date} as string,",
				"          {Repair Order Creation Date} as string,",
				"          {Repair Order Project} as string,",
				"          {Repair Order Promised Date} as string,",
				"          {Repair Order Task} as string,",
				"          {Repair Owner Name} as string,",
				"          {Repair Quantity} as string,",
				"          {Repair Reason} as string,",
				"          {Repair Status} as string,",
				"          {Repair Type} as string,",
				"          {Repair Type Reference} as string,",
				"          {Repair$Actual Complete Date} as string,",
				"          {Repair$Actual Repair Price} as string,",
				"          {Repair$Actual Start Date} as string,",
				"          {Repair$Metric Completion Date} as string,",
				"          {Repair$Tat Adj} as string,",
				"          {Repair$Tat Adj Reason} as string,",
				"          {Repair$Vendor Name} as string,",
				"          {Repair$Vendor RMA} as string,",
				"          {Report Symptom} as string,",
				"          {Req Create Date} as string,",
				"          {REQ Number} as string,",
				"          {Requested Date} as string,",
				"          {Requisition Approval Date} as string,",
				"          {Requisition Created By} as string,",
				"          {Requisition Creation Date} as string,",
				"          {Requisition Line Number} as string,",
				"          {Requisition Number} as string,",
				"          {Right_Business Area} as string,",
				"          {Right_Promised Date} as string,",
				"          {Right_Repair Line Id} as string,",
				"          {Right_Task Number} as string,",
				"          {Rma Creation Date} as string,",
				"          {Rma Order Number} as string,",
				"          {RTV Hold End Date} as string,",
				"          {RTV Hold Start Date} as string,",
				"          {RTV PO Number} as string,",
				"          {RTV Supplier SN} as string,",
				"          {Salesforce Num} as string,",
				"          {Scheduled Ship Date} as string,",
				"          {Service Request Number} as string,",
				"          {Ship Date} as string,",
				"          {Ship From Location} as string,",
				"          {Ship To Address1} as string,",
				"          {Ship To City} as string,",
				"          {Ship To Country} as string,",
				"          {Ship To Customer Name} as string,",
				"          {Ship To Location} as string,",
				"          {Ship To State} as string,",
				"          {Shipped Quantity} as string,",
				"          {Sold To Customer Name} as string,",
				"          {Sr Group Name} as string,",
				"          {Sr Item Serial Number} as string,",
				"          {Sr Owner Name} as string,",
				"          {Sr Status} as string,",
				"          {Task Number} as string,",
				"          {Time In Hold Status} as string,",
				"          {Time In Open Status} as string,",
				"          {Time In Repair} as string,",
				"          {Times Returned} as string,",
				"          {Total Actual Amount} as string,",
				"          {Total Estimate Amount} as string,",
				"          {Unit Selling Price} as string,",
				"          {Vendor Name} as string,",
				"          {Vendor Pn} as string,",
				"          {Vendor RMA} as string,",
				"          {ViaSat NMR} as string,",
				"          {ViaSat Parent RMA} as string,",
				"          {ViaSat RMA} as string,",
				"          {Warehouse Code} as string,",
				"          {Warranty Status} as string,",
				"          {RMA Received Date} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'output',",
				"     fileName: 'Duluth_Combined_Metrics.csv.txt',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> DuluthCombinedDetails",
				"source(output(",
				"          REPAIR_NUMBER as string,",
				"          NOTE_ENTERED_DATE as string,",
				"          NOTES as string,",
				"          NOTE_SOURCE as string,",
				"          NOTE_STATUS as string,",
				"          NOTE_TYPE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     fileSystem: 'duluth-combined-metrics-pt2',",
				"     folderPath: 'input',",
				"     fileName: 'csdg0_repair_notes.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> csdg0repairnotes",
				"source(output(",
				"          LINE_TYPE as string,",
				"          PO_NUMBER as string,",
				"          SHIPPED_DATE as string,",
				"          LINE_NUM as double,",
				"          TRANSACTION_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     fileSystem: 'duluth-combined-metrics-pt2',",
				"     folderPath: 'input',",
				"     fileName: 'POG0_RECEIPTS_VSAT.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> POG0RECEIPTSVSAT",
				"select1 sort(desc(Date, true)) ~> sort1",
				"csdg0repairnotes select(mapColumn(",
				"          {Repair Number} = REPAIR_NUMBER,",
				"          Date = NOTE_ENTERED_DATE,",
				"          Notes = NOTES,",
				"          {Note Source} = NOTE_SOURCE,",
				"          {Note Status} = NOTE_STATUS,",
				"          {Note Type} = NOTE_TYPE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"sort1 derive({New Notes} = Date+\": \"+{Notes}) ~> Formulae1",
				"Formulae1 aggregate(groupBy({Repair Number}),",
				"     {New Notes} = dropRight(toString(reduce(collect({New Notes}),'',#item+','+#acc,#result)),1)) ~> aggregate1",
				"DuluthCombinedDetails, aggregate1 join(DuluthCombinedDetails@{Repair Number} == aggregate1@{Repair Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftOuterjoin1",
				"select2 derive({Task Number} = iif(!isNull({Task Number}),{Task Number},\r",
				"iif(!isNull({Right_Task Number}),{Right_Task Number},'')),",
				"          {Req Create Date} = iif(!isNull({Req Create Date}),{Req Create Date},\r",
				"iif(!isNull({Requisition Creation Date}),{Requisition Creation Date},'')),",
				"          {Requisition Number} = iif(isNull({Requisition Number}),{REQ Number},{Requisition Number}),",
				"          {Promised Date} = iif(isNull({Promised Date} ),{Right_Promised Date}, {Promised Date}),",
				"          {Repair Number} = iif(!isNull({Repair Number}),{Repair Number},{Right_Repair Number}),",
				"          {Vendor RMA} = iif(isNull({Vendor RMA}) ,{Repair$Vendor RMA},{Vendor RMA}),",
				"          {Customer Name} = iif(isNull({Customer Name}) ,{Nmr Customer},{Customer Name}),",
				"          {Item Number} = iif(isNull({Item Number}),{Nmr Pn},{Item Number}),",
				"          {Item Description} = iif(isNull({Item Description}),{Nmr Pn Desc},{Item Description}),",
				"          {Repair Item Serial Number} = iif(isNull({Repair Item Serial Number}),{Nmr Sn},{Repair Item Serial Number}),",
				"          {Rma Order Number} = iif(isNull({Rma Order Number}),{ViaSat RMA},{Rma Order Number})) ~> Formulae2",
				"leftOuterjoin1 select(mapColumn(",
				"          {Actual Shipment Date},",
				"          {AMS Item Name},",
				"          {Approval Date},",
				"          {Arrived at Vendor Date},",
				"          {Avg Addl Funds},",
				"          {Business Area},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Concat_NMR Details},",
				"          {Contract Number},",
				"          {Contract Warranty End Date},",
				"          {Customer Name},",
				"          {Customer Po Number},",
				"          {DRO Po Number},",
				"          {Failure Cause Code},",
				"          {Failure Date},",
				"          {Failure Site},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Item Revision},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Status},",
				"          {NMR Creation Date},",
				"          {Nmr Customer},",
				"          {NMR DATE CLOSED_DETCLOSED},",
				"          {Nmr Det Action Taken},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Dispo},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {NMR Det Repair Action},",
				"          {Nmr Det Sn},",
				"          {Nmr Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {NMR Originator},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {NMR RMA Line No},",
				"          {Nmr Sn},",
				"          {Nmr Warranty},",
				"          {Om Or Pc},",
				"          {Order Date},",
				"          {Order Type Name},",
				"          {Organization Code},",
				"          {Po Approved Date},",
				"          {PO Closed Date},",
				"          {Po Item Description},",
				"          {Po Line Creation Date},",
				"          {Po Line Number},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {PO Unit Price},",
				"          {Po Warranty Status},",
				"          Preparer,",
				"          {Price List},",
				"          {Product Line},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Receive Date},",
				"          {Repair Item Serial Number},",
				"          {Repair Line Id},",
				"          {Repair Number} = DuluthCombinedDetails@{Repair Number},",
				"          {Repair Order Closed Date},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Project},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Task},",
				"          {Repair Owner Name},",
				"          {Repair Quantity},",
				"          {Repair Reason},",
				"          {Repair Status},",
				"          {Repair Type},",
				"          {Repair Type Reference},",
				"          {Repair$Actual Complete Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Tat Adj},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Vendor Name},",
				"          {Repair$Vendor RMA},",
				"          {Report Symptom},",
				"          {Req Create Date},",
				"          {REQ Number},",
				"          {Requested Date},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Requisition Creation Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Right_Business Area},",
				"          {Right_Promised Date},",
				"          {Right_Repair Line Id},",
				"          {Right_Task Number},",
				"          {Rma Creation Date},",
				"          {Rma Order Number},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {RTV PO Number},",
				"          {RTV Supplier SN},",
				"          {Salesforce Num},",
				"          {Scheduled Ship Date},",
				"          {Service Request Number},",
				"          {Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Address1},",
				"          {Ship To City},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Ship To State},",
				"          {Shipped Quantity},",
				"          {Sold To Customer Name},",
				"          {Sr Group Name},",
				"          {Sr Item Serial Number},",
				"          {Sr Owner Name},",
				"          {Sr Status},",
				"          {Task Number},",
				"          {Time In Hold Status},",
				"          {Time In Open Status},",
				"          {Time In Repair},",
				"          {Times Returned},",
				"          {Total Actual Amount},",
				"          {Total Estimate Amount},",
				"          {Unit Selling Price},",
				"          {Vendor Name},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {ViaSat NMR},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Warehouse Code},",
				"          {Warranty Status},",
				"          {RMA Received Date},",
				"          {Right_Repair Number} = aggregate1@{Repair Number},",
				"          {New Notes}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"POG0RECEIPTSVSAT select(mapColumn(",
				"          {Line Num} = LINE_TYPE,",
				"          {Line Type} = PO_NUMBER,",
				"          {Po Number} = SHIPPED_DATE,",
				"          {Shipped Date} = LINE_NUM,",
				"          {Transaction Date} = TRANSACTION_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 filter({Line Type} == \"Expense\" || {Line Type} == \"Outside processing\") ~> filter1",
				"filter1 aggregate(groupBy({Po Number},",
				"          {Line Num}),",
				"     {Shipped from Vendor Date} = max({Shipped Date}),",
				"          {Received from Vendor Date} = max({Transaction Date})) ~> aggregate2",
				"Formulae2, aggregate2 join({RTV PO Number} == {Po Number},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftOuterjoin2",
				"LeftOuterjoin2 derive({Vendor Hold Time} = iif(isNull({RTV Hold End Date}),\r",
				"toDate(toString(currentDate(),'yyyy-MM-dd')) - toDate(toString({RTV Hold End Date},'yyyy-MM-dd')),\r",
				"toDate(toString({RTV Hold End Date} ,'yyyy-MM-dd')) - toDate(toString({RTV Hold Start Date},'yyyy-MM-dd'))),",
				"          {Repair Status} = iif(isNull({Repair Status}),\"Open\",{Repair Status}),",
				"          {Repair$Vendor Name} = iif(isNull({Vendor Name}),{Repair$Vendor Name},{Vendor Name}),",
				"          {Repair Order Task} = iif(isNull({Repair Order Task}),{Task Number},{Repair Order Task}),",
				"          {Repair Order Project} = iif(isNull({Repair Order Project}),{Project Number},{Repair Order Project}),",
				"          {Item Description} = iif(!isNull({Item Description}),{Item Description},''),",
				"          {DRO TAT SHIP DATE} = iif(isNull({Repair$Actual Complete Date}),{Repair Order Closed Date},{Repair$Actual Complete Date}),",
				"          {Receive Date} = iif(isNull({Receive Date}),{RMA Received Date},{Receive Date})) ~> Formulae3",
				"Formulae3 derive({Vendor Repair Time} = iif(isNull({Shipped from Vendor Date}),(toDate(toString({Arrived at Vendor Date},'yyyy-MM-dd')) - toDate(toString({RTV Hold End Date},'yyyy-MM-dd')))-{Vendor Hold Time},(toDate(toString({Shipped from Vendor Date} ,'yyyy-MM-dd')) - toDate(toString({Arrived at Vendor Date},'yyyy-MM-dd')))-{Vendor Hold Time}),",
				"          {Repair Status} = iif({Repair Status} == \"CLOSED\",\"Closed\",\r",
				"iif({Repair Status} == \"ENTERED\",\"Open\",\r",
				"iif({Repair Status} == \"BOOKED\",\"Open\",{Repair Status}))),",
				"          {DRO TAT SHIP DATE} = iif(isNull({DRO TAT SHIP DATE}),toString(currentDate()),{DRO TAT SHIP DATE})) ~> derivedColumn1",
				"derivedColumn1 derive({Repair Status} = iif(isNull({Repair Number}) && !isNull({Repair Order Closed Date}),'Closed',{Repair Status}),",
				"          {Organization Code} = iif(isNull({Organization Code}),{Warehouse Code},{Organization Code})) ~> derivedColumn2",
				"derivedColumn2 filter({Repair Status} != \"CANCELLED\" && {Repair Status} != \"CANCEL\" && {Repair Status} != \"Draft\") ~> filter2",
				"filter2 filter({Repair Reason} != \"CAN\") ~> filter3",
				"filter3 derive({TAT Calendar Days} = iif(isNull({Repair$Actual Complete Date}),toDate(toString(currentDate(),'yyyy-MM-dd')) - toDate(toString({Repair$Actual Start Date},'yyyy-MM-dd')),toDate(toString({Repair$Actual Complete Date} ,'yyyy-MM-dd')) - toDate(toString({Repair$Actual Start Date},'yyyy-MM-dd')))) ~> derivedColumn3",
				"derivedColumn3 derive({Age Cal Days} = iif(isNull({Time In Hold Status}),{TAT Calendar Days},{TAT Calendar Days} - toInteger({Time In Hold Status})),",
				"          {Repair Quantity} = iif(isNull({Repair Quantity}),{Line Quantity},{Repair Quantity}),",
				"          {Customer Name} = iif(!isNull({Customer Name}),{Customer Name},iif(!isNull({Ship To Customer Name}),{Ship To Customer Name},{Customer Name}))) ~> derivedColumn4",
				"derivedColumn4 derive({Age Cal Days} = iif(isNull({Repair$Tat Adj}),{Age Cal Days},{Age Cal Days} + toInteger({Repair$Tat Adj})),",
				"          {Report Date} = currentDate(),",
				"          {Warranty Status} = iif(regexMatch({Warranty Status},'IN-WARRANTY'),'In Warranty',\r",
				"iif(regexMatch({Warranty Status},'IN WARRANTY'),'In Warranty',\r",
				"iif(regexMatch({Warranty Status},'OUT-WARRANTY'),'Out of Warranty',\r",
				"iif(regexMatch({Warranty Status},'OUT WARRANTY'),'Out of Warranty' ,{Warranty Status})))),",
				"          {Business Area} = iif(isNull({Business Area}),'AS',{Business Area}),",
				"          {Product Line} = iif(isNull({Product Line}),'Unknown',{Product Line}),",
				"          {WIP EOM Date} = iif(isNull({Repair Order Closed Date}),toString(currentDate()),{Repair Order Closed Date}),",
				"          {Start_Rcvd Date} = iif(isNull({Repair$Actual Start Date}),{Receive Date},{Repair$Actual Start Date})) ~> derivedColumn5",
				"derivedColumn5 derive({In WIP} = iif({Repair Order Closed Date} <= {WIP Inventory},null(),'1'),",
				"          Date = {WIP Inventory},",
				"          {WIP AGE DATE} = iif(left({WIP Inventory},7) == left({WIP EOM Date},7),{WIP EOM Date},{WIP Inventory})) ~> derivedColumn6",
				"derivedColumn5 filter(isNull({Repair$Actual Start Date}) && isNull({Receive Date})) ~> filter4",
				"derivedColumn6, filter4 union(byName: true)~> union1",
				"union1 derive({WIP Inventory} = mapLoop(toInteger(substring({WIP EOM Date},6,2))-toInteger(substring({Start_Rcvd Date},6,2)),toString(addMonths(lastDayOfMonth(toDate({Start_Rcvd Date})),toInteger(#index)-1)))) ~> GenerateRows"
			]
		}
	}
}