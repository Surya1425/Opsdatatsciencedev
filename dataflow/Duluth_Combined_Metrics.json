{
	"name": "Duluth_Combined_Metrics",
	"properties": {
		"folder": {
			"name": "Duluth_Combined_Metrics"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "OEOG0OMPCOrderInfoVsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "OEOG0RMALineDetailsvsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "OEOG0Shipments"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "POG0ALLLINESVSAT"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "POG0EndToEndVsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "QAG0NMRDetailVsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "POG0AllDistributions"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "POG0ReqDistVsat"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "QAResults1"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "QAResults2"
				},
				{
					"dataset": {
						"referenceName": "ds_csv_input",
						"type": "DatasetReference"
					},
					"name": "QAGONmrDetailVsat"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv_output",
						"type": "DatasetReference"
					},
					"name": "DuluthCombinedDetails"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "MultiRow1"
				},
				{
					"name": "Formulae"
				},
				{
					"name": "initCapCols3"
				},
				{
					"name": "filter2"
				},
				{
					"name": "selectReqCols6"
				},
				{
					"name": "filter3"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "LeftOuterjoin1"
				},
				{
					"name": "UniqueRows"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "sort1"
				},
				{
					"name": "MultiRow2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "filter4"
				},
				{
					"name": "filter5"
				},
				{
					"name": "select2"
				},
				{
					"name": "filter6"
				},
				{
					"name": "sort2"
				},
				{
					"name": "SelectOneRow"
				},
				{
					"name": "RankEqualsOne"
				},
				{
					"name": "leftOuterjoin2"
				},
				{
					"name": "Formulae2"
				},
				{
					"name": "UniqueRows2"
				},
				{
					"name": "selectFromAllRepairOrders"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "Fullouterjoin1"
				},
				{
					"name": "CheckingNulls"
				},
				{
					"name": "filter7"
				},
				{
					"name": "select5"
				},
				{
					"name": "initCapCols"
				},
				{
					"name": "selectReqCols2"
				},
				{
					"name": "initCapCols2"
				},
				{
					"name": "select6"
				},
				{
					"name": "initCapCols4"
				},
				{
					"name": "select7"
				},
				{
					"name": "selectReqCols3"
				},
				{
					"name": "innerjoin1"
				},
				{
					"name": "select8"
				},
				{
					"name": "UniqueRows3"
				},
				{
					"name": "innerjoin2"
				},
				{
					"name": "initCapCols6"
				},
				{
					"name": "filter8"
				},
				{
					"name": "FullOuterJoin3"
				},
				{
					"name": "Formulae3"
				},
				{
					"name": "unionQAResults"
				},
				{
					"name": "selectReqCols5"
				},
				{
					"name": "innerjoin4"
				},
				{
					"name": "initCapCols5"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "RenamingCols2"
				},
				{
					"name": "filter9"
				},
				{
					"name": "sort3"
				},
				{
					"name": "SelectOneRow2"
				},
				{
					"name": "filter10"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "RenamingCols3"
				},
				{
					"name": "UniqueRows4"
				},
				{
					"name": "selectFromPoREQ"
				},
				{
					"name": "LeftOuterjoin3"
				},
				{
					"name": "select9"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "selectFromNMRPOREQ"
				},
				{
					"name": "selectFromOrderMangementAllRepairOrders"
				},
				{
					"name": "FullOuterJoin4"
				},
				{
					"name": "castingToString"
				},
				{
					"name": "SELECTFINAL"
				},
				{
					"name": "select10"
				},
				{
					"name": "selectReqCols7"
				},
				{
					"name": "select11"
				},
				{
					"name": "AllRepairOrders",
					"flowlet": {
						"referenceName": "all_repair_orders_finalDf",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"parameters{",
				"     UniqueRows as string (\"Requested Date,Header Ship From Org,Ship From Location,Ship To Country,Ship To Customer Name,Ship To Location,Shipped Quantity,Sold To Customer Name,Task Number,Scheduled Ship Date,Order Type Name,Order Number,Customer Po Number,Head$Project Number,Order Created Date,Order Created By,Order Booked Date,Om Or Pc,Line Status,Line Ship From Org,Line Quantity,Head$Program Manager,Line Number,Line Creation Date,Item Number,Item Description,Bill To Customer Name,Order Status,Project Number,Org Onhand Quantity,Promised Date\"),",
				"     UniqueRows2 as string (\"AMS Item Name,Avg Addl Funds,Business Area,Contract Number,Contract Warranty End Date,Customer Name,Customer Product Id,Customer Type,Estimate Approval Status,Incident Type,Instance Warranty End Date,Internal Order Flag,Inventory Organization Name,DRO Item Description,Item Instance Number,Item Instance Status,Item Lot Number,DRO Item Number,Item Revision,Item$Inventory Item Id,Item$Organization Id,Locator,Product Line,Project Number,Quantity In Wip,Receive Date,Received Quantity,Repair Currency Code,Repair Item Serial Number,Repair Item Uom,Repair Line Id,Repair Number,Repair Order Closed Date,Repair Order Creation Date,Repair Order Project,Repair Order Promised Date,Repair Order Task,Repair Owner Name,Repair Quantity,Repair Reason,Repair Status,Repair Type,Repair$Actual Complete Date,Repair$Actual Repair Price,Repair$Actual Start Date,Repair$Metric Completion Date,Repair$Program,Repair$Returning Platform,Repair$Service Affiliation,Repair$Ssl,Repair$Tail Number,Repair$Tat Adj,Repair$Tat Adj Reason,Repair$Vendor Name,Repair$Vendor RMA,report_date,Rma Order Number,Ship Date,Shipped Quantity,Sr Group Name,Sr Owner Name,Time In Hold Status,Time In Open Status,Time In Repair,Times Returned,Total Actual Amount,Total Estimate Amount,Unit Selling Price,Warehouse Code,Warranty Status\"),",
				"     UniqueRows3 as string (\"Arrived at Vendor Date,Buyer Name,Closure Status,First Po Approval Date,On Time Delivery Date,Po Approved Date,Po Item Description,Po Line Creation Date,Po Line Number,Po Line Type,Po Number,Po Revision Number,Po Warranty Status,Promised Date,Quantity Shipped,Req Create Date,Requisition Approval Date,Requisition Created By,Requisition Line Number,Requisition Number,RTV Hold End Date,RTV Hold Start Date,RTV Supplier SN,Shipment Cancel Flag,Supplier Name,Task Number,Unit Price,Vendor Name,Vendor Pn,Vendor RMA,ViaSat NMR,ViaSat Parent RMA,ViaSat RMA\"),",
				"     UniqueRows4 as string (\"Approval Date,Arrived at Vendor Date,Buyer Name,Closure Status,Po Approved Date,Po Item Description,Po Line Creation Date,Po Line Number,Po Line Type,RTV PO Number,Po Revision Number,Po Warranty Status,Preparer,Project Number,Promised Date,Quantity Shipped,Req Create Date,REQ Description,REQ Number,Requisition Approval Date,Requisition Created By,Requisition Creation Date,Requisition Line Number,Requisition Number,RTV Hold End Date,RTV Hold Start Date,RTV Supplier SN,Task Number,Unit Price,Vendor Name,Vendor Pn,Vendor RMA,ViaSat NMR,ViaSat Parent RMA,ViaSat RMA\")",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'ams-operations-jc',",
				"     folderPath: 'input',",
				"     fileName: 'OEOG0_OM_PC_Order_Info_Vsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> OEOG0OMPCOrderInfoVsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'OEOG0_RMA_Line_Details_vsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> OEOG0RMALineDetailsvsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'OEOG0_Shipments.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> OEOG0Shipments",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'POG0_ALL_LINES_VSAT.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> POG0ALLLINESVSAT",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'POG0EndToEndVsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> POG0EndToEndVsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'ams-operations-jc',",
				"     folderPath: 'input',",
				"     fileName: 'QAG0_NMR_Detail_Vsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> QAG0NMRDetailVsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'POG0AllDistributions.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> POG0AllDistributions",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'noetix-views',",
				"     fileName: 'POG0_Req_Dist_POs_Vsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> POG0ReqDistVsat",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'QAResults1.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> QAResults1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'input',",
				"     fileName: 'QAResults2.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> QAResults2",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     fileSystem: 'ams-operations-jc',",
				"     folderPath: 'input',",
				"     fileName: 'QAG0_NMR_Detail_Vsat.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> QAGONmrDetailVsat",
				"compose(composition: 'all_repair_orders_finalDf') ~> AllRepairOrders@(HistoricalData)",
				"OEOG0RMALineDetailsvsat filter(WAREHOUSE == \"16\" || WAREHOUSE == \"76\" ||  WAREHOUSE == \"75\") ~> filter1",
				"filter1 window(over(ORDER_NUMBER),",
				"     asc(ORDER_NUMBER, true),",
				"     ACTUAL_SHIPMENT_DATE2 = lead(ACTUAL_SHIPMENT_DATE,1,0)) ~> MultiRow1",
				"MultiRow1 derive(ACTUAL_SHIPMENT_DATE = iif(isNull(ACTUAL_SHIPMENT_DATE),ACTUAL_SHIPMENT_DATE2,ACTUAL_SHIPMENT_DATE),",
				"          {Warranty Status OM} = iif(regexMatch(ORDER_TYPE, 'IN-WARRANTY'),'In Warranty', \r",
				"iif(regexMatch(ORDER_TYPE, 'IN WARRANTY'),'In Warranty', \r",
				"iif(regexMatch(ORDER_TYPE, 'OUT-WARRANTY'),'Out of Warranty',ORDER_TYPE)))) ~> Formulae",
				"OEOG0OMPCOrderInfoVsat select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols3",
				"selectReqCols6 filter({Line Ship From Org} == \"16\" ||  {Line Ship From Org} == \"76\" || {Line Ship From Org} == \"75\") ~> filter2",
				"initCapCols3 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Head$program Manager},",
				"          {Head$project Number},",
				"          {Header Ship From Org},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Ship From Org},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Created By},",
				"          {Order Created Date},",
				"          {Order Number},",
				"          {Order Status},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Org Onhand Quantity},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Sold To Customer Name},",
				"          {Task Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols6",
				"filter2 filter(regexMatch({Head$program Manager}, \"Lewis\") || \r",
				"regexMatch({Head$program Manager}, \"Craig\") || \r",
				"regexMatch({Head$program Manager}, \"Brown\")) ~> filter3",
				"filter3 derive({Warranty Status OM} = iif(regexMatch({Order Type Name}, 'IN-WARRANTY'),'In Warranty', \r",
				"iif(regexMatch({Order Type Name}, 'IN WARRANTY'),'In Warranty', \r",
				"iif(regexMatch({Order Type Name}, 'OUT-WARRANTY'),'Out of Warranty',{Order Type Name})))) ~> derivedColumn1",
				"derivedColumn1, Formulae join({Order Number} == ORDER_NUMBER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftOuterjoin1",
				"select3 aggregate(groupBy(dummy = sha2(256,byNames(split($UniqueRows,',')))),",
				"     each(match(true()), $$ = first($$))) ~> UniqueRows",
				"UniqueRows derive({Order Number} = iif(isNull({Order Number}),ORDER_NUMBER,{Order Number}),",
				"          {Project Number} = iif(isNull({Project Number}),PROJECT_NUMBER,{Project Number}),",
				"          {Head$program Manager} = iif(isNull({Head$program Manager}),toString({HEAD$PROGRAM_MANAGER}),{Head$program Manager}),",
				"          {Task Number} = iif(isNull({Task Number}),TASK_NUMBER,{Task Number}),",
				"          {Business Area} = 'AS',",
				"          {Warranty Status OM} = iif(isNull({Warranty Status OM}),{Right_Warranty Status OM},{Warranty Status OM})) ~> derivedColumn2",
				"derivedColumn2 sort(desc({Line Number}, false)) ~> sort1",
				"sort1 window(over({Order Number}),",
				"     asc({Order Number}, true),",
				"     {Scheduled Ship Date2} = lag({Scheduled Ship Date},1,0)) ~> MultiRow2",
				"MultiRow2 derive({Scheduled Ship Date} = iif(isNull({Scheduled Ship Date}),{Scheduled Ship Date2},{Scheduled Ship Date})) ~> derivedColumn3",
				"derivedColumn3 filter({Line Number} == \"2.1\" &&  {Om Or Pc} == \"Order Management\") ~> filter4",
				"filter4 filter({Order Status} != \"CANCELLED\") ~> filter5",
				"filter5 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Head$program Manager},",
				"          {Head$project Number},",
				"          {Header Ship From Org},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Ship From Org},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Created By},",
				"          {Order Created Date},",
				"          {Order Number},",
				"          {Order Status},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Org Onhand Quantity},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Sold To Customer Name},",
				"          {Task Number},",
				"          {Warranty Status OM},",
				"          ORDER_NUMBER,",
				"          SERIAL_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          CUSTOMER,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          ORDER_STATUS,",
				"          CUST_PO_NUMBER,",
				"          CREATED_BY,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          QUANTITY,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM},",
				"          {Business Area},",
				"          {Scheduled Ship Date2}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"OEOG0Shipments filter(!isNull({ORDER_NUMBER})) ~> filter6",
				"filter6 sort(asc(ORDER_NUMBER, false),",
				"     desc(SHIP_DATE, true)) ~> sort2",
				"sort2 window(over(ORDER_NUMBER),",
				"     asc(ORDER_NUMBER, true),",
				"     Rank = rowNumber()) ~> SelectOneRow",
				"SelectOneRow filter(Rank==1) ~> RankEqualsOne",
				"select2, RankEqualsOne join({Order Number} == OEOG0Shipments@ORDER_NUMBER,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftOuterjoin2",
				"select4 derive(ACTUAL_SHIPMENT_DATE = iif(isNull(ACTUAL_SHIPMENT_DATE),SHIP_DATE,ACTUAL_SHIPMENT_DATE),",
				"          {Customer Po Number} = iif(isNull({Customer Po Number}),CUST_PO_NUMBER,{Customer Po Number}),",
				"          CUSTOMER = iif(isNull(CUSTOMER),{Bill To Customer Name},CUSTOMER),",
				"          {Item Number} = iif(isNull({Item Number}),{ITEM$SV$PART_NUMBER},{Item Number}),",
				"          {Item Description} = iif(isNull({Item Description}),ITEM_DESCRIPTION,{Item Description}),",
				"          ORDER_DATE = iif(isNull(ORDER_DATE),{Order Booked Date},ORDER_DATE),",
				"          {Warranty Status OM} = iif(isNull({Right_Warranty Status OM}),{Warranty Status OM},{Right_Warranty Status OM}),",
				"          {Order Status} = iif(isNull({Order Status}),ORDER_STATUS,{Order Status})) ~> Formulae2",
				"AllRepairOrders@HistoricalData aggregate(groupBy(dummy = sha2(256,byNames(split($UniqueRows2,',')))),",
				"     each(match(true()), $$ = first($$))) ~> UniqueRows2",
				"UniqueRows2 select(mapColumn(",
				"          {Warehouse Code},",
				"          {Unit Selling Price},",
				"          {Total Estimate Amount},",
				"          {Total Actual Amount},",
				"          {Times Returned},",
				"          {Time In Repair},",
				"          {Time In Open Status},",
				"          {Time In Hold Status},",
				"          Subinventory,",
				"          {Shipped Quantity},",
				"          {Ship To State},",
				"          {Ship To City},",
				"          {Ship To Address1},",
				"          {Ship Date},",
				"          {Service Request Number},",
				"          {Salesforce Rma},",
				"          {Sr Status},",
				"          {Sr Severity},",
				"          {Sr Operating Unit Name},",
				"          {Sr Item Serial Number},",
				"          {Sr Group Name},",
				"          {Repair Type Reference},",
				"          {Repair Type},",
				"          {Repair Status},",
				"          {Repair Reason},",
				"          {Repair Quantity},",
				"          {Repair Priority},",
				"          {Repair Owner Name},",
				"          {Repair Order Task},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Project},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Closed Date},",
				"          {Repair Number},",
				"          {Repair Line Id},",
				"          {Repair Item Uom},",
				"          {Repair Item Serial Number},",
				"          {Repair Currency Code},",
				"          {Repair$Vendor Name},",
				"          {Repair$Tail Number},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Service Affiliation},",
				"          {Repair$Ssl},",
				"          {Repair$Returning Platform},",
				"          {Repair$Program},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Ecd},",
				"          {Repair$Cust Rl Trx Context Val},",
				"          {Repair$Cust Rl Original Failur},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Complete Date},",
				"          {Received Quantity},",
				"          {Receive Date},",
				"          {Price List},",
				"          Locator,",
				"          {Item Revision},",
				"          {Item Lot Number},",
				"          {Item Instance Status},",
				"          {Item Instance Number},",
				"          {DRO tem Description} = {Item Description},",
				"          {DRO Item Number} = {Item Number},",
				"          {Item$Organization Id},",
				"          {Item$Inventory Item Id},",
				"          {Inventory Organization Name},",
				"          {Internal Order Flag},",
				"          {Instance Warranty End Date},",
				"          {Incident Type},",
				"          {Estimate Approval Status},",
				"          {Customer Type},",
				"          {Customer Product Id},",
				"          {Customer Name},",
				"          {Contract Warranty End Date},",
				"          {Contract Number},",
				"          {Avg Addl Funds},",
				"          {Warranty Status},",
				"          {Product Line Business Area},",
				"          {Project Number},",
				"          {Product Line},",
				"          {Itemcat$Sv$Ams},",
				"          {Rma Order Number},",
				"          report_date,",
				"          {Business Area},",
				"          {AMS Item Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFromAllRepairOrders",
				"LeftOuterjoin1 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Head$program Manager},",
				"          {Head$project Number},",
				"          {Header Ship From Org},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Ship From Org},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Created By},",
				"          {Order Created Date},",
				"          {Order Number},",
				"          {Order Status},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Org Onhand Quantity},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Sold To Customer Name},",
				"          {Task Number},",
				"          {Warranty Status OM} = derivedColumn1@{Warranty Status OM},",
				"          ORDER_NUMBER,",
				"          SERIAL_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          CUSTOMER,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          ORDER_STATUS,",
				"          CUST_PO_NUMBER,",
				"          CREATED_BY,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          QUANTITY,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM} = Formulae@{Warranty Status OM}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"leftOuterjoin2 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Head$program Manager},",
				"          {Head$project Number},",
				"          {Header Ship From Org},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Ship From Org},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Created By},",
				"          {Order Created Date},",
				"          {Order Number},",
				"          {Order Status},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Project Number},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Sold To Customer Name},",
				"          {Task Number},",
				"          {Warranty Status OM},",
				"          ORDER_NUMBER = select2@ORDER_NUMBER,",
				"          SERIAL_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          CUSTOMER,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          ORDER_STATUS,",
				"          CUST_PO_NUMBER,",
				"          CREATED_BY,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          QUANTITY,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM},",
				"          {Business Area},",
				"          {Scheduled Ship Date2},",
				"          SHIP_DATE,",
				"          Right_ORDER_NUMBER = ORDER_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"Formulae2, selectFromAllRepairOrders join({Order Number} == {Rma Order Number},",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Fullouterjoin1",
				"select5 derive({Item Description} = iif(isNull({Item Description}),{DRO Item Description},{Item Description}),",
				"          {Item Number} = iif(isNull({Item Number}),{DRO Item Number},{Item Number}),",
				"          {Repair Order Creation Date} = iif(isNull({Repair Order Creation Date}),{Order Created Date},{Repair Order Creation Date}),",
				"          {Receive Date} = iif(isNull({Receive Date}),RMA_RECEIVED_DATE,{Receive Date}),",
				"          {Rma Order Number} = iif(isNull({Order Number}),{Rma Order Number},toInteger({Order Number})),",
				"          {Customer Name} = iif(isNull({Customer Name}),CUSTOMER,{Customer Name}),",
				"          {Repair Owner Name} = iif(isNull({Repair Owner Name}),{Head$program Manager},{Repair Owner Name}),",
				"          {Repair Status} = iif(isNull({Repair Status}),{Order Status},{Repair Status}),",
				"          {Product Line} = iif(isNull({Repair$Program}),{Product Line},{Repair$Program}),",
				"          {Business Area} = iif(isNull({Business Area}),{Right_Business Area},{Business Area}),",
				"          {Repair Order Project} = iif(!isNull({Repair Order Project}),{Repair Order Project},\r",
				"iif(!isNull({Project Number}),{Project Number},\r",
				"iif(!isNull({Head$project Number}),{Head$project Number},\r",
				"iif(!isNull({Right_Project Number}),{Right_Project Number},\r",
				"{Repair Order Project})))),",
				"          {Repair Item Serial Number} = iif(isNull({Repair Item Serial Number}),SERIAL_NUMBER,{Repair Item Serial Number}),",
				"          {Warranty Status} = iif(isNull({Warranty Status}),{Warranty Status OM},{Warranty Status}),",
				"          {Warehouse Code} = iif(!isNull({Warehouse Code}),toString({Warehouse Code}), \r",
				"iif(!isNull({Line Ship From Org}),{Line Ship From Org},\r",
				"iif(!isNull({Header Ship From Org}),{Header Ship From Org},toString({Warehouse Code})))),",
				"          {Repair Order Task} = iif(isNull({Repair Order Task}),{Task Number},{Repair Order Task}),",
				"          {Ship Date} = iif(isNull({Ship Date}),ACTUAL_SHIPMENT_DATE,{Ship Date})) ~> CheckingNulls",
				"CheckingNulls filter(regexMatch({Repair Owner Name}, \"Lewis\") || regexMatch({Repair Owner Name}, \"Craig\") || regexMatch({Repair Owner Name}, \"Brown\")) ~> filter7",
				"Fullouterjoin1 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Head$program Manager},",
				"          {Head$project Number},",
				"          {Header Ship From Org},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Ship From Org},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Created By},",
				"          {Order Created Date},",
				"          {Order Number},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Project Number} = select4@{Project Number},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Sold To Customer Name},",
				"          {Task Number},",
				"          {Warranty Status OM},",
				"          ORDER_NUMBER,",
				"          SERIAL_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          CUSTOMER,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          ORDER_STATUS,",
				"          CUST_PO_NUMBER,",
				"          CREATED_BY,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          QUANTITY,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM},",
				"          {Business Area} = select4@{Business Area},",
				"          {Scheduled Ship Date2},",
				"          SHIP_DATE,",
				"          Right_ORDER_NUMBER,",
				"          {Order Status},",
				"          {Warehouse Code},",
				"          {Unit Selling Price},",
				"          {Total Estimate Amount},",
				"          {Total Actual Amount},",
				"          {Times Returned},",
				"          {Time In Repair},",
				"          {Time In Open Status},",
				"          {Time In Hold Status},",
				"          Subinventory,",
				"          {Shipped Quantity},",
				"          {Ship To State},",
				"          {Ship To City},",
				"          {Ship To Address1},",
				"          {Ship Date},",
				"          {Service Request Number},",
				"          {Salesforce Rma},",
				"          {Sr Status},",
				"          {Sr Severity},",
				"          {Sr Operating Unit Name},",
				"          {Sr Item Serial Number},",
				"          {Sr Group Name},",
				"          {Repair Type Reference},",
				"          {Repair Type},",
				"          {Repair Status},",
				"          {Repair Reason},",
				"          {Repair Quantity},",
				"          {Repair Priority},",
				"          {Repair Owner Name},",
				"          {Repair Order Task},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Project},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Closed Date},",
				"          {Repair Number},",
				"          {Repair Line Id},",
				"          {Repair Item Uom},",
				"          {Repair Item Serial Number},",
				"          {Repair Currency Code},",
				"          {Repair$Vendor Name},",
				"          {Repair$Tail Number},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Service Affiliation},",
				"          {Repair$Ssl},",
				"          {Repair$Returning Platform},",
				"          {Repair$Program},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Ecd},",
				"          {Repair$Cust Rl Trx Context Val},",
				"          {Repair$Cust Rl Original Failur},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Complete Date},",
				"          {Received Quantity},",
				"          {Receive Date},",
				"          {Price List},",
				"          Locator,",
				"          {Item Revision},",
				"          {Item Lot Number},",
				"          {Item Instance Status},",
				"          {Item Instance Number},",
				"          {DRO Item Description} = {DRO tem Description},",
				"          {DRO Item Number},",
				"          {Item$Organization Id},",
				"          {Item$Inventory Item Id},",
				"          {Inventory Organization Name},",
				"          {Internal Order Flag},",
				"          {Instance Warranty End Date},",
				"          {Incident Type},",
				"          {Estimate Approval Status},",
				"          {Customer Type},",
				"          {Customer Product Id},",
				"          {Customer Name},",
				"          {Contract Warranty End Date},",
				"          {Contract Number},",
				"          {Avg Addl Funds},",
				"          {Warranty Status},",
				"          {Product Line Business Area},",
				"          {Right_Project Number} = selectFromAllRepairOrders@{Project Number},",
				"          {Product Line},",
				"          {Itemcat$Sv$Ams},",
				"          {Rma Order Number},",
				"          report_date,",
				"          {Right_Business Area} = selectFromAllRepairOrders@{Business Area},",
				"          {AMS Item Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"POG0EndToEndVsat select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols",
				"initCapCols select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Po Number},",
				"          {Req Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols2",
				"POG0ALLLINESVSAT select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols2",
				"initCapCols2 select(mapColumn(",
				"          {PO Closed Date} = {Closed Date},",
				"          {Po Line Number},",
				"          {Po Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"QAG0NMRDetailVsat select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols4",
				"initCapCols4 select(mapColumn(",
				"          {Nmr Nmr No},",
				"          {Nmr Rma No}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"POG0AllDistributions select(mapColumn(",
				"          {Buyer Name} = BUYER_NAME,",
				"          {Closure Status} = CLOSURE_STATUS,",
				"          FIRST_PO_APPROVAL_DATE,",
				"          {Po Item Description} = ITEM_DESCRIPTION,",
				"          {Arrived at Vendor Date} = {PDSTR$AMS___ARRIVED_AT_VENDOR},",
				"          {RTV Hold End Date} = {PDSTR$AMS___HOLD_END},",
				"          {RTV Hold Start Date} = {PDSTR$AMS___HOLD_START},",
				"          {Po Warranty Status} = {PDSTR$AMS___IN_WARRANTY},",
				"          {Vendor Pn} = {PDSTR$AMS___VENDOR_PN},",
				"          {Vendor RMA} = {PDSTR$AMS___VENDOR_RMA},",
				"          {RTV Supplier SN} = {PDSTR$AMS___VENDOR_SN},",
				"          {ViaSat NMR} = {PDSTR$AMS___VIASAT_NMR},",
				"          {ViaSat Parent RMA} = {PDSTR$AMS___VIASAT_PARENT_RMA},",
				"          {ViaSat RMA} = {PDSTR$AMS___VIASAT_RTV_RMA},",
				"          {Po Line Creation Date} = PO_LINE_CREATION_DATE,",
				"          {Po Line Number} = PO_LINE_NUMBER,",
				"          {Po Line Type} = PO_LINE_TYPE,",
				"          {Po Number} = PO_NUMBER,",
				"          {Po Revision Number} = PO_REVISION_NUMBER,",
				"          {Promised Date} = PROMISED_DATE,",
				"          {Quantity Shipped} = QUANTITY_SHIPPED,",
				"          {Requisition Approval Date} = REQUISITION_APPROVAL_DATE,",
				"          {Requisition Created By} = REQUISITION_CREATED_BY,",
				"          {Req Create Date} = REQUISITION_CREATION_DATE,",
				"          {Requisition Line Number} = REQUISITION_LINE_NUMBER,",
				"          {Requisition Number} = REQUISITION_NUMBER,",
				"          {On Time Delivery Date} = {SHIPM$ON_TIME_DELIVERY_DATE},",
				"          {Shipment Cancel Flag} = SHIPMENT_CANCEL_FLAG,",
				"          {Supplier Name} = SUPPLIER_NAME,",
				"          {Task Number} = TASK_NUMBER,",
				"          {Unit Price} = UNIT_PRICE,",
				"          {Vendor Name} = VENDOR_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols3",
				"selectReqCols2, selectReqCols3 join(selectReqCols2@{Po Number} == selectReqCols3@{Po Number}",
				"     && selectReqCols2@{Po Line Number} == selectReqCols3@{Po Line Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin1",
				"innerjoin1 select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number} = selectReqCols2@{Po Line Number},",
				"          {Po Number} = selectReqCols2@{Po Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          FIRST_PO_APPROVAL_DATE,",
				"          {Po Item Description},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat NMR},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {On Time Delivery Date},",
				"          {Shipment Cancel Flag},",
				"          {Supplier Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          {Vendor Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select8 aggregate(groupBy(dummy = sha2(256,byNames(split($UniqueRows3,',')))),",
				"     each(match(true()), $$ = first($$))) ~> UniqueRows3",
				"UniqueRows3, select6 join(UniqueRows3@{Po Number} == select6@{Po Number}",
				"     && UniqueRows3@{Po Line Number} == select6@{Po Line Number},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin2",
				"POG0ReqDistVsat select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols6",
				"selectReqCols7 filter({Authorization Status} != \"CANCELLED\") ~> filter8",
				"select10, filter8 join({Requisition Number} == {REQ Number},",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FullOuterJoin3",
				"select11 derive({Requisition Created By} = iif(isNull({Requisition Created By}),Preparer,{Requisition Created By}),",
				"          {Arrived at Vendor Date} = iif(isNull({Right_Arrived at Vendor Date}),{Arrived at Vendor Date},{Right_Arrived at Vendor Date}),",
				"          {Buyer Name} = iif(isNull({Right_Buyer Name}),{Buyer Name},{Right_Buyer Name}),",
				"          {Po Item Description} = iif(isNull({Right_PO Item Description}),{Po Item Description},{Right_PO Item Description}),",
				"          {Po Number} = iif(isNull({Left_Right_Po Number}),{Po Number},{Left_Right_Po Number}),",
				"          {Po Warranty Status} = iif(isNull({Right_Po Warranty Status}),{Po Warranty Status},{Right_Po Warranty Status}),",
				"          {RTV Hold End Date} = iif(isNull({Right_RTV Hold End Date}),{RTV Hold End Date},{Right_RTV Hold End Date}),",
				"          {RTV Hold Start Date} = iif(isNull({Right_RTV Hold Start Date}),{RTV Hold Start Date},{Right_RTV Hold Start Date}),",
				"          {RTV Supplier SN} = iif(isNull({Right_RTV Supplier SN}),{RTV Supplier SN},{Right_RTV Supplier SN}),",
				"          {Task Number} = iif(isNull({Right_Task Number}),{Task Number},{Right_Task Number}),",
				"          {Vendor Pn} = iif(isNull({Right_Vendor Pn}),{Vendor Pn},{Right_Vendor Pn}),",
				"          {Vendor RMA} = iif(isNull({Right_Vendor RMA}),{Vendor RMA},{Right_Vendor RMA}),",
				"          {ViaSat NMR} = iif(isNull({Right_Viasat NMR}),{ViaSat NMR},{Right_Viasat NMR}),",
				"          {ViaSat RMA} = iif(isNull({Right_ViaSat RMA}),{ViaSat RMA},{Right_ViaSat RMA}),",
				"          {Vendor Name} = iif(isNull({Vendor Name}),{Supplier Name},{Vendor Name})) ~> Formulae3",
				"QAResults1, QAResults2 union(byName: true)~> unionQAResults",
				"QAGONmrDetailVsat select(mapColumn(",
				"          {Nmr Nmr No} = NMR_NMR_NO,",
				"          {Nmr Rma No} = NMR_RMA_NO",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols5",
				"unionQAResults, selectReqCols5 join(NMR_NO == {Nmr Nmr No},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin4",
				"innerjoin4 select(mapColumn(",
				"          each(match(true()),",
				"               initCap(replace(initCap($$),'_',' ')) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> initCapCols5",
				"initCapCols5 derive({Nmr Details} = {Nmr Det Date Action Taken} + ': ' + {Nmr Det Desc Of Def}+ ': ' + {Nmr Det Action Taken}) ~> derivedColumn4",
				"derivedColumn4 aggregate(groupBy({Business Area},",
				"          {Nmr Customer},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {Nmr Det Sn},",
				"          {Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {Nmr Project No},",
				"          {Nmr Sn},",
				"          {Nmr Supplier},",
				"          {Nmr Warranty},",
				"          {Organization Code},",
				"          {Repair Line Id},",
				"          {Rma Creation Date},",
				"          {Nmr Creation Date},",
				"          {Salesforce Number},",
				"          {Failure Site},",
				"          {Failure Cause Code},",
				"          {Report Symptom},",
				"          {Nmr Det Repair Action},",
				"          {Nmr Rma Line No},",
				"          {Nmr Originator},",
				"          {Project Number},",
				"          {Nmr Rma Number}),",
				"     {Max_Nmr Det Dispo} = max({Nmr Det Dispo}),",
				"          {Concat_Nmr Det Action Taken} = dropRight(toString(reduce(collect({Nmr Det Action Taken}),'',#item+','+#acc,#result)),1),",
				"          {Concat_NMR Details} = dropRight(toString(reduce(collect({Nmr Details}),'',#item+','+#acc,#result)),1)) ~> aggregate2",
				"aggregate2 select(mapColumn(",
				"          {Business Area},",
				"          {Nmr Customer},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {Nmr Det Sn},",
				"          {Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {Nmr Project No},",
				"          {Nmr Sn},",
				"          {Nmr Supplier},",
				"          {Nmr Warranty},",
				"          {Organization Code},",
				"          {Repair Line Id},",
				"          {Rma Creation Date},",
				"          {Nmr Creation Date},",
				"          {Salesforce Number},",
				"          {Failure Site},",
				"          {Report Symptom},",
				"          {Nmr Det Repair Action},",
				"          {Nmr Rma Line No},",
				"          {Nmr Originator},",
				"          {Project Number},",
				"          {Nmr Rma Number},",
				"          {Nmr Det Dispo} = {Max_Nmr Det Dispo},",
				"          {Nmr Det Action Taken} = {Concat_Nmr Det Action Taken},",
				"          {Concat_NMR Details},",
				"          {Failure Cause Code}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenamingCols2",
				"RenamingCols2 filter(regexMatch({Nmr Originator}, \"Lewis\") || regexMatch({Nmr Originator}, \"Craig\") || regexMatch({Nmr Originator}, \"Mosley\") || regexMatch({Nmr Originator}, \"Brown\")) ~> filter9",
				"filter9 sort(desc({Failure Cause Code}, false)) ~> sort3",
				"sort3 window(over({Nmr Nmr No}),",
				"     asc({Nmr Nmr No}, true),",
				"     Rank = rowNumber()) ~> SelectOneRow2",
				"SelectOneRow2 filter(Rank==1) ~> filter10",
				"filter10 derive({Failure Cause Code} = iif(isNull({Failure Cause Code}),\"No Failure Code\",{Failure Cause Code}),",
				"          {NMR DATE CLOSED_DETCLOSED} = iif(isNull({Nmr Date Closed}),{Nmr Det Date Closed},{Nmr Date Closed})) ~> derivedColumn5",
				"Formulae3 select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {RTV Po Number} = {Po Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Po Item Description},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Task Number},",
				"          {Unit Price},",
				"          {Vendor Name},",
				"          {PO Closed Date},",
				"          {Right_Po Line Number},",
				"          {Left_Right_Po Number},",
				"          {Approval Date},",
				"          {REQ Description},",
				"          {PO Item Description} = {Right_PO Item Description},",
				"          Preparer,",
				"          {Project Number},",
				"          {Requisition Creation Date},",
				"          {REQ Number},",
				"          {ViaSat NMR}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenamingCols3",
				"RenamingCols3 aggregate(groupBy(dummy = sha2(256,byNames(split($UniqueRows4,',')))),",
				"     each(match(true()), $$ = first($$))) ~> UniqueRows4",
				"UniqueRows4 select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {RTV Po Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Po Item Description} = UniqueRows4@{Po Item Description},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Task Number},",
				"          {Unit Price},",
				"          {Vendor Name},",
				"          {PO Closed Date},",
				"          {Right_Po Line Number},",
				"          {Left_Right_Po Number},",
				"          {Approval Date},",
				"          {REQ Description},",
				"          {PO Item Description} = UniqueRows4@{PO Item Description},",
				"          Preparer,",
				"          {Project Number},",
				"          {Requisition Creation Date},",
				"          {REQ Number},",
				"          {ViaSat NMR}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFromPoREQ",
				"derivedColumn5, selectFromPoREQ join({Nmr Nmr No} == {ViaSat NMR},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftOuterjoin3",
				"LeftOuterjoin3 select(mapColumn(",
				"          {Nmr Customer},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {Nmr Det Sn},",
				"          {Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {Nmr Project No},",
				"          {Nmr Sn},",
				"          {Nmr Supplier},",
				"          {Nmr Warranty},",
				"          {Organization Code},",
				"          {Repair Line Id},",
				"          {Rma Creation Date},",
				"          {Nmr Creation Date},",
				"          {Salesforce Number},",
				"          {Failure Site},",
				"          {Report Symptom},",
				"          {Nmr Det Repair Action},",
				"          {Nmr Rma Line No},",
				"          {Nmr Originator},",
				"          {Project Number},",
				"          {Nmr Rma Number},",
				"          {Nmr Det Dispo},",
				"          {Nmr Det Action Taken},",
				"          {Concat_NMR Details},",
				"          {Failure Cause Code},",
				"          {NMR DATE CLOSED_DETCLOSED},",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Task Number},",
				"          {PO Unit Price} = {Unit Price},",
				"          {Vendor Name},",
				"          {Approval Date},",
				"          {REQ Description},",
				"          Preparer,",
				"          {Right_Project Number} = selectFromPoREQ@{Project Number},",
				"          {Requisition Creation Date},",
				"          {REQ Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select9 derive({ViaSat RMA} = iif(!isNull({ViaSat RMA}),{ViaSat RMA},\r",
				"iif(!isNull({Nmr Rma Number}),{Nmr Rma Number},{ViaSat RMA})),",
				"          {Vendor Name} = iif(isNull({Vendor Name}),{Nmr Supplier},{Vendor Name})) ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          {Nmr Customer},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {Nmr Det Sn},",
				"          {Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {Nmr Sn},",
				"          {Nmr Warranty},",
				"          {Organization Code},",
				"          {Repair Line Id},",
				"          {Rma Creation Date},",
				"          {Nmr Creation Date},",
				"          {Salesforce Number},",
				"          {Failure Site},",
				"          {Report Symptom},",
				"          {Nmr Det Repair Action},",
				"          {Nmr Rma Line No},",
				"          {Nmr Originator},",
				"          {Project Number},",
				"          {Nmr Rma Number},",
				"          {Nmr Det Dispo},",
				"          {Nmr Det Action Taken},",
				"          {Concat_NMR Details},",
				"          {Failure Cause Code},",
				"          {NMR DATE CLOSED_DETCLOSED},",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Task Number},",
				"          {PO Unit Price},",
				"          {Vendor Name},",
				"          {Approval Date},",
				"          {REQ Description},",
				"          Preparer,",
				"          {Requisition Creation Date},",
				"          {REQ Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFromNMRPOREQ",
				"filter7 select(mapColumn(",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Product Line},",
				"          {Product Line Business Area},",
				"          {Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Address1},",
				"          {Ship To City},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Ship To State},",
				"          {Shipped Quantity},",
				"          {Sold To Customer Name},",
				"          {Task Number},",
				"          ORDER_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          CUST_PO_NUMBER,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM},",
				"          {Business Area},",
				"          {Scheduled Ship Date2},",
				"          SHIP_DATE,",
				"          Right_ORDER_NUMBER,",
				"          column1 = {Order Status},",
				"          {Warehouse Code},",
				"          {Unit Selling Price},",
				"          {Total Estimate Amount},",
				"          {Total Actual Amount},",
				"          {Times Returned},",
				"          {Time In Repair},",
				"          {Time In Open Status},",
				"          {Time In Hold Status},",
				"          {Ship Date},",
				"          {Service Request Number},",
				"          {Salesforce Rma},",
				"          {Sr Status},",
				"          {Sr Item Serial Number},",
				"          {Sr Group Name},",
				"          {Repair Type Reference},",
				"          {Repair Type},",
				"          {Repair Status},",
				"          {Repair Reason},",
				"          {Repair Quantity},",
				"          {Repair Priority},",
				"          {Repair Owner Name},",
				"          {Repair Order Task},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Project},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Closed Date},",
				"          {Repair Number},",
				"          {Repair Line Id},",
				"          {Repair Item Serial Number},",
				"          {Repair$Vendor Name},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Ecd},",
				"          {Repair$Cust Rl Trx Context Val},",
				"          {Repair$Cust Rl Original Failur},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Complete Date},",
				"          {Receive Date},",
				"          {Price List},",
				"          {Item Revision},",
				"          {Item$Organization Id},",
				"          {Customer Name},",
				"          {Contract Warranty End Date},",
				"          {Contract Number},",
				"          {Avg Addl Funds},",
				"          {Warranty Status},",
				"          {Itemcat$Sv$Ams},",
				"          {Rma Order Number},",
				"          {AMS Item Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFromOrderMangementAllRepairOrders",
				"selectFromNMRPOREQ, castingToString join({ViaSat RMA} == {Rma Order Number}",
				"     && selectFromNMRPOREQ@{Repair Line Id} == selectFromOrderMangementAllRepairOrders@{Repair Line Id},",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FullOuterJoin4",
				"selectFromOrderMangementAllRepairOrders cast(output(",
				"          {Rma Order Number} as string",
				"     ),",
				"     errors: true) ~> castingToString",
				"FullOuterJoin4 select(mapColumn(",
				"          {Nmr Customer},",
				"          {Nmr Det Date Action Taken},",
				"          {Nmr Det Date Closed},",
				"          {Nmr Det Desc Of Def},",
				"          {Nmr Det Line Creation Date},",
				"          {Nmr Det Oper Name},",
				"          {Nmr Det Sn},",
				"          {Nmr Date Closed},",
				"          {Nmr Nmr No},",
				"          {Nmr Parent Nmr},",
				"          {Nmr Parent Sn},",
				"          {Nmr Pgm},",
				"          {Nmr Pn},",
				"          {Nmr Pn Desc},",
				"          {Nmr Po Receipt Date},",
				"          {Nmr Sn},",
				"          {Nmr Warranty},",
				"          {Organization Code},",
				"          {Repair Line Id} = selectFromNMRPOREQ@{Repair Line Id},",
				"          {Rma Creation Date},",
				"          {Nmr Creation Date},",
				"          {Salesforce Number},",
				"          {Failure Site},",
				"          {Report Symptom},",
				"          {Nmr Det Repair Action},",
				"          {Nmr Rma Line No},",
				"          {Nmr Originator},",
				"          {Project Number},",
				"          {Nmr Rma Number},",
				"          {Nmr Det Dispo},",
				"          {Nmr Det Action Taken},",
				"          {Concat_NMR Details},",
				"          {Failure Cause Code},",
				"          {NMR DATE CLOSED_DETCLOSED},",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {Task Number} = selectFromNMRPOREQ@{Task Number},",
				"          {PO Unit Price},",
				"          {Vendor Name},",
				"          {Approval Date},",
				"          {REQ Description},",
				"          Preparer,",
				"          {Requisition Creation Date},",
				"          {REQ Number},",
				"          {Bill To Customer Name},",
				"          {Cancelled Quantity},",
				"          {Customer Po Number},",
				"          {Item Description},",
				"          {Item Number},",
				"          {Line$acceptance Point},",
				"          {Line Cancelled Flag},",
				"          {Line Creation Date},",
				"          {Line Number},",
				"          {Line Quantity},",
				"          {Line Status},",
				"          {Om Or Pc},",
				"          {Order Booked Date},",
				"          {Order Type Name},",
				"          {Org Avg Item Cost},",
				"          {Product Line},",
				"          {Product Line Business Area},",
				"          {Promised Date} = selectFromOrderMangementAllRepairOrders@{Promised Date},",
				"          {Requested Date},",
				"          {Scheduled Ship Date},",
				"          {Ship From Location},",
				"          {Ship To Address1},",
				"          {Ship To City},",
				"          {Ship To Country},",
				"          {Ship To Customer Name},",
				"          {Ship To Location},",
				"          {Ship To State},",
				"          {Shipped Quantity},",
				"          {Sold To Customer Name},",
				"          {Task Number} = selectFromOrderMangementAllRepairOrders@{Task Number},",
				"          ORDER_NUMBER,",
				"          PROJECT_NUMBER,",
				"          RMA_RECEIVED_DATE,",
				"          WAREHOUSE,",
				"          ACTUAL_SHIPMENT_DATE,",
				"          ORDER_TYPE,",
				"          {HEAD$PROGRAM_MANAGER},",
				"          CUST_PO_NUMBER,",
				"          {HEAD$PROJECT_NUMBER},",
				"          {ITEM$SV$PART_NUMBER},",
				"          ITEM_DESCRIPTION,",
				"          ORDER_DATE,",
				"          TASK_NUMBER,",
				"          ACTUAL_SHIPMENT_DATE2,",
				"          {Right_Warranty Status OM},",
				"          {Business Area},",
				"          {Scheduled Ship Date2},",
				"          SHIP_DATE,",
				"          Right_ORDER_NUMBER,",
				"          {Warehouse Code},",
				"          {Unit Selling Price},",
				"          {Total Estimate Amount},",
				"          {Total Actual Amount},",
				"          {Times Returned},",
				"          {Time In Repair},",
				"          {Time In Open Status},",
				"          {Time In Hold Status},",
				"          {Ship Date},",
				"          {Service Request Number},",
				"          {Salesforce Rma},",
				"          {Sr Status},",
				"          {Sr Item Serial Number},",
				"          {Sr Group Name},",
				"          {Repair Type Reference},",
				"          {Repair Type},",
				"          {Repair Status},",
				"          {Repair Reason},",
				"          {Repair Quantity},",
				"          {Repair Priority},",
				"          {Repair Owner Name},",
				"          {Repair Order Task},",
				"          {Repair Order Promised Date},",
				"          {Repair Order Project},",
				"          {Repair Order Creation Date},",
				"          {Repair Order Closed Date},",
				"          {Repair Number},",
				"          {Repair Line Id} = selectFromOrderMangementAllRepairOrders@{Repair Line Id},",
				"          {Repair Item Serial Number},",
				"          {Repair$Vendor Name},",
				"          {Repair$Tat Adj Reason},",
				"          {Repair$Metric Completion Date},",
				"          {Repair$Ecd},",
				"          {Repair$Cust Rl Trx Context Val},",
				"          {Repair$Cust Rl Original Failur},",
				"          {Repair$Actual Start Date},",
				"          {Repair$Actual Repair Price},",
				"          {Repair$Actual Complete Date},",
				"          {Receive Date},",
				"          {Price List},",
				"          {Item Revision},",
				"          {Item$Organization Id},",
				"          {Customer Name},",
				"          {Contract Warranty End Date},",
				"          {Contract Number},",
				"          {Avg Addl Funds},",
				"          {Warranty Status},",
				"          {Itemcat$Sv$Ams},",
				"          {Rma Order Number},",
				"          {AMS Item Name}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTFINAL",
				"innerjoin2 select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Po Number},",
				"          {Buyer Name},",
				"          {Closure Status},",
				"          FIRST_PO_APPROVAL_DATE,",
				"          {Po Item Description},",
				"          {Arrived at Vendor Date},",
				"          {RTV Hold End Date},",
				"          {RTV Hold Start Date},",
				"          {Po Warranty Status},",
				"          {Vendor Pn},",
				"          {Vendor RMA},",
				"          {RTV Supplier SN},",
				"          {ViaSat NMR},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {On Time Delivery Date},",
				"          {Shipment Cancel Flag},",
				"          {Supplier Name},",
				"          {Task Number},",
				"          {Unit Price},",
				"          {Vendor Name},",
				"          {PO Closed Date},",
				"          {Right_Po Line Number} = select6@{Po Line Number},",
				"          {Right_Po Number} = select6@{Po Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"initCapCols6 select(mapColumn(",
				"          {Authorization Status},",
				"          {Buyer Name},",
				"          {REQ Description} = Description,",
				"          {PO Item Description} = {Item Description},",
				"          {PO Number} = {Po Number},",
				"          Preparer = {Preparer Name},",
				"          {Project Number},",
				"          {ViaSat RMA} = {Rqdst$ams  Viasat Parent Rma},",
				"          {Arrived at Vendor Date} = {Rqdst$ams   Arrived At Vendor},",
				"          {RTV Hold End Date} = {Rqdst$ams   Hold End},",
				"          {RTV Hold Start Date} = {Rqdst$ams   Hold Start},",
				"          {Po Warranty Status} = {Rqdst$ams   In Warranty},",
				"          {Vendor Pn} = {Rqdst$ams   Vendor Pn},",
				"          {Vendor RMA} = {Rqdst$ams   Vendor Rma},",
				"          {RTV Supplier SN} = {Rqdst$ams   Vendor Sn},",
				"          {Viasat NMR} = {Rqdst$ams   Viasat Nmr},",
				"          {Approval Date} = {Requisition Approval Date},",
				"          {Requisition Creation Date},",
				"          {Task Number},",
				"          {REQ Number} = {Requisition Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols7",
				"FullOuterJoin3 select(mapColumn(",
				"          {Po Approved Date},",
				"          {Po Line Number},",
				"          {Po Number} = select10@{Po Number},",
				"          {Buyer Name} = select10@{Buyer Name},",
				"          {Closure Status},",
				"          FIRST_PO_APPROVAL_DATE,",
				"          {Po Item Description} = select10@{Po Item Description},",
				"          {Arrived at Vendor Date} = select10@{Arrived at Vendor Date},",
				"          {RTV Hold End Date} = select10@{RTV Hold End Date},",
				"          {RTV Hold Start Date} = select10@{RTV Hold Start Date},",
				"          {Po Warranty Status} = select10@{Po Warranty Status},",
				"          {Vendor Pn} = select10@{Vendor Pn},",
				"          {Vendor RMA} = select10@{Vendor RMA},",
				"          {RTV Supplier SN} = select10@{RTV Supplier SN},",
				"          {ViaSat NMR} = select10@{ViaSat NMR},",
				"          {ViaSat Parent RMA},",
				"          {ViaSat RMA} = select10@{ViaSat RMA},",
				"          {Po Line Creation Date},",
				"          {Po Line Type},",
				"          {Po Revision Number},",
				"          {Promised Date},",
				"          {Quantity Shipped},",
				"          {Requisition Approval Date},",
				"          {Requisition Created By},",
				"          {Req Create Date},",
				"          {Requisition Line Number},",
				"          {Requisition Number},",
				"          {On Time Delivery Date},",
				"          {Shipment Cancel Flag},",
				"          {Supplier Name},",
				"          {Task Number} = select10@{Task Number},",
				"          {Unit Price},",
				"          {Vendor Name},",
				"          {PO Closed Date},",
				"          {Right_Po Line Number},",
				"          {Left_Right_Po Number} = {Right_Po Number},",
				"          {Authorization Status},",
				"          {Right_Buyer Name} = {Buyer Name},",
				"          {REQ Description},",
				"          {Right_PO Item Description} = {PO Item Description},",
				"          {Right_PO Number} = {PO Number},",
				"          Preparer,",
				"          {Project Number},",
				"          {Right_ViaSat RMA} = {ViaSat RMA},",
				"          {Right_Arrived at Vendor Date} = {Arrived at Vendor Date},",
				"          {Right_RTV Hold End Date} = {RTV Hold End Date},",
				"          {Right_RTV Hold Start Date} = {RTV Hold Start Date},",
				"          {Right_Po Warranty Status} = {Po Warranty Status},",
				"          {Right_Vendor Pn} = {Vendor Pn},",
				"          {Right_Vendor RMA} = {Vendor RMA},",
				"          {Right_RTV Supplier SN} = {RTV Supplier SN},",
				"          {Right_Viasat NMR} = {Viasat NMR},",
				"          {Approval Date},",
				"          {Requisition Creation Date},",
				"          {Right_Task Number} = {Task Number},",
				"          {REQ Number}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"SELECTFINAL sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Duluth_Combined_Details.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1),",
				"     format: 'delimited',",
				"     fileSystem: 'duluth-combined-metrics',",
				"     folderPath: 'output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> DuluthCombinedDetails"
			]
		}
	}
}